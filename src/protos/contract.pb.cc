// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/contract.proto

#include "protos/contract.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protos_2fcontract_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fcontract_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetAttrByKeyReq;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fcontract_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetAttrByKeyRes;
}  // namespace protobuf_protos_2fcontract_2eproto
namespace zjchain {
namespace contract {
namespace protobuf {
class GetAttrByKeyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAttrByKeyReq>
      _instance;
} _GetAttrByKeyReq_default_instance_;
class GetAttrByKeyResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAttrByKeyRes>
      _instance;
} _GetAttrByKeyRes_default_instance_;
class ContractMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContractMessage>
      _instance;
} _ContractMessage_default_instance_;
}  // namespace protobuf
}  // namespace contract
}  // namespace zjchain
namespace protobuf_protos_2fcontract_2eproto {
static void InitDefaultsGetAttrByKeyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::contract::protobuf::_GetAttrByKeyReq_default_instance_;
    new (ptr) ::zjchain::contract::protobuf::GetAttrByKeyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::contract::protobuf::GetAttrByKeyReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAttrByKeyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAttrByKeyReq}, {}};

static void InitDefaultsGetAttrByKeyRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::contract::protobuf::_GetAttrByKeyRes_default_instance_;
    new (ptr) ::zjchain::contract::protobuf::GetAttrByKeyRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::contract::protobuf::GetAttrByKeyRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAttrByKeyRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAttrByKeyRes}, {}};

static void InitDefaultsContractMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::contract::protobuf::_ContractMessage_default_instance_;
    new (ptr) ::zjchain::contract::protobuf::ContractMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::contract::protobuf::ContractMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ContractMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsContractMessage}, {
      &protobuf_protos_2fcontract_2eproto::scc_info_GetAttrByKeyReq.base,
      &protobuf_protos_2fcontract_2eproto::scc_info_GetAttrByKeyRes.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetAttrByKeyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAttrByKeyRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ContractMessage.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::GetAttrByKeyReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::GetAttrByKeyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::GetAttrByKeyReq, call_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::GetAttrByKeyReq, attr_key_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::GetAttrByKeyRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::GetAttrByKeyRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::GetAttrByKeyRes, call_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::GetAttrByKeyRes, attr_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::GetAttrByKeyRes, attr_value_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::ContractMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::ContractMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::ContractMessage, get_attr_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::contract::protobuf::ContractMessage, get_attr_res_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::zjchain::contract::protobuf::GetAttrByKeyReq)},
  { 9, 17, sizeof(::zjchain::contract::protobuf::GetAttrByKeyRes)},
  { 20, 27, sizeof(::zjchain::contract::protobuf::ContractMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::contract::protobuf::_GetAttrByKeyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::contract::protobuf::_GetAttrByKeyRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::contract::protobuf::_ContractMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protos/contract.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025protos/contract.proto\022\031zjchain.contrac"
      "t.protobuf\"6\n\017GetAttrByKeyReq\022\021\n\tcall_ad"
      "dr\030\001 \001(\014\022\020\n\010attr_key\030\002 \001(\014\"J\n\017GetAttrByK"
      "eyRes\022\021\n\tcall_addr\030\001 \001(\014\022\020\n\010attr_key\030\002 \001"
      "(\014\022\022\n\nattr_value\030\003 \001(\014\"\225\001\n\017ContractMessa"
      "ge\022@\n\014get_attr_req\030\001 \001(\0132*.zjchain.contr"
      "act.protobuf.GetAttrByKeyReq\022@\n\014get_attr"
      "_res\030\002 \001(\0132*.zjchain.contract.protobuf.G"
      "etAttrByKeyRes"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 334);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protos/contract.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protos_2fcontract_2eproto
namespace zjchain {
namespace contract {
namespace protobuf {

// ===================================================================

void GetAttrByKeyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAttrByKeyReq::kCallAddrFieldNumber;
const int GetAttrByKeyReq::kAttrKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAttrByKeyReq::GetAttrByKeyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fcontract_2eproto::scc_info_GetAttrByKeyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.contract.protobuf.GetAttrByKeyReq)
}
GetAttrByKeyReq::GetAttrByKeyReq(const GetAttrByKeyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  call_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_call_addr()) {
    call_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.call_addr_);
  }
  attr_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attr_key()) {
    attr_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_key_);
  }
  // @@protoc_insertion_point(copy_constructor:zjchain.contract.protobuf.GetAttrByKeyReq)
}

void GetAttrByKeyReq::SharedCtor() {
  call_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAttrByKeyReq::~GetAttrByKeyReq() {
  // @@protoc_insertion_point(destructor:zjchain.contract.protobuf.GetAttrByKeyReq)
  SharedDtor();
}

void GetAttrByKeyReq::SharedDtor() {
  call_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAttrByKeyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAttrByKeyReq::descriptor() {
  ::protobuf_protos_2fcontract_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fcontract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAttrByKeyReq& GetAttrByKeyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fcontract_2eproto::scc_info_GetAttrByKeyReq.base);
  return *internal_default_instance();
}


void GetAttrByKeyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.contract.protobuf.GetAttrByKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      call_addr_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      attr_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAttrByKeyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.contract.protobuf.GetAttrByKeyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes call_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_call_addr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attr_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attr_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.contract.protobuf.GetAttrByKeyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.contract.protobuf.GetAttrByKeyReq)
  return false;
#undef DO_
}

void GetAttrByKeyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.contract.protobuf.GetAttrByKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes call_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->call_addr(), output);
  }

  // optional bytes attr_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->attr_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.contract.protobuf.GetAttrByKeyReq)
}

::google::protobuf::uint8* GetAttrByKeyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.contract.protobuf.GetAttrByKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes call_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->call_addr(), target);
  }

  // optional bytes attr_key = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->attr_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.contract.protobuf.GetAttrByKeyReq)
  return target;
}

size_t GetAttrByKeyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.contract.protobuf.GetAttrByKeyReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes call_addr = 1;
    if (has_call_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->call_addr());
    }

    // optional bytes attr_key = 2;
    if (has_attr_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attr_key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAttrByKeyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.contract.protobuf.GetAttrByKeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAttrByKeyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAttrByKeyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.contract.protobuf.GetAttrByKeyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.contract.protobuf.GetAttrByKeyReq)
    MergeFrom(*source);
  }
}

void GetAttrByKeyReq::MergeFrom(const GetAttrByKeyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.contract.protobuf.GetAttrByKeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_call_addr();
      call_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.call_addr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_attr_key();
      attr_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_key_);
    }
  }
}

void GetAttrByKeyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.contract.protobuf.GetAttrByKeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAttrByKeyReq::CopyFrom(const GetAttrByKeyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.contract.protobuf.GetAttrByKeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAttrByKeyReq::IsInitialized() const {
  return true;
}

void GetAttrByKeyReq::Swap(GetAttrByKeyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAttrByKeyReq::InternalSwap(GetAttrByKeyReq* other) {
  using std::swap;
  call_addr_.Swap(&other->call_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attr_key_.Swap(&other->attr_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAttrByKeyReq::GetMetadata() const {
  protobuf_protos_2fcontract_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fcontract_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAttrByKeyRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAttrByKeyRes::kCallAddrFieldNumber;
const int GetAttrByKeyRes::kAttrKeyFieldNumber;
const int GetAttrByKeyRes::kAttrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAttrByKeyRes::GetAttrByKeyRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fcontract_2eproto::scc_info_GetAttrByKeyRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.contract.protobuf.GetAttrByKeyRes)
}
GetAttrByKeyRes::GetAttrByKeyRes(const GetAttrByKeyRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  call_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_call_addr()) {
    call_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.call_addr_);
  }
  attr_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attr_key()) {
    attr_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_key_);
  }
  attr_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attr_value()) {
    attr_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_value_);
  }
  // @@protoc_insertion_point(copy_constructor:zjchain.contract.protobuf.GetAttrByKeyRes)
}

void GetAttrByKeyRes::SharedCtor() {
  call_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAttrByKeyRes::~GetAttrByKeyRes() {
  // @@protoc_insertion_point(destructor:zjchain.contract.protobuf.GetAttrByKeyRes)
  SharedDtor();
}

void GetAttrByKeyRes::SharedDtor() {
  call_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAttrByKeyRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAttrByKeyRes::descriptor() {
  ::protobuf_protos_2fcontract_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fcontract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAttrByKeyRes& GetAttrByKeyRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fcontract_2eproto::scc_info_GetAttrByKeyRes.base);
  return *internal_default_instance();
}


void GetAttrByKeyRes::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.contract.protobuf.GetAttrByKeyRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      call_addr_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      attr_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      attr_value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAttrByKeyRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.contract.protobuf.GetAttrByKeyRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes call_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_call_addr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attr_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attr_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attr_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attr_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.contract.protobuf.GetAttrByKeyRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.contract.protobuf.GetAttrByKeyRes)
  return false;
#undef DO_
}

void GetAttrByKeyRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.contract.protobuf.GetAttrByKeyRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes call_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->call_addr(), output);
  }

  // optional bytes attr_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->attr_key(), output);
  }

  // optional bytes attr_value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->attr_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.contract.protobuf.GetAttrByKeyRes)
}

::google::protobuf::uint8* GetAttrByKeyRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.contract.protobuf.GetAttrByKeyRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes call_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->call_addr(), target);
  }

  // optional bytes attr_key = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->attr_key(), target);
  }

  // optional bytes attr_value = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->attr_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.contract.protobuf.GetAttrByKeyRes)
  return target;
}

size_t GetAttrByKeyRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.contract.protobuf.GetAttrByKeyRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes call_addr = 1;
    if (has_call_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->call_addr());
    }

    // optional bytes attr_key = 2;
    if (has_attr_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attr_key());
    }

    // optional bytes attr_value = 3;
    if (has_attr_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attr_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAttrByKeyRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.contract.protobuf.GetAttrByKeyRes)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAttrByKeyRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAttrByKeyRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.contract.protobuf.GetAttrByKeyRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.contract.protobuf.GetAttrByKeyRes)
    MergeFrom(*source);
  }
}

void GetAttrByKeyRes::MergeFrom(const GetAttrByKeyRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.contract.protobuf.GetAttrByKeyRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_call_addr();
      call_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.call_addr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_attr_key();
      attr_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_attr_value();
      attr_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_value_);
    }
  }
}

void GetAttrByKeyRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.contract.protobuf.GetAttrByKeyRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAttrByKeyRes::CopyFrom(const GetAttrByKeyRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.contract.protobuf.GetAttrByKeyRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAttrByKeyRes::IsInitialized() const {
  return true;
}

void GetAttrByKeyRes::Swap(GetAttrByKeyRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAttrByKeyRes::InternalSwap(GetAttrByKeyRes* other) {
  using std::swap;
  call_addr_.Swap(&other->call_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attr_key_.Swap(&other->attr_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attr_value_.Swap(&other->attr_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAttrByKeyRes::GetMetadata() const {
  protobuf_protos_2fcontract_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fcontract_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContractMessage::InitAsDefaultInstance() {
  ::zjchain::contract::protobuf::_ContractMessage_default_instance_._instance.get_mutable()->get_attr_req_ = const_cast< ::zjchain::contract::protobuf::GetAttrByKeyReq*>(
      ::zjchain::contract::protobuf::GetAttrByKeyReq::internal_default_instance());
  ::zjchain::contract::protobuf::_ContractMessage_default_instance_._instance.get_mutable()->get_attr_res_ = const_cast< ::zjchain::contract::protobuf::GetAttrByKeyRes*>(
      ::zjchain::contract::protobuf::GetAttrByKeyRes::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContractMessage::kGetAttrReqFieldNumber;
const int ContractMessage::kGetAttrResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContractMessage::ContractMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fcontract_2eproto::scc_info_ContractMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.contract.protobuf.ContractMessage)
}
ContractMessage::ContractMessage(const ContractMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_get_attr_req()) {
    get_attr_req_ = new ::zjchain::contract::protobuf::GetAttrByKeyReq(*from.get_attr_req_);
  } else {
    get_attr_req_ = NULL;
  }
  if (from.has_get_attr_res()) {
    get_attr_res_ = new ::zjchain::contract::protobuf::GetAttrByKeyRes(*from.get_attr_res_);
  } else {
    get_attr_res_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zjchain.contract.protobuf.ContractMessage)
}

void ContractMessage::SharedCtor() {
  ::memset(&get_attr_req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&get_attr_res_) -
      reinterpret_cast<char*>(&get_attr_req_)) + sizeof(get_attr_res_));
}

ContractMessage::~ContractMessage() {
  // @@protoc_insertion_point(destructor:zjchain.contract.protobuf.ContractMessage)
  SharedDtor();
}

void ContractMessage::SharedDtor() {
  if (this != internal_default_instance()) delete get_attr_req_;
  if (this != internal_default_instance()) delete get_attr_res_;
}

void ContractMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ContractMessage::descriptor() {
  ::protobuf_protos_2fcontract_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fcontract_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContractMessage& ContractMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fcontract_2eproto::scc_info_ContractMessage.base);
  return *internal_default_instance();
}


void ContractMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.contract.protobuf.ContractMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(get_attr_req_ != NULL);
      get_attr_req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(get_attr_res_ != NULL);
      get_attr_res_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ContractMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.contract.protobuf.ContractMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .zjchain.contract.protobuf.GetAttrByKeyReq get_attr_req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_attr_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zjchain.contract.protobuf.GetAttrByKeyRes get_attr_res = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_attr_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.contract.protobuf.ContractMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.contract.protobuf.ContractMessage)
  return false;
#undef DO_
}

void ContractMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.contract.protobuf.ContractMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zjchain.contract.protobuf.GetAttrByKeyReq get_attr_req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_get_attr_req(), output);
  }

  // optional .zjchain.contract.protobuf.GetAttrByKeyRes get_attr_res = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_get_attr_res(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.contract.protobuf.ContractMessage)
}

::google::protobuf::uint8* ContractMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.contract.protobuf.ContractMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zjchain.contract.protobuf.GetAttrByKeyReq get_attr_req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_get_attr_req(), deterministic, target);
  }

  // optional .zjchain.contract.protobuf.GetAttrByKeyRes get_attr_res = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_get_attr_res(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.contract.protobuf.ContractMessage)
  return target;
}

size_t ContractMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.contract.protobuf.ContractMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .zjchain.contract.protobuf.GetAttrByKeyReq get_attr_req = 1;
    if (has_get_attr_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *get_attr_req_);
    }

    // optional .zjchain.contract.protobuf.GetAttrByKeyRes get_attr_res = 2;
    if (has_get_attr_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *get_attr_res_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContractMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.contract.protobuf.ContractMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ContractMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContractMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.contract.protobuf.ContractMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.contract.protobuf.ContractMessage)
    MergeFrom(*source);
  }
}

void ContractMessage::MergeFrom(const ContractMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.contract.protobuf.ContractMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_get_attr_req()->::zjchain::contract::protobuf::GetAttrByKeyReq::MergeFrom(from.get_attr_req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_get_attr_res()->::zjchain::contract::protobuf::GetAttrByKeyRes::MergeFrom(from.get_attr_res());
    }
  }
}

void ContractMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.contract.protobuf.ContractMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContractMessage::CopyFrom(const ContractMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.contract.protobuf.ContractMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContractMessage::IsInitialized() const {
  return true;
}

void ContractMessage::Swap(ContractMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContractMessage::InternalSwap(ContractMessage* other) {
  using std::swap;
  swap(get_attr_req_, other->get_attr_req_);
  swap(get_attr_res_, other->get_attr_res_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ContractMessage::GetMetadata() const {
  protobuf_protos_2fcontract_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fcontract_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace contract
}  // namespace zjchain
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::contract::protobuf::GetAttrByKeyReq* Arena::CreateMaybeMessage< ::zjchain::contract::protobuf::GetAttrByKeyReq >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::contract::protobuf::GetAttrByKeyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::contract::protobuf::GetAttrByKeyRes* Arena::CreateMaybeMessage< ::zjchain::contract::protobuf::GetAttrByKeyRes >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::contract::protobuf::GetAttrByKeyRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::contract::protobuf::ContractMessage* Arena::CreateMaybeMessage< ::zjchain::contract::protobuf::ContractMessage >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::contract::protobuf::ContractMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
