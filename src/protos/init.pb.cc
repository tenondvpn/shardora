// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/init.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protos/init.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zjchain {
namespace init {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* GetAddressInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAddressInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAddressInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAddressInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvalidLeaderPools_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvalidLeaderPools_reflection_ = NULL;
const ::google::protobuf::Descriptor* GenesisInitBlsInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GenesisInitBlsInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* InitMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InitMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_protos_2finit_2eproto() {
  protobuf_AddDesc_protos_2finit_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protos/init.proto");
  GOOGLE_CHECK(file != NULL);
  GetAddressInfoRequest_descriptor_ = file->message_type(0);
  static const int GetAddressInfoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressInfoRequest, id_),
  };
  GetAddressInfoRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAddressInfoRequest_descriptor_,
      GetAddressInfoRequest::default_instance_,
      GetAddressInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressInfoRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressInfoRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAddressInfoRequest));
  GetAddressInfoResponse_descriptor_ = file->message_type(1);
  static const int GetAddressInfoResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressInfoResponse, block_),
  };
  GetAddressInfoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAddressInfoResponse_descriptor_,
      GetAddressInfoResponse::default_instance_,
      GetAddressInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressInfoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressInfoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAddressInfoResponse));
  InvalidLeaderPools_descriptor_ = file->message_type(2);
  static const int InvalidLeaderPools_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvalidLeaderPools, pools_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvalidLeaderPools, elect_height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvalidLeaderPools, member_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvalidLeaderPools, mod_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvalidLeaderPools, leader_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvalidLeaderPools, version_),
  };
  InvalidLeaderPools_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvalidLeaderPools_descriptor_,
      InvalidLeaderPools::default_instance_,
      InvalidLeaderPools_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvalidLeaderPools, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvalidLeaderPools, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvalidLeaderPools));
  GenesisInitBlsInfo_descriptor_ = file->message_type(3);
  static const int GenesisInitBlsInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenesisInitBlsInfo, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenesisInitBlsInfo, shard_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenesisInitBlsInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenesisInitBlsInfo, bls_enc_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenesisInitBlsInfo, bls_hash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenesisInitBlsInfo, join_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenesisInitBlsInfo, local_poly_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenesisInitBlsInfo, prikey_),
  };
  GenesisInitBlsInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GenesisInitBlsInfo_descriptor_,
      GenesisInitBlsInfo::default_instance_,
      GenesisInitBlsInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenesisInitBlsInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenesisInitBlsInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GenesisInitBlsInfo));
  InitMessage_descriptor_ = file->message_type(4);
  static const int InitMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitMessage, addr_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitMessage, addr_res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitMessage, pools_),
  };
  InitMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InitMessage_descriptor_,
      InitMessage::default_instance_,
      InitMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InitMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protos_2finit_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAddressInfoRequest_descriptor_, &GetAddressInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAddressInfoResponse_descriptor_, &GetAddressInfoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvalidLeaderPools_descriptor_, &InvalidLeaderPools::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GenesisInitBlsInfo_descriptor_, &GenesisInitBlsInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InitMessage_descriptor_, &InitMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protos_2finit_2eproto() {
  delete GetAddressInfoRequest::default_instance_;
  delete GetAddressInfoRequest_reflection_;
  delete GetAddressInfoResponse::default_instance_;
  delete GetAddressInfoResponse_reflection_;
  delete InvalidLeaderPools::default_instance_;
  delete InvalidLeaderPools_reflection_;
  delete GenesisInitBlsInfo::default_instance_;
  delete GenesisInitBlsInfo_reflection_;
  delete InitMessage::default_instance_;
  delete InitMessage_reflection_;
}

void protobuf_AddDesc_protos_2finit_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::zjchain::bls::protobuf::protobuf_AddDesc_protos_2fbls_2eproto();
  ::zjchain::block::protobuf::protobuf_AddDesc_protos_2fblock_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021protos/init.proto\022\025zjchain.init.protob"
    "uf\032\020protos/bls.proto\032\022protos/block.proto"
    "\"#\n\025GetAddressInfoRequest\022\n\n\002id\030\001 \001(\014\"F\n"
    "\026GetAddressInfoResponse\022,\n\005block\030\001 \001(\0132\035"
    ".zjchain.block.protobuf.Block\"\205\001\n\022Invali"
    "dLeaderPools\022\r\n\005pools\030\001 \003(\005\022\024\n\014elect_hei"
    "ght\030\002 \001(\004\022\024\n\014member_index\030\003 \001(\r\022\017\n\007mod_n"
    "um\030\004 \001(\005\022\022\n\nleader_idx\030\005 \001(\r\022\017\n\007version\030"
    "\006 \001(\r\"\355\001\n\022GenesisInitBlsInfo\022\016\n\006height\030\001"
    " \001(\004\022\020\n\010shard_id\030\002 \001(\r\022\n\n\002id\030\003 \001(\014\022\024\n\014bl"
    "s_enc_data\030\004 \001(\014\022\020\n\010bls_hash\030\005 \001(\014\0226\n\tjo"
    "in_info\030\006 \001(\0132#.zjchain.bls.protobuf.Joi"
    "nElectInfo\0229\n\nlocal_poly\030\007 \001(\0132%.zjchain"
    ".bls.protobuf.LocalPolynomial\022\016\n\006prikey\030"
    "\010 \001(\014\"\310\001\n\013InitMessage\022>\n\010addr_req\030\001 \001(\0132"
    ",.zjchain.init.protobuf.GetAddressInfoRe"
    "quest\022\?\n\010addr_res\030\002 \001(\0132-.zjchain.init.p"
    "rotobuf.GetAddressInfoResponse\0228\n\005pools\030"
    "\003 \001(\0132).zjchain.init.protobuf.InvalidLea"
    "derPools", 768);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protos/init.proto", &protobuf_RegisterTypes);
  GetAddressInfoRequest::default_instance_ = new GetAddressInfoRequest();
  GetAddressInfoResponse::default_instance_ = new GetAddressInfoResponse();
  InvalidLeaderPools::default_instance_ = new InvalidLeaderPools();
  GenesisInitBlsInfo::default_instance_ = new GenesisInitBlsInfo();
  InitMessage::default_instance_ = new InitMessage();
  GetAddressInfoRequest::default_instance_->InitAsDefaultInstance();
  GetAddressInfoResponse::default_instance_->InitAsDefaultInstance();
  InvalidLeaderPools::default_instance_->InitAsDefaultInstance();
  GenesisInitBlsInfo::default_instance_->InitAsDefaultInstance();
  InitMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protos_2finit_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protos_2finit_2eproto {
  StaticDescriptorInitializer_protos_2finit_2eproto() {
    protobuf_AddDesc_protos_2finit_2eproto();
  }
} static_descriptor_initializer_protos_2finit_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int GetAddressInfoRequest::kIdFieldNumber;
#endif  // !_MSC_VER

GetAddressInfoRequest::GetAddressInfoRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetAddressInfoRequest::InitAsDefaultInstance() {
}

GetAddressInfoRequest::GetAddressInfoRequest(const GetAddressInfoRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetAddressInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAddressInfoRequest::~GetAddressInfoRequest() {
  SharedDtor();
}

void GetAddressInfoRequest::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (this != default_instance_) {
  }
}

void GetAddressInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAddressInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAddressInfoRequest_descriptor_;
}

const GetAddressInfoRequest& GetAddressInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2finit_2eproto();
  return *default_instance_;
}

GetAddressInfoRequest* GetAddressInfoRequest::default_instance_ = NULL;

GetAddressInfoRequest* GetAddressInfoRequest::New() const {
  return new GetAddressInfoRequest;
}

void GetAddressInfoRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetAddressInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetAddressInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetAddressInfoRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes id = 1;
  if (has_id()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetAddressInfoRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAddressInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetAddressInfoRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetAddressInfoRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetAddressInfoRequest::MergeFrom(const GetAddressInfoRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetAddressInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressInfoRequest::CopyFrom(const GetAddressInfoRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressInfoRequest::IsInitialized() const {

  return true;
}

void GetAddressInfoRequest::Swap(GetAddressInfoRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetAddressInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAddressInfoRequest_descriptor_;
  metadata.reflection = GetAddressInfoRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetAddressInfoResponse::kBlockFieldNumber;
#endif  // !_MSC_VER

GetAddressInfoResponse::GetAddressInfoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetAddressInfoResponse::InitAsDefaultInstance() {
  block_ = const_cast< ::zjchain::block::protobuf::Block*>(&::zjchain::block::protobuf::Block::default_instance());
}

GetAddressInfoResponse::GetAddressInfoResponse(const GetAddressInfoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetAddressInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  block_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAddressInfoResponse::~GetAddressInfoResponse() {
  SharedDtor();
}

void GetAddressInfoResponse::SharedDtor() {
  if (this != default_instance_) {
    delete block_;
  }
}

void GetAddressInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAddressInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAddressInfoResponse_descriptor_;
}

const GetAddressInfoResponse& GetAddressInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2finit_2eproto();
  return *default_instance_;
}

GetAddressInfoResponse* GetAddressInfoResponse::default_instance_ = NULL;

GetAddressInfoResponse* GetAddressInfoResponse::New() const {
  return new GetAddressInfoResponse;
}

void GetAddressInfoResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_block()) {
      if (block_ != NULL) block_->::zjchain::block::protobuf::Block::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetAddressInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .zjchain.block.protobuf.Block block = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_block()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetAddressInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .zjchain.block.protobuf.Block block = 1;
  if (has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->block(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetAddressInfoResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .zjchain.block.protobuf.Block block = 1;
  if (has_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->block(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetAddressInfoResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .zjchain.block.protobuf.Block block = 1;
    if (has_block()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->block());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAddressInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetAddressInfoResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetAddressInfoResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetAddressInfoResponse::MergeFrom(const GetAddressInfoResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_block()) {
      mutable_block()->::zjchain::block::protobuf::Block::MergeFrom(from.block());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetAddressInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressInfoResponse::CopyFrom(const GetAddressInfoResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressInfoResponse::IsInitialized() const {

  return true;
}

void GetAddressInfoResponse::Swap(GetAddressInfoResponse* other) {
  if (other != this) {
    std::swap(block_, other->block_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetAddressInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAddressInfoResponse_descriptor_;
  metadata.reflection = GetAddressInfoResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InvalidLeaderPools::kPoolsFieldNumber;
const int InvalidLeaderPools::kElectHeightFieldNumber;
const int InvalidLeaderPools::kMemberIndexFieldNumber;
const int InvalidLeaderPools::kModNumFieldNumber;
const int InvalidLeaderPools::kLeaderIdxFieldNumber;
const int InvalidLeaderPools::kVersionFieldNumber;
#endif  // !_MSC_VER

InvalidLeaderPools::InvalidLeaderPools()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InvalidLeaderPools::InitAsDefaultInstance() {
}

InvalidLeaderPools::InvalidLeaderPools(const InvalidLeaderPools& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InvalidLeaderPools::SharedCtor() {
  _cached_size_ = 0;
  elect_height_ = GOOGLE_ULONGLONG(0);
  member_index_ = 0u;
  mod_num_ = 0;
  leader_idx_ = 0u;
  version_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvalidLeaderPools::~InvalidLeaderPools() {
  SharedDtor();
}

void InvalidLeaderPools::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InvalidLeaderPools::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvalidLeaderPools::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvalidLeaderPools_descriptor_;
}

const InvalidLeaderPools& InvalidLeaderPools::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2finit_2eproto();
  return *default_instance_;
}

InvalidLeaderPools* InvalidLeaderPools::default_instance_ = NULL;

InvalidLeaderPools* InvalidLeaderPools::New() const {
  return new InvalidLeaderPools;
}

void InvalidLeaderPools::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    elect_height_ = GOOGLE_ULONGLONG(0);
    member_index_ = 0u;
    mod_num_ = 0;
    leader_idx_ = 0u;
    version_ = 0u;
  }
  pools_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InvalidLeaderPools::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 pools = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pools:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_pools())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pools())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_pools;
        if (input->ExpectTag(16)) goto parse_elect_height;
        break;
      }

      // optional uint64 elect_height = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_elect_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elect_height_)));
          set_has_elect_height();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_member_index;
        break;
      }

      // optional uint32 member_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_member_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &member_index_)));
          set_has_member_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_mod_num;
        break;
      }

      // optional int32 mod_num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mod_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mod_num_)));
          set_has_mod_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_leader_idx;
        break;
      }

      // optional uint32 leader_idx = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leader_idx_)));
          set_has_leader_idx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_version;
        break;
      }

      // optional uint32 version = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InvalidLeaderPools::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 pools = 1;
  for (int i = 0; i < this->pools_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->pools(i), output);
  }

  // optional uint64 elect_height = 2;
  if (has_elect_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->elect_height(), output);
  }

  // optional uint32 member_index = 3;
  if (has_member_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->member_index(), output);
  }

  // optional int32 mod_num = 4;
  if (has_mod_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mod_num(), output);
  }

  // optional uint32 leader_idx = 5;
  if (has_leader_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->leader_idx(), output);
  }

  // optional uint32 version = 6;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InvalidLeaderPools::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 pools = 1;
  for (int i = 0; i < this->pools_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->pools(i), target);
  }

  // optional uint64 elect_height = 2;
  if (has_elect_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->elect_height(), target);
  }

  // optional uint32 member_index = 3;
  if (has_member_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->member_index(), target);
  }

  // optional int32 mod_num = 4;
  if (has_mod_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mod_num(), target);
  }

  // optional uint32 leader_idx = 5;
  if (has_leader_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->leader_idx(), target);
  }

  // optional uint32 version = 6;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InvalidLeaderPools::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint64 elect_height = 2;
    if (has_elect_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->elect_height());
    }

    // optional uint32 member_index = 3;
    if (has_member_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->member_index());
    }

    // optional int32 mod_num = 4;
    if (has_mod_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mod_num());
    }

    // optional uint32 leader_idx = 5;
    if (has_leader_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->leader_idx());
    }

    // optional uint32 version = 6;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

  }
  // repeated int32 pools = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->pools_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pools(i));
    }
    total_size += 1 * this->pools_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvalidLeaderPools::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InvalidLeaderPools* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InvalidLeaderPools*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InvalidLeaderPools::MergeFrom(const InvalidLeaderPools& from) {
  GOOGLE_CHECK_NE(&from, this);
  pools_.MergeFrom(from.pools_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_elect_height()) {
      set_elect_height(from.elect_height());
    }
    if (from.has_member_index()) {
      set_member_index(from.member_index());
    }
    if (from.has_mod_num()) {
      set_mod_num(from.mod_num());
    }
    if (from.has_leader_idx()) {
      set_leader_idx(from.leader_idx());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InvalidLeaderPools::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvalidLeaderPools::CopyFrom(const InvalidLeaderPools& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvalidLeaderPools::IsInitialized() const {

  return true;
}

void InvalidLeaderPools::Swap(InvalidLeaderPools* other) {
  if (other != this) {
    pools_.Swap(&other->pools_);
    std::swap(elect_height_, other->elect_height_);
    std::swap(member_index_, other->member_index_);
    std::swap(mod_num_, other->mod_num_);
    std::swap(leader_idx_, other->leader_idx_);
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InvalidLeaderPools::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvalidLeaderPools_descriptor_;
  metadata.reflection = InvalidLeaderPools_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GenesisInitBlsInfo::kHeightFieldNumber;
const int GenesisInitBlsInfo::kShardIdFieldNumber;
const int GenesisInitBlsInfo::kIdFieldNumber;
const int GenesisInitBlsInfo::kBlsEncDataFieldNumber;
const int GenesisInitBlsInfo::kBlsHashFieldNumber;
const int GenesisInitBlsInfo::kJoinInfoFieldNumber;
const int GenesisInitBlsInfo::kLocalPolyFieldNumber;
const int GenesisInitBlsInfo::kPrikeyFieldNumber;
#endif  // !_MSC_VER

GenesisInitBlsInfo::GenesisInitBlsInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GenesisInitBlsInfo::InitAsDefaultInstance() {
  join_info_ = const_cast< ::zjchain::bls::protobuf::JoinElectInfo*>(&::zjchain::bls::protobuf::JoinElectInfo::default_instance());
  local_poly_ = const_cast< ::zjchain::bls::protobuf::LocalPolynomial*>(&::zjchain::bls::protobuf::LocalPolynomial::default_instance());
}

GenesisInitBlsInfo::GenesisInitBlsInfo(const GenesisInitBlsInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GenesisInitBlsInfo::SharedCtor() {
  _cached_size_ = 0;
  height_ = GOOGLE_ULONGLONG(0);
  shard_id_ = 0u;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bls_enc_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bls_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  join_info_ = NULL;
  local_poly_ = NULL;
  prikey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GenesisInitBlsInfo::~GenesisInitBlsInfo() {
  SharedDtor();
}

void GenesisInitBlsInfo::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (bls_enc_data_ != &::google::protobuf::internal::kEmptyString) {
    delete bls_enc_data_;
  }
  if (bls_hash_ != &::google::protobuf::internal::kEmptyString) {
    delete bls_hash_;
  }
  if (prikey_ != &::google::protobuf::internal::kEmptyString) {
    delete prikey_;
  }
  if (this != default_instance_) {
    delete join_info_;
    delete local_poly_;
  }
}

void GenesisInitBlsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenesisInitBlsInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GenesisInitBlsInfo_descriptor_;
}

const GenesisInitBlsInfo& GenesisInitBlsInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2finit_2eproto();
  return *default_instance_;
}

GenesisInitBlsInfo* GenesisInitBlsInfo::default_instance_ = NULL;

GenesisInitBlsInfo* GenesisInitBlsInfo::New() const {
  return new GenesisInitBlsInfo;
}

void GenesisInitBlsInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    height_ = GOOGLE_ULONGLONG(0);
    shard_id_ = 0u;
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_bls_enc_data()) {
      if (bls_enc_data_ != &::google::protobuf::internal::kEmptyString) {
        bls_enc_data_->clear();
      }
    }
    if (has_bls_hash()) {
      if (bls_hash_ != &::google::protobuf::internal::kEmptyString) {
        bls_hash_->clear();
      }
    }
    if (has_join_info()) {
      if (join_info_ != NULL) join_info_->::zjchain::bls::protobuf::JoinElectInfo::Clear();
    }
    if (has_local_poly()) {
      if (local_poly_ != NULL) local_poly_->::zjchain::bls::protobuf::LocalPolynomial::Clear();
    }
    if (has_prikey()) {
      if (prikey_ != &::google::protobuf::internal::kEmptyString) {
        prikey_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GenesisInitBlsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 height = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_shard_id;
        break;
      }

      // optional uint32 shard_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shard_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_id_)));
          set_has_shard_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_id;
        break;
      }

      // optional bytes id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_bls_enc_data;
        break;
      }

      // optional bytes bls_enc_data = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bls_enc_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bls_enc_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_bls_hash;
        break;
      }

      // optional bytes bls_hash = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bls_hash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bls_hash()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_join_info;
        break;
      }

      // optional .zjchain.bls.protobuf.JoinElectInfo join_info = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_join_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_join_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_local_poly;
        break;
      }

      // optional .zjchain.bls.protobuf.LocalPolynomial local_poly = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_local_poly:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_local_poly()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_prikey;
        break;
      }

      // optional bytes prikey = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prikey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prikey()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GenesisInitBlsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 height = 1;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->height(), output);
  }

  // optional uint32 shard_id = 2;
  if (has_shard_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->shard_id(), output);
  }

  // optional bytes id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->id(), output);
  }

  // optional bytes bls_enc_data = 4;
  if (has_bls_enc_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->bls_enc_data(), output);
  }

  // optional bytes bls_hash = 5;
  if (has_bls_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      5, this->bls_hash(), output);
  }

  // optional .zjchain.bls.protobuf.JoinElectInfo join_info = 6;
  if (has_join_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->join_info(), output);
  }

  // optional .zjchain.bls.protobuf.LocalPolynomial local_poly = 7;
  if (has_local_poly()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->local_poly(), output);
  }

  // optional bytes prikey = 8;
  if (has_prikey()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      8, this->prikey(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GenesisInitBlsInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 height = 1;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->height(), target);
  }

  // optional uint32 shard_id = 2;
  if (has_shard_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->shard_id(), target);
  }

  // optional bytes id = 3;
  if (has_id()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->id(), target);
  }

  // optional bytes bls_enc_data = 4;
  if (has_bls_enc_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->bls_enc_data(), target);
  }

  // optional bytes bls_hash = 5;
  if (has_bls_hash()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->bls_hash(), target);
  }

  // optional .zjchain.bls.protobuf.JoinElectInfo join_info = 6;
  if (has_join_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->join_info(), target);
  }

  // optional .zjchain.bls.protobuf.LocalPolynomial local_poly = 7;
  if (has_local_poly()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->local_poly(), target);
  }

  // optional bytes prikey = 8;
  if (has_prikey()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->prikey(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GenesisInitBlsInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 height = 1;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->height());
    }

    // optional uint32 shard_id = 2;
    if (has_shard_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shard_id());
    }

    // optional bytes id = 3;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id());
    }

    // optional bytes bls_enc_data = 4;
    if (has_bls_enc_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bls_enc_data());
    }

    // optional bytes bls_hash = 5;
    if (has_bls_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bls_hash());
    }

    // optional .zjchain.bls.protobuf.JoinElectInfo join_info = 6;
    if (has_join_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->join_info());
    }

    // optional .zjchain.bls.protobuf.LocalPolynomial local_poly = 7;
    if (has_local_poly()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->local_poly());
    }

    // optional bytes prikey = 8;
    if (has_prikey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prikey());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenesisInitBlsInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GenesisInitBlsInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GenesisInitBlsInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GenesisInitBlsInfo::MergeFrom(const GenesisInitBlsInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_shard_id()) {
      set_shard_id(from.shard_id());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_bls_enc_data()) {
      set_bls_enc_data(from.bls_enc_data());
    }
    if (from.has_bls_hash()) {
      set_bls_hash(from.bls_hash());
    }
    if (from.has_join_info()) {
      mutable_join_info()->::zjchain::bls::protobuf::JoinElectInfo::MergeFrom(from.join_info());
    }
    if (from.has_local_poly()) {
      mutable_local_poly()->::zjchain::bls::protobuf::LocalPolynomial::MergeFrom(from.local_poly());
    }
    if (from.has_prikey()) {
      set_prikey(from.prikey());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GenesisInitBlsInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenesisInitBlsInfo::CopyFrom(const GenesisInitBlsInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenesisInitBlsInfo::IsInitialized() const {

  return true;
}

void GenesisInitBlsInfo::Swap(GenesisInitBlsInfo* other) {
  if (other != this) {
    std::swap(height_, other->height_);
    std::swap(shard_id_, other->shard_id_);
    std::swap(id_, other->id_);
    std::swap(bls_enc_data_, other->bls_enc_data_);
    std::swap(bls_hash_, other->bls_hash_);
    std::swap(join_info_, other->join_info_);
    std::swap(local_poly_, other->local_poly_);
    std::swap(prikey_, other->prikey_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GenesisInitBlsInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GenesisInitBlsInfo_descriptor_;
  metadata.reflection = GenesisInitBlsInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InitMessage::kAddrReqFieldNumber;
const int InitMessage::kAddrResFieldNumber;
const int InitMessage::kPoolsFieldNumber;
#endif  // !_MSC_VER

InitMessage::InitMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InitMessage::InitAsDefaultInstance() {
  addr_req_ = const_cast< ::zjchain::init::protobuf::GetAddressInfoRequest*>(&::zjchain::init::protobuf::GetAddressInfoRequest::default_instance());
  addr_res_ = const_cast< ::zjchain::init::protobuf::GetAddressInfoResponse*>(&::zjchain::init::protobuf::GetAddressInfoResponse::default_instance());
  pools_ = const_cast< ::zjchain::init::protobuf::InvalidLeaderPools*>(&::zjchain::init::protobuf::InvalidLeaderPools::default_instance());
}

InitMessage::InitMessage(const InitMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InitMessage::SharedCtor() {
  _cached_size_ = 0;
  addr_req_ = NULL;
  addr_res_ = NULL;
  pools_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InitMessage::~InitMessage() {
  SharedDtor();
}

void InitMessage::SharedDtor() {
  if (this != default_instance_) {
    delete addr_req_;
    delete addr_res_;
    delete pools_;
  }
}

void InitMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InitMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InitMessage_descriptor_;
}

const InitMessage& InitMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2finit_2eproto();
  return *default_instance_;
}

InitMessage* InitMessage::default_instance_ = NULL;

InitMessage* InitMessage::New() const {
  return new InitMessage;
}

void InitMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_addr_req()) {
      if (addr_req_ != NULL) addr_req_->::zjchain::init::protobuf::GetAddressInfoRequest::Clear();
    }
    if (has_addr_res()) {
      if (addr_res_ != NULL) addr_res_->::zjchain::init::protobuf::GetAddressInfoResponse::Clear();
    }
    if (has_pools()) {
      if (pools_ != NULL) pools_->::zjchain::init::protobuf::InvalidLeaderPools::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InitMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .zjchain.init.protobuf.GetAddressInfoRequest addr_req = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addr_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_addr_res;
        break;
      }

      // optional .zjchain.init.protobuf.GetAddressInfoResponse addr_res = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_addr_res:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addr_res()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_pools;
        break;
      }

      // optional .zjchain.init.protobuf.InvalidLeaderPools pools = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pools:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pools()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InitMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .zjchain.init.protobuf.GetAddressInfoRequest addr_req = 1;
  if (has_addr_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->addr_req(), output);
  }

  // optional .zjchain.init.protobuf.GetAddressInfoResponse addr_res = 2;
  if (has_addr_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->addr_res(), output);
  }

  // optional .zjchain.init.protobuf.InvalidLeaderPools pools = 3;
  if (has_pools()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->pools(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InitMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .zjchain.init.protobuf.GetAddressInfoRequest addr_req = 1;
  if (has_addr_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->addr_req(), target);
  }

  // optional .zjchain.init.protobuf.GetAddressInfoResponse addr_res = 2;
  if (has_addr_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->addr_res(), target);
  }

  // optional .zjchain.init.protobuf.InvalidLeaderPools pools = 3;
  if (has_pools()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->pools(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InitMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .zjchain.init.protobuf.GetAddressInfoRequest addr_req = 1;
    if (has_addr_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addr_req());
    }

    // optional .zjchain.init.protobuf.GetAddressInfoResponse addr_res = 2;
    if (has_addr_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addr_res());
    }

    // optional .zjchain.init.protobuf.InvalidLeaderPools pools = 3;
    if (has_pools()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pools());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InitMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InitMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InitMessage::MergeFrom(const InitMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_addr_req()) {
      mutable_addr_req()->::zjchain::init::protobuf::GetAddressInfoRequest::MergeFrom(from.addr_req());
    }
    if (from.has_addr_res()) {
      mutable_addr_res()->::zjchain::init::protobuf::GetAddressInfoResponse::MergeFrom(from.addr_res());
    }
    if (from.has_pools()) {
      mutable_pools()->::zjchain::init::protobuf::InvalidLeaderPools::MergeFrom(from.pools());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InitMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitMessage::CopyFrom(const InitMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitMessage::IsInitialized() const {

  return true;
}

void InitMessage::Swap(InitMessage* other) {
  if (other != this) {
    std::swap(addr_req_, other->addr_req_);
    std::swap(addr_res_, other->addr_res_);
    std::swap(pools_, other->pools_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InitMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InitMessage_descriptor_;
  metadata.reflection = InitMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace init
}  // namespace zjchain

// @@protoc_insertion_point(global_scope)
