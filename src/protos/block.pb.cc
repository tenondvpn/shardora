// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/block.proto

#include "protos/block.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protos_2fblock_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccountAttrRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccountAttrResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccountHeightRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AccountHeightResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AdRewardRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConsensusToTxsItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ElectStatisticInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetAccountInitInfoRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetAccountShardReponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetAccountShardRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetTxBlockRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GetTxBlockResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RefreshPoolHeightRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RefreshPoolHeightResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StorageItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TransferItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TxLog;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UpdateVpnActiveRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UpdateVpnCountRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VpnCountItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Block;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GetAccountInitInfoResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ShardToTxMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StatisticTxMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UpdateVpnCountResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_BlockTx;
}  // namespace protobuf_protos_2fblock_2eproto
namespace protobuf_protos_2fpools_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fpools_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ShardToTxItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fpools_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StatisticTxItem;
}  // namespace protobuf_protos_2fpools_2eproto
namespace shardora {
namespace block {
namespace protobuf {
class StorageItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StorageItem>
      _instance;
} _StorageItem_default_instance_;
class TransferItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferItem>
      _instance;
} _TransferItem_default_instance_;
class TxLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxLog>
      _instance;
} _TxLog_default_instance_;
class BlockTxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockTx>
      _instance;
} _BlockTx_default_instance_;
class BlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Block>
      _instance;
} _Block_default_instance_;
class ConsensusToTxsItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConsensusToTxsItem>
      _instance;
} _ConsensusToTxsItem_default_instance_;
class ConsensusToTxsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConsensusToTxs>
      _instance;
} _ConsensusToTxs_default_instance_;
class GetTxBlockRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTxBlockRequest>
      _instance;
} _GetTxBlockRequest_default_instance_;
class GetTxBlockResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTxBlockResponse>
      _instance;
} _GetTxBlockResponse_default_instance_;
class AccountHeightRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountHeightRequest>
      _instance;
} _AccountHeightRequest_default_instance_;
class AccountHeightResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountHeightResponse>
      _instance;
} _AccountHeightResponse_default_instance_;
class AccountAttrRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountAttrRequest>
      _instance;
} _AccountAttrRequest_default_instance_;
class AccountAttrResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountAttrResponse>
      _instance;
} _AccountAttrResponse_default_instance_;
class UpdateVpnCountRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateVpnCountRequest>
      _instance;
} _UpdateVpnCountRequest_default_instance_;
class VpnCountItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VpnCountItem>
      _instance;
} _VpnCountItem_default_instance_;
class UpdateVpnCountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateVpnCountResponse>
      _instance;
} _UpdateVpnCountResponse_default_instance_;
class GetAccountInitInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAccountInitInfoRequest>
      _instance;
} _GetAccountInitInfoRequest_default_instance_;
class GetAccountInitInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAccountInitInfoResponse>
      _instance;
} _GetAccountInitInfoResponse_default_instance_;
class UpdateVpnActiveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateVpnActiveRequest>
      _instance;
} _UpdateVpnActiveRequest_default_instance_;
class AdRewardRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AdRewardRequest>
      _instance;
} _AdRewardRequest_default_instance_;
class ElectStatisticInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElectStatisticInfo>
      _instance;
} _ElectStatisticInfo_default_instance_;
class StatisticInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatisticInfo>
      _instance;
} _StatisticInfo_default_instance_;
class RefreshPoolHeightRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RefreshPoolHeightRequest>
      _instance;
} _RefreshPoolHeightRequest_default_instance_;
class RefreshPoolHeightResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RefreshPoolHeightResponse>
      _instance;
} _RefreshPoolHeightResponse_default_instance_;
class GetAccountShardRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAccountShardRequest>
      _instance;
} _GetAccountShardRequest_default_instance_;
class GetAccountShardReponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAccountShardReponse>
      _instance;
} _GetAccountShardReponse_default_instance_;
class CrossShardingTosMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CrossShardingTosMessage>
      _instance;
} _CrossShardingTosMessage_default_instance_;
class CrossShardingStatisticMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CrossShardingStatisticMessage>
      _instance;
} _CrossShardingStatisticMessage_default_instance_;
class ElectBlockMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElectBlockMessage>
      _instance;
} _ElectBlockMessage_default_instance_;
class ShardToTxMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShardToTxMessage>
      _instance;
} _ShardToTxMessage_default_instance_;
class StatisticTxMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatisticTxMessage>
      _instance;
} _StatisticTxMessage_default_instance_;
class BlockMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockMessage>
      _instance;
} _BlockMessage_default_instance_;
}  // namespace protobuf
}  // namespace block
}  // namespace shardora
namespace protobuf_protos_2fblock_2eproto {
static void InitDefaultsStorageItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_StorageItem_default_instance_;
    new (ptr) ::shardora::block::protobuf::StorageItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::StorageItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StorageItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStorageItem}, {}};

static void InitDefaultsTransferItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_TransferItem_default_instance_;
    new (ptr) ::shardora::block::protobuf::TransferItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::TransferItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransferItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransferItem}, {}};

static void InitDefaultsTxLog() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_TxLog_default_instance_;
    new (ptr) ::shardora::block::protobuf::TxLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::TxLog::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TxLog =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTxLog}, {}};

static void InitDefaultsBlockTx() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_BlockTx_default_instance_;
    new (ptr) ::shardora::block::protobuf::BlockTx();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::BlockTx::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_BlockTx =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsBlockTx}, {
      &protobuf_protos_2fblock_2eproto::scc_info_StorageItem.base,
      &protobuf_protos_2fblock_2eproto::scc_info_TransferItem.base,
      &protobuf_protos_2fblock_2eproto::scc_info_TxLog.base,}};

static void InitDefaultsBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_Block_default_instance_;
    new (ptr) ::shardora::block::protobuf::Block();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::Block::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Block =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBlock}, {
      &protobuf_protos_2fblock_2eproto::scc_info_BlockTx.base,}};

static void InitDefaultsConsensusToTxsItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_ConsensusToTxsItem_default_instance_;
    new (ptr) ::shardora::block::protobuf::ConsensusToTxsItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::ConsensusToTxsItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConsensusToTxsItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConsensusToTxsItem}, {}};

static void InitDefaultsConsensusToTxs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_ConsensusToTxs_default_instance_;
    new (ptr) ::shardora::block::protobuf::ConsensusToTxs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::ConsensusToTxs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConsensusToTxs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConsensusToTxs}, {
      &protobuf_protos_2fblock_2eproto::scc_info_ConsensusToTxsItem.base,}};

static void InitDefaultsGetTxBlockRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_GetTxBlockRequest_default_instance_;
    new (ptr) ::shardora::block::protobuf::GetTxBlockRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::GetTxBlockRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTxBlockRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTxBlockRequest}, {}};

static void InitDefaultsGetTxBlockResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_GetTxBlockResponse_default_instance_;
    new (ptr) ::shardora::block::protobuf::GetTxBlockResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::GetTxBlockResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTxBlockResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTxBlockResponse}, {}};

static void InitDefaultsAccountHeightRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_AccountHeightRequest_default_instance_;
    new (ptr) ::shardora::block::protobuf::AccountHeightRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::AccountHeightRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccountHeightRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccountHeightRequest}, {}};

static void InitDefaultsAccountHeightResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_AccountHeightResponse_default_instance_;
    new (ptr) ::shardora::block::protobuf::AccountHeightResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::AccountHeightResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccountHeightResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccountHeightResponse}, {}};

static void InitDefaultsAccountAttrRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_AccountAttrRequest_default_instance_;
    new (ptr) ::shardora::block::protobuf::AccountAttrRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::AccountAttrRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccountAttrRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccountAttrRequest}, {}};

static void InitDefaultsAccountAttrResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_AccountAttrResponse_default_instance_;
    new (ptr) ::shardora::block::protobuf::AccountAttrResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::AccountAttrResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccountAttrResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccountAttrResponse}, {}};

static void InitDefaultsUpdateVpnCountRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_UpdateVpnCountRequest_default_instance_;
    new (ptr) ::shardora::block::protobuf::UpdateVpnCountRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::UpdateVpnCountRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateVpnCountRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateVpnCountRequest}, {}};

static void InitDefaultsVpnCountItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_VpnCountItem_default_instance_;
    new (ptr) ::shardora::block::protobuf::VpnCountItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::VpnCountItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VpnCountItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVpnCountItem}, {}};

static void InitDefaultsUpdateVpnCountResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_UpdateVpnCountResponse_default_instance_;
    new (ptr) ::shardora::block::protobuf::UpdateVpnCountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::UpdateVpnCountResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateVpnCountResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateVpnCountResponse}, {
      &protobuf_protos_2fblock_2eproto::scc_info_VpnCountItem.base,}};

static void InitDefaultsGetAccountInitInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_GetAccountInitInfoRequest_default_instance_;
    new (ptr) ::shardora::block::protobuf::GetAccountInitInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::GetAccountInitInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAccountInitInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAccountInitInfoRequest}, {}};

static void InitDefaultsGetAccountInitInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_GetAccountInitInfoResponse_default_instance_;
    new (ptr) ::shardora::block::protobuf::GetAccountInitInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::GetAccountInitInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetAccountInitInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetAccountInitInfoResponse}, {
      &protobuf_protos_2fblock_2eproto::scc_info_Block.base,}};

static void InitDefaultsUpdateVpnActiveRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_UpdateVpnActiveRequest_default_instance_;
    new (ptr) ::shardora::block::protobuf::UpdateVpnActiveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::UpdateVpnActiveRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateVpnActiveRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateVpnActiveRequest}, {}};

static void InitDefaultsAdRewardRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_AdRewardRequest_default_instance_;
    new (ptr) ::shardora::block::protobuf::AdRewardRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::AdRewardRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AdRewardRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdRewardRequest}, {}};

static void InitDefaultsElectStatisticInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_ElectStatisticInfo_default_instance_;
    new (ptr) ::shardora::block::protobuf::ElectStatisticInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::ElectStatisticInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ElectStatisticInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsElectStatisticInfo}, {}};

static void InitDefaultsStatisticInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_StatisticInfo_default_instance_;
    new (ptr) ::shardora::block::protobuf::StatisticInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::StatisticInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StatisticInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStatisticInfo}, {
      &protobuf_protos_2fblock_2eproto::scc_info_ElectStatisticInfo.base,}};

static void InitDefaultsRefreshPoolHeightRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_RefreshPoolHeightRequest_default_instance_;
    new (ptr) ::shardora::block::protobuf::RefreshPoolHeightRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::RefreshPoolHeightRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RefreshPoolHeightRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRefreshPoolHeightRequest}, {}};

static void InitDefaultsRefreshPoolHeightResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_RefreshPoolHeightResponse_default_instance_;
    new (ptr) ::shardora::block::protobuf::RefreshPoolHeightResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::RefreshPoolHeightResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RefreshPoolHeightResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRefreshPoolHeightResponse}, {}};

static void InitDefaultsGetAccountShardRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_GetAccountShardRequest_default_instance_;
    new (ptr) ::shardora::block::protobuf::GetAccountShardRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::GetAccountShardRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAccountShardRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAccountShardRequest}, {}};

static void InitDefaultsGetAccountShardReponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_GetAccountShardReponse_default_instance_;
    new (ptr) ::shardora::block::protobuf::GetAccountShardReponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::GetAccountShardReponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetAccountShardReponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetAccountShardReponse}, {}};

static void InitDefaultsCrossShardingTosMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_CrossShardingTosMessage_default_instance_;
    new (ptr) ::shardora::block::protobuf::CrossShardingTosMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::CrossShardingTosMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CrossShardingTosMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCrossShardingTosMessage}, {
      &protobuf_protos_2fblock_2eproto::scc_info_Block.base,}};

static void InitDefaultsCrossShardingStatisticMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_CrossShardingStatisticMessage_default_instance_;
    new (ptr) ::shardora::block::protobuf::CrossShardingStatisticMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::CrossShardingStatisticMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CrossShardingStatisticMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCrossShardingStatisticMessage}, {
      &protobuf_protos_2fblock_2eproto::scc_info_Block.base,}};

static void InitDefaultsElectBlockMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_ElectBlockMessage_default_instance_;
    new (ptr) ::shardora::block::protobuf::ElectBlockMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::ElectBlockMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ElectBlockMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsElectBlockMessage}, {
      &protobuf_protos_2fblock_2eproto::scc_info_Block.base,}};

static void InitDefaultsShardToTxMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_ShardToTxMessage_default_instance_;
    new (ptr) ::shardora::block::protobuf::ShardToTxMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::ShardToTxMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShardToTxMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShardToTxMessage}, {
      &protobuf_protos_2fpools_2eproto::scc_info_ShardToTxItem.base,}};

static void InitDefaultsStatisticTxMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_StatisticTxMessage_default_instance_;
    new (ptr) ::shardora::block::protobuf::StatisticTxMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::StatisticTxMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StatisticTxMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStatisticTxMessage}, {
      &protobuf_protos_2fpools_2eproto::scc_info_StatisticTxItem.base,}};

static void InitDefaultsBlockMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::block::protobuf::_BlockMessage_default_instance_;
    new (ptr) ::shardora::block::protobuf::BlockMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::block::protobuf::BlockMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<18> scc_info_BlockMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 18, InitDefaultsBlockMessage}, {
      &protobuf_protos_2fblock_2eproto::scc_info_GetTxBlockRequest.base,
      &protobuf_protos_2fblock_2eproto::scc_info_GetTxBlockResponse.base,
      &protobuf_protos_2fblock_2eproto::scc_info_AccountHeightRequest.base,
      &protobuf_protos_2fblock_2eproto::scc_info_AccountHeightResponse.base,
      &protobuf_protos_2fblock_2eproto::scc_info_AccountAttrRequest.base,
      &protobuf_protos_2fblock_2eproto::scc_info_AccountAttrResponse.base,
      &protobuf_protos_2fblock_2eproto::scc_info_UpdateVpnCountRequest.base,
      &protobuf_protos_2fblock_2eproto::scc_info_UpdateVpnCountResponse.base,
      &protobuf_protos_2fblock_2eproto::scc_info_GetAccountInitInfoRequest.base,
      &protobuf_protos_2fblock_2eproto::scc_info_GetAccountInitInfoResponse.base,
      &protobuf_protos_2fblock_2eproto::scc_info_UpdateVpnActiveRequest.base,
      &protobuf_protos_2fblock_2eproto::scc_info_AdRewardRequest.base,
      &protobuf_protos_2fblock_2eproto::scc_info_RefreshPoolHeightRequest.base,
      &protobuf_protos_2fblock_2eproto::scc_info_RefreshPoolHeightResponse.base,
      &protobuf_protos_2fblock_2eproto::scc_info_GetAccountShardRequest.base,
      &protobuf_protos_2fblock_2eproto::scc_info_GetAccountShardReponse.base,
      &protobuf_protos_2fblock_2eproto::scc_info_ShardToTxMessage.base,
      &protobuf_protos_2fblock_2eproto::scc_info_StatisticTxMessage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_StorageItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransferItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TxLog.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlockTx.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Block.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConsensusToTxsItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConsensusToTxs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTxBlockRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTxBlockResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountHeightRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountHeightResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountAttrRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccountAttrResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateVpnCountRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VpnCountItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateVpnCountResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAccountInitInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAccountInitInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateVpnActiveRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AdRewardRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElectStatisticInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatisticInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RefreshPoolHeightRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RefreshPoolHeightResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAccountShardRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetAccountShardReponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CrossShardingTosMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CrossShardingStatisticMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElectBlockMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShardToTxMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatisticTxMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlockMessage.base);
}

::google::protobuf::Metadata file_level_metadata[32];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StorageItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StorageItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StorageItem, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StorageItem, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::TransferItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::TransferItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::TransferItem, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::TransferItem, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::TransferItem, amount_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::TxLog, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::TxLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::TxLog, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::TxLog, topics_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, gas_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, gas_used_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, gas_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, storages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, contract_txs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, contract_prepayment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, contract_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, contract_input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockTx, tx_debug_tm_ms_),
  0,
  1,
  2,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  ~0u,
  ~0u,
  12,
  3,
  4,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::Block, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::Block, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::Block, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::Block, consistency_random_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::Block, timeblock_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::Block, tx_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::Block, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::Block, change_leader_invalid_hashs_),
  4,
  0,
  1,
  2,
  ~0u,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ConsensusToTxsItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ConsensusToTxsItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ConsensusToTxsItem, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ConsensusToTxsItem, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ConsensusToTxsItem, contract_from_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ConsensusToTxs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ConsensusToTxs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ConsensusToTxs, tos_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetTxBlockRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetTxBlockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetTxBlockRequest, tx_gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetTxBlockRequest, block_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetTxBlockRequest, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetTxBlockRequest, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetTxBlockRequest, account_address_),
  0,
  1,
  4,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetTxBlockResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetTxBlockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetTxBlockResponse, block_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountHeightRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountHeightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountHeightRequest, account_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountHeightRequest, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountHeightRequest, count_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountHeightResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountHeightResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountHeightResponse, heights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountHeightResponse, account_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountHeightResponse, type_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountAttrRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountAttrRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountAttrRequest, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountAttrRequest, attr_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountAttrRequest, height_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountAttrResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountAttrResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountAttrResponse, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountAttrResponse, attr_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountAttrResponse, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AccountAttrResponse, block_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnCountRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnCountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnCountRequest, account_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnCountRequest, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnCountRequest, old_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnCountRequest, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnCountRequest, just_set_),
  3,
  0,
  1,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::VpnCountItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::VpnCountItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::VpnCountItem, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::VpnCountItem, count_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnCountResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnCountResponse, vpn_nodes_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoRequest, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoRequest, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoRequest, net_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoRequest, index_),
  0,
  4,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoResponse, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoResponse, block_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountInitInfoResponse, max_index_),
  1,
  ~0u,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnActiveRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnActiveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnActiveRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::UpdateVpnActiveRequest, ip_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AdRewardRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AdRewardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AdRewardRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AdRewardRequest, reward_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::AdRewardRequest, gid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ElectStatisticInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ElectStatisticInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ElectStatisticInfo, elect_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ElectStatisticInfo, succ_tx_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ElectStatisticInfo, lof_leaders_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StatisticInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StatisticInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StatisticInfo, timeblock_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StatisticInfo, all_tx_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StatisticInfo, elect_statistic_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::RefreshPoolHeightRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::RefreshPoolHeightRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::RefreshPoolHeightRequest, heights_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::RefreshPoolHeightResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::RefreshPoolHeightResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::RefreshPoolHeightResponse, heights_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountShardRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountShardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountShardRequest, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountShardReponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountShardReponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountShardReponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::GetAccountShardReponse, shard_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::CrossShardingTosMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::CrossShardingTosMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::CrossShardingTosMessage, block_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::CrossShardingStatisticMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::CrossShardingStatisticMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::CrossShardingStatisticMessage, block_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ElectBlockMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ElectBlockMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ElectBlockMessage, block_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ShardToTxMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ShardToTxMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ShardToTxMessage, to_txs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ShardToTxMessage, leader_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ShardToTxMessage, elect_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::ShardToTxMessage, leader_to_idx_),
  ~0u,
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StatisticTxMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StatisticTxMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StatisticTxMessage, statistic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StatisticTxMessage, leader_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StatisticTxMessage, elect_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::StatisticTxMessage, leader_to_idx_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, block_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, block_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, height_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, height_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, acc_attr_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, acc_attr_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, up_vpn_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, up_vpn_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, account_init_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, account_init_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, vpn_active_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, ad_reward_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, ref_heights_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, ref_heights_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, acc_shard_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, acc_shard_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, shard_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::block::protobuf::BlockMessage, statistic_tx_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::shardora::block::protobuf::StorageItem)},
  { 9, 17, sizeof(::shardora::block::protobuf::TransferItem)},
  { 20, 27, sizeof(::shardora::block::protobuf::TxLog)},
  { 29, 51, sizeof(::shardora::block::protobuf::BlockTx)},
  { 68, 80, sizeof(::shardora::block::protobuf::Block)},
  { 87, 95, sizeof(::shardora::block::protobuf::ConsensusToTxsItem)},
  { 98, 104, sizeof(::shardora::block::protobuf::ConsensusToTxs)},
  { 105, 115, sizeof(::shardora::block::protobuf::GetTxBlockRequest)},
  { 120, 126, sizeof(::shardora::block::protobuf::GetTxBlockResponse)},
  { 127, 135, sizeof(::shardora::block::protobuf::AccountHeightRequest)},
  { 138, 146, sizeof(::shardora::block::protobuf::AccountHeightResponse)},
  { 149, 157, sizeof(::shardora::block::protobuf::AccountAttrRequest)},
  { 160, 169, sizeof(::shardora::block::protobuf::AccountAttrResponse)},
  { 173, 183, sizeof(::shardora::block::protobuf::UpdateVpnCountRequest)},
  { 188, 195, sizeof(::shardora::block::protobuf::VpnCountItem)},
  { 197, 203, sizeof(::shardora::block::protobuf::UpdateVpnCountResponse)},
  { 204, 214, sizeof(::shardora::block::protobuf::GetAccountInitInfoRequest)},
  { 219, 228, sizeof(::shardora::block::protobuf::GetAccountInitInfoResponse)},
  { 232, 239, sizeof(::shardora::block::protobuf::UpdateVpnActiveRequest)},
  { 241, 249, sizeof(::shardora::block::protobuf::AdRewardRequest)},
  { 252, 260, sizeof(::shardora::block::protobuf::ElectStatisticInfo)},
  { 263, 271, sizeof(::shardora::block::protobuf::StatisticInfo)},
  { 274, 280, sizeof(::shardora::block::protobuf::RefreshPoolHeightRequest)},
  { 281, 287, sizeof(::shardora::block::protobuf::RefreshPoolHeightResponse)},
  { 288, 294, sizeof(::shardora::block::protobuf::GetAccountShardRequest)},
  { 295, 302, sizeof(::shardora::block::protobuf::GetAccountShardReponse)},
  { 304, 310, sizeof(::shardora::block::protobuf::CrossShardingTosMessage)},
  { 311, 317, sizeof(::shardora::block::protobuf::CrossShardingStatisticMessage)},
  { 318, 324, sizeof(::shardora::block::protobuf::ElectBlockMessage)},
  { 325, 334, sizeof(::shardora::block::protobuf::ShardToTxMessage)},
  { 338, 347, sizeof(::shardora::block::protobuf::StatisticTxMessage)},
  { 351, 374, sizeof(::shardora::block::protobuf::BlockMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_StorageItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_TransferItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_TxLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_BlockTx_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_Block_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_ConsensusToTxsItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_ConsensusToTxs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_GetTxBlockRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_GetTxBlockResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_AccountHeightRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_AccountHeightResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_AccountAttrRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_AccountAttrResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_UpdateVpnCountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_VpnCountItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_UpdateVpnCountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_GetAccountInitInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_GetAccountInitInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_UpdateVpnActiveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_AdRewardRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_ElectStatisticInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_StatisticInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_RefreshPoolHeightRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_RefreshPoolHeightResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_GetAccountShardRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_GetAccountShardReponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_CrossShardingTosMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_CrossShardingStatisticMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_ElectBlockMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_ShardToTxMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_StatisticTxMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::block::protobuf::_BlockMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protos/block.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 32);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022protos/block.proto\022\027shardora.block.pro"
      "tobuf\032\022protos/pools.proto\")\n\013StorageItem"
      "\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014\"8\n\014Transfer"
      "Item\022\014\n\004from\030\001 \001(\014\022\n\n\002to\030\002 \001(\014\022\016\n\006amount"
      "\030\003 \001(\004\"%\n\005TxLog\022\014\n\004data\030\001 \001(\014\022\016\n\006topics\030"
      "\002 \003(\014\"\323\003\n\007BlockTx\022\013\n\003gid\030\001 \001(\014\022\014\n\004from\030\002"
      " \001(\014\022\n\n\002to\030\003 \001(\014\022\016\n\006amount\030\004 \001(\004\022\021\n\tgas_"
      "limit\030\005 \001(\004\022\020\n\010gas_used\030\006 \001(\004\022\021\n\tgas_pri"
      "ce\030\007 \001(\004\022\017\n\007balance\030\010 \001(\004\022/\n\004step\030\t \001(\0162"
      "!.shardora.pools.protobuf.StepType\022\016\n\006st"
      "atus\030\n \001(\r\0226\n\010storages\030\013 \003(\0132$.shardora."
      "block.protobuf.StorageItem\022;\n\014contract_t"
      "xs\030\014 \003(\0132%.shardora.block.protobuf.Trans"
      "ferItem\022\033\n\023contract_prepayment\030\r \001(\004\022\025\n\r"
      "contract_code\030\016 \001(\014\022\026\n\016contract_input\030\017 "
      "\001(\014\022.\n\006events\030\020 \003(\0132\036.shardora.block.pro"
      "tobuf.TxLog\022\026\n\016tx_debug_tm_ms\030\021 \003(\004\"\311\001\n\005"
      "Block\022\017\n\007version\030\001 \001(\r\022\016\n\006height\030\002 \001(\004\022\032"
      "\n\022consistency_random\030\003 \001(\004\022\030\n\020timeblock_"
      "height\030\004 \001(\004\0221\n\007tx_list\030\005 \003(\0132 .shardora"
      ".block.protobuf.BlockTx\022\021\n\ttimestamp\030\006 \001"
      "(\004\022#\n\033change_leader_invalid_hashs\030\007 \003(\014\""
      "H\n\022ConsensusToTxsItem\022\n\n\002to\030\001 \001(\014\022\017\n\007bal"
      "ance\030\002 \001(\004\022\025\n\rcontract_from\030\003 \001(\014\"J\n\016Con"
      "sensusToTxs\0228\n\003tos\030\001 \003(\0132+.shardora.bloc"
      "k.protobuf.ConsensusToTxsItem\"n\n\021GetTxBl"
      "ockRequest\022\016\n\006tx_gid\030\001 \001(\014\022\022\n\nblock_hash"
      "\030\002 \001(\014\022\014\n\004from\030\003 \001(\010\022\016\n\006height\030\004 \001(\004\022\027\n\017"
      "account_address\030\005 \001(\014\"#\n\022GetTxBlockRespo"
      "nse\022\r\n\005block\030\001 \001(\014\"J\n\024AccountHeightReque"
      "st\022\024\n\014account_addr\030\001 \001(\014\022\r\n\005index\030\002 \001(\003\022"
      "\r\n\005count\030\003 \001(\005\"L\n\025AccountHeightResponse\022"
      "\017\n\007heights\030\001 \003(\004\022\024\n\014account_addr\030\002 \001(\014\022\014"
      "\n\004type\030\003 \001(\014\"G\n\022AccountAttrRequest\022\017\n\007ac"
      "count\030\001 \001(\014\022\020\n\010attr_key\030\002 \001(\014\022\016\n\006height\030"
      "\003 \001(\004\"W\n\023AccountAttrResponse\022\017\n\007account\030"
      "\001 \001(\014\022\020\n\010attr_key\030\002 \001(\014\022\016\n\006height\030\003 \001(\004\022"
      "\r\n\005block\030\004 \001(\014\"h\n\025UpdateVpnCountRequest\022"
      "\024\n\014account_hash\030\001 \001(\004\022\n\n\002ip\030\002 \001(\014\022\016\n\006old"
      "_ip\030\003 \001(\014\022\013\n\003uid\030\004 \001(\014\022\020\n\010just_set\030\005 \001(\010"
      "\")\n\014VpnCountItem\022\n\n\002ip\030\001 \001(\014\022\r\n\005count\030\002 "
      "\001(\r\"R\n\026UpdateVpnCountResponse\0228\n\tvpn_nod"
      "es\030\001 \003(\0132%.shardora.block.protobuf.VpnCo"
      "untItem\"e\n\031GetAccountInitInfoRequest\022\n\n\002"
      "id\030\001 \001(\014\022\r\n\005count\030\002 \001(\r\022\016\n\006height\030\003 \001(\004\022"
      "\016\n\006net_id\030\004 \001(\004\022\r\n\005index\030\005 \001(\004\"\200\001\n\032GetAc"
      "countInitInfoResponse\022\017\n\007balance\030\001 \001(\004\0222"
      "\n\nblock_list\030\002 \003(\0132\036.shardora.block.prot"
      "obuf.Block\022\n\n\002id\030\003 \001(\014\022\021\n\tmax_index\030\004 \001("
      "\004\"0\n\026UpdateVpnActiveRequest\022\n\n\002id\030\001 \001(\014\022"
      "\n\n\002ip\030\002 \001(\014\">\n\017AdRewardRequest\022\n\n\002id\030\001 \001"
      "(\014\022\022\n\nreward_key\030\002 \001(\014\022\013\n\003gid\030\003 \001(\014\"V\n\022E"
      "lectStatisticInfo\022\024\n\014elect_height\030\001 \001(\004\022"
      "\025\n\rsucc_tx_count\030\002 \003(\r\022\023\n\013lof_leaders\030\003 "
      "\003(\r\"\205\001\n\rStatisticInfo\022\030\n\020timeblock_heigh"
      "t\030\001 \001(\004\022\024\n\014all_tx_count\030\002 \001(\r\022D\n\017elect_s"
      "tatistic\030\003 \003(\0132+.shardora.block.protobuf"
      ".ElectStatisticInfo\"+\n\030RefreshPoolHeight"
      "Request\022\017\n\007heights\030\001 \003(\004\",\n\031RefreshPoolH"
      "eightResponse\022\017\n\007heights\030\001 \003(\004\"$\n\026GetAcc"
      "ountShardRequest\022\n\n\002id\030\001 \001(\014\"6\n\026GetAccou"
      "ntShardReponse\022\n\n\002id\030\001 \001(\014\022\020\n\010shard_id\030\002"
      " \001(\r\"H\n\027CrossShardingTosMessage\022-\n\005block"
      "\030\001 \001(\0132\036.shardora.block.protobuf.Block\"N"
      "\n\035CrossShardingStatisticMessage\022-\n\005block"
      "\030\001 \001(\0132\036.shardora.block.protobuf.Block\"B"
      "\n\021ElectBlockMessage\022-\n\005block\030\001 \001(\0132\036.sha"
      "rdora.block.protobuf.Block\"\213\001\n\020ShardToTx"
      "Message\0226\n\006to_txs\030\001 \003(\0132&.shardora.pools"
      ".protobuf.ShardToTxItem\022\022\n\nleader_idx\030\002 "
      "\001(\r\022\024\n\014elect_height\030\003 \001(\004\022\025\n\rleader_to_i"
      "dx\030\004 \001(\005\"\222\001\n\022StatisticTxMessage\022;\n\tstati"
      "stic\030\001 \001(\0132(.shardora.pools.protobuf.Sta"
      "tisticTxItem\022\022\n\nleader_idx\030\002 \001(\r\022\024\n\014elec"
      "t_height\030\003 \001(\004\022\025\n\rleader_to_idx\030\004 \001(\005\"\364\t"
      "\n\014BlockMessage\022=\n\tblock_req\030\001 \001(\0132*.shar"
      "dora.block.protobuf.GetTxBlockRequest\022>\n"
      "\tblock_res\030\002 \001(\0132+.shardora.block.protob"
      "uf.GetTxBlockResponse\022A\n\nheight_req\030\003 \001("
      "\0132-.shardora.block.protobuf.AccountHeigh"
      "tRequest\022B\n\nheight_res\030\004 \001(\0132..shardora."
      "block.protobuf.AccountHeightResponse\022A\n\014"
      "acc_attr_req\030\005 \001(\0132+.shardora.block.prot"
      "obuf.AccountAttrRequest\022B\n\014acc_attr_res\030"
      "\006 \001(\0132,.shardora.block.protobuf.AccountA"
      "ttrResponse\022B\n\nup_vpn_req\030\007 \001(\0132..shardo"
      "ra.block.protobuf.UpdateVpnCountRequest\022"
      "C\n\nup_vpn_res\030\010 \001(\0132/.shardora.block.pro"
      "tobuf.UpdateVpnCountResponse\022L\n\020account_"
      "init_req\030\t \001(\01322.shardora.block.protobuf"
      ".GetAccountInitInfoRequest\022M\n\020account_in"
      "it_res\030\n \001(\01323.shardora.block.protobuf.G"
      "etAccountInitInfoResponse\022G\n\016vpn_active_"
      "req\030\013 \001(\0132/.shardora.block.protobuf.Upda"
      "teVpnActiveRequest\022\?\n\rad_reward_req\030\014 \001("
      "\0132(.shardora.block.protobuf.AdRewardRequ"
      "est\022J\n\017ref_heights_req\030\r \001(\01321.shardora."
      "block.protobuf.RefreshPoolHeightRequest\022"
      "K\n\017ref_heights_res\030\016 \001(\01322.shardora.bloc"
      "k.protobuf.RefreshPoolHeightResponse\022F\n\r"
      "acc_shard_req\030\017 \001(\0132/.shardora.block.pro"
      "tobuf.GetAccountShardRequest\022F\n\racc_shar"
      "d_res\030\020 \001(\0132/.shardora.block.protobuf.Ge"
      "tAccountShardReponse\022;\n\010shard_to\030\021 \001(\0132)"
      ".shardora.block.protobuf.ShardToTxMessag"
      "e\022A\n\014statistic_tx\030\022 \001(\0132+.shardora.block"
      ".protobuf.StatisticTxMessage"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4268);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protos/block.proto", &protobuf_RegisterTypes);
  ::protobuf_protos_2fpools_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protos_2fblock_2eproto
namespace shardora {
namespace block {
namespace protobuf {

// ===================================================================

void StorageItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageItem::kKeyFieldNumber;
const int StorageItem::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageItem::StorageItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_StorageItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.StorageItem)
}
StorageItem::StorageItem(const StorageItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.StorageItem)
}

void StorageItem::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StorageItem::~StorageItem() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.StorageItem)
  SharedDtor();
}

void StorageItem::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StorageItem::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageItem& StorageItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_StorageItem.base);
  return *internal_default_instance();
}


void StorageItem::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.StorageItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StorageItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.StorageItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.StorageItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.StorageItem)
  return false;
#undef DO_
}

void StorageItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.StorageItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.StorageItem)
}

::google::protobuf::uint8* StorageItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.StorageItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.StorageItem)
  return target;
}

size_t StorageItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.StorageItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StorageItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.StorageItem)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.StorageItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.StorageItem)
    MergeFrom(*source);
  }
}

void StorageItem::MergeFrom(const StorageItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.StorageItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void StorageItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.StorageItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageItem::CopyFrom(const StorageItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.StorageItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageItem::IsInitialized() const {
  return true;
}

void StorageItem::Swap(StorageItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageItem::InternalSwap(StorageItem* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StorageItem::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferItem::kFromFieldNumber;
const int TransferItem::kToFieldNumber;
const int TransferItem::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferItem::TransferItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_TransferItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.TransferItem)
}
TransferItem::TransferItem(const TransferItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from()) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to()) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.TransferItem)
}

void TransferItem::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_ULONGLONG(0);
}

TransferItem::~TransferItem() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.TransferItem)
  SharedDtor();
}

void TransferItem::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransferItem::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferItem& TransferItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_TransferItem.base);
  return *internal_default_instance();
}


void TransferItem::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.TransferItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      from_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      to_.ClearNonDefaultToEmptyNoArena();
    }
  }
  amount_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransferItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.TransferItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.TransferItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.TransferItem)
  return false;
#undef DO_
}

void TransferItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.TransferItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes from = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->from(), output);
  }

  // optional bytes to = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->to(), output);
  }

  // optional uint64 amount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->amount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.TransferItem)
}

::google::protobuf::uint8* TransferItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.TransferItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes from = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->from(), target);
  }

  // optional bytes to = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->to(), target);
  }

  // optional uint64 amount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->amount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.TransferItem)
  return target;
}

size_t TransferItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.TransferItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes from = 1;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->from());
    }

    // optional bytes to = 2;
    if (has_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->to());
    }

    // optional uint64 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransferItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.TransferItem)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.TransferItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.TransferItem)
    MergeFrom(*source);
  }
}

void TransferItem::MergeFrom(const TransferItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.TransferItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_from();
      from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_to();
      to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
    }
    if (cached_has_bits & 0x00000004u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TransferItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.TransferItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferItem::CopyFrom(const TransferItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.TransferItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferItem::IsInitialized() const {
  return true;
}

void TransferItem::Swap(TransferItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferItem::InternalSwap(TransferItem* other) {
  using std::swap;
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransferItem::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TxLog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxLog::kDataFieldNumber;
const int TxLog::kTopicsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxLog::TxLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_TxLog.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.TxLog)
}
TxLog::TxLog(const TxLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      topics_(from.topics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.TxLog)
}

void TxLog::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TxLog::~TxLog() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.TxLog)
  SharedDtor();
}

void TxLog::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TxLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TxLog::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxLog& TxLog::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_TxLog.base);
  return *internal_default_instance();
}


void TxLog::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.TxLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topics_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.TxLog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes topics = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_topics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.TxLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.TxLog)
  return false;
#undef DO_
}

void TxLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.TxLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // repeated bytes topics = 2;
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->topics(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.TxLog)
}

::google::protobuf::uint8* TxLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.TxLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // repeated bytes topics = 2;
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->topics(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.TxLog)
  return target;
}

size_t TxLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.TxLog)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes topics = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->topics_size());
  for (int i = 0, n = this->topics_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->topics(i));
  }

  // optional bytes data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TxLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.TxLog)
  GOOGLE_DCHECK_NE(&from, this);
  const TxLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.TxLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.TxLog)
    MergeFrom(*source);
  }
}

void TxLog::MergeFrom(const TxLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.TxLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  topics_.MergeFrom(from.topics_);
  if (from.has_data()) {
    set_has_data();
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void TxLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.TxLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxLog::CopyFrom(const TxLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.TxLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxLog::IsInitialized() const {
  return true;
}

void TxLog::Swap(TxLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxLog::InternalSwap(TxLog* other) {
  using std::swap;
  topics_.InternalSwap(CastToBase(&other->topics_));
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TxLog::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlockTx::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockTx::kGidFieldNumber;
const int BlockTx::kFromFieldNumber;
const int BlockTx::kToFieldNumber;
const int BlockTx::kAmountFieldNumber;
const int BlockTx::kGasLimitFieldNumber;
const int BlockTx::kGasUsedFieldNumber;
const int BlockTx::kGasPriceFieldNumber;
const int BlockTx::kBalanceFieldNumber;
const int BlockTx::kStepFieldNumber;
const int BlockTx::kStatusFieldNumber;
const int BlockTx::kStoragesFieldNumber;
const int BlockTx::kContractTxsFieldNumber;
const int BlockTx::kContractPrepaymentFieldNumber;
const int BlockTx::kContractCodeFieldNumber;
const int BlockTx::kContractInputFieldNumber;
const int BlockTx::kEventsFieldNumber;
const int BlockTx::kTxDebugTmMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockTx::BlockTx()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_BlockTx.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.BlockTx)
}
BlockTx::BlockTx(const BlockTx& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      storages_(from.storages_),
      contract_txs_(from.contract_txs_),
      events_(from.events_),
      tx_debug_tm_ms_(from.tx_debug_tm_ms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gid()) {
    gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gid_);
  }
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_from()) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to()) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  contract_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_contract_code()) {
    contract_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_code_);
  }
  contract_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_contract_input()) {
    contract_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_input_);
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&contract_prepayment_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(contract_prepayment_));
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.BlockTx)
}

void BlockTx::SharedCtor() {
  gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&contract_prepayment_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(contract_prepayment_));
}

BlockTx::~BlockTx() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.BlockTx)
  SharedDtor();
}

void BlockTx::SharedDtor() {
  gid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlockTx::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BlockTx::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockTx& BlockTx::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_BlockTx.base);
  return *internal_default_instance();
}


void BlockTx::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.BlockTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  storages_.Clear();
  contract_txs_.Clear();
  events_.Clear();
  tx_debug_tm_ms_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      gid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      from_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      to_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      contract_code_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      contract_input_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gas_used_) -
        reinterpret_cast<char*>(&amount_)) + sizeof(gas_used_));
  }
  if (cached_has_bits & 7936u) {
    ::memset(&gas_price_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&contract_prepayment_) -
        reinterpret_cast<char*>(&gas_price_)) + sizeof(contract_prepayment_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BlockTx::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.BlockTx)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes gid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes from = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes to = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 amount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gas_limit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_gas_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gas_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gas_used = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_gas_used();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gas_used_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gas_price = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_gas_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gas_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 balance = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_balance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.pools.protobuf.StepType step = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::shardora::pools::protobuf::StepType_IsValid(value)) {
            set_step(static_cast< ::shardora::pools::protobuf::StepType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                9, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 status = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .shardora.block.protobuf.StorageItem storages = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_storages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .shardora.block.protobuf.TransferItem contract_txs = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contract_txs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 contract_prepayment = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_contract_prepayment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &contract_prepayment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes contract_code = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_contract_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes contract_input = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_contract_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .shardora.block.protobuf.TxLog events = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 tx_debug_tm_ms = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 136u, input, this->mutable_tx_debug_tm_ms())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_tx_debug_tm_ms())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.BlockTx)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.BlockTx)
  return false;
#undef DO_
}

void BlockTx::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.BlockTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes gid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->gid(), output);
  }

  // optional bytes from = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->from(), output);
  }

  // optional bytes to = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->to(), output);
  }

  // optional uint64 amount = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->amount(), output);
  }

  // optional uint64 gas_limit = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gas_limit(), output);
  }

  // optional uint64 gas_used = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->gas_used(), output);
  }

  // optional uint64 gas_price = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->gas_price(), output);
  }

  // optional uint64 balance = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->balance(), output);
  }

  // optional .shardora.pools.protobuf.StepType step = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->step(), output);
  }

  // optional uint32 status = 10;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->status(), output);
  }

  // repeated .shardora.block.protobuf.StorageItem storages = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->storages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->storages(static_cast<int>(i)),
      output);
  }

  // repeated .shardora.block.protobuf.TransferItem contract_txs = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contract_txs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->contract_txs(static_cast<int>(i)),
      output);
  }

  // optional uint64 contract_prepayment = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->contract_prepayment(), output);
  }

  // optional bytes contract_code = 14;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->contract_code(), output);
  }

  // optional bytes contract_input = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->contract_input(), output);
  }

  // repeated .shardora.block.protobuf.TxLog events = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->events(static_cast<int>(i)),
      output);
  }

  // repeated uint64 tx_debug_tm_ms = 17;
  for (int i = 0, n = this->tx_debug_tm_ms_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      17, this->tx_debug_tm_ms(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.BlockTx)
}

::google::protobuf::uint8* BlockTx::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.BlockTx)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes gid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->gid(), target);
  }

  // optional bytes from = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->from(), target);
  }

  // optional bytes to = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->to(), target);
  }

  // optional uint64 amount = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->amount(), target);
  }

  // optional uint64 gas_limit = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gas_limit(), target);
  }

  // optional uint64 gas_used = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->gas_used(), target);
  }

  // optional uint64 gas_price = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->gas_price(), target);
  }

  // optional uint64 balance = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->balance(), target);
  }

  // optional .shardora.pools.protobuf.StepType step = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->step(), target);
  }

  // optional uint32 status = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->status(), target);
  }

  // repeated .shardora.block.protobuf.StorageItem storages = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->storages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->storages(static_cast<int>(i)), deterministic, target);
  }

  // repeated .shardora.block.protobuf.TransferItem contract_txs = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contract_txs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->contract_txs(static_cast<int>(i)), deterministic, target);
  }

  // optional uint64 contract_prepayment = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->contract_prepayment(), target);
  }

  // optional bytes contract_code = 14;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->contract_code(), target);
  }

  // optional bytes contract_input = 15;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->contract_input(), target);
  }

  // repeated .shardora.block.protobuf.TxLog events = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->events(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint64 tx_debug_tm_ms = 17;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(17, this->tx_debug_tm_ms_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.BlockTx)
  return target;
}

size_t BlockTx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.BlockTx)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.block.protobuf.StorageItem storages = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->storages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->storages(static_cast<int>(i)));
    }
  }

  // repeated .shardora.block.protobuf.TransferItem contract_txs = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->contract_txs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contract_txs(static_cast<int>(i)));
    }
  }

  // repeated .shardora.block.protobuf.TxLog events = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  // repeated uint64 tx_debug_tm_ms = 17;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->tx_debug_tm_ms_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->tx_debug_tm_ms_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes gid = 1;
    if (has_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gid());
    }

    // optional bytes from = 2;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->from());
    }

    // optional bytes to = 3;
    if (has_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->to());
    }

    // optional bytes contract_code = 14;
    if (has_contract_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->contract_code());
    }

    // optional bytes contract_input = 15;
    if (has_contract_input()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->contract_input());
    }

    // optional uint64 amount = 4;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

    // optional uint64 gas_limit = 5;
    if (has_gas_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gas_limit());
    }

    // optional uint64 gas_used = 6;
    if (has_gas_used()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gas_used());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional uint64 gas_price = 7;
    if (has_gas_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gas_price());
    }

    // optional uint64 balance = 8;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->balance());
    }

    // optional .shardora.pools.protobuf.StepType step = 9;
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->step());
    }

    // optional uint32 status = 10;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

    // optional uint64 contract_prepayment = 13;
    if (has_contract_prepayment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->contract_prepayment());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockTx::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.BlockTx)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockTx* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockTx>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.BlockTx)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.BlockTx)
    MergeFrom(*source);
  }
}

void BlockTx::MergeFrom(const BlockTx& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.BlockTx)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  storages_.MergeFrom(from.storages_);
  contract_txs_.MergeFrom(from.contract_txs_);
  events_.MergeFrom(from.events_);
  tx_debug_tm_ms_.MergeFrom(from.tx_debug_tm_ms_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gid();
      gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_from();
      from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_to();
      to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_contract_code();
      contract_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_code_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_contract_input();
      contract_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_input_);
    }
    if (cached_has_bits & 0x00000020u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000040u) {
      gas_limit_ = from.gas_limit_;
    }
    if (cached_has_bits & 0x00000080u) {
      gas_used_ = from.gas_used_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      gas_price_ = from.gas_price_;
    }
    if (cached_has_bits & 0x00000200u) {
      balance_ = from.balance_;
    }
    if (cached_has_bits & 0x00000400u) {
      step_ = from.step_;
    }
    if (cached_has_bits & 0x00000800u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00001000u) {
      contract_prepayment_ = from.contract_prepayment_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BlockTx::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.BlockTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockTx::CopyFrom(const BlockTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.BlockTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockTx::IsInitialized() const {
  return true;
}

void BlockTx::Swap(BlockTx* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockTx::InternalSwap(BlockTx* other) {
  using std::swap;
  CastToBase(&storages_)->InternalSwap(CastToBase(&other->storages_));
  CastToBase(&contract_txs_)->InternalSwap(CastToBase(&other->contract_txs_));
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
  tx_debug_tm_ms_.InternalSwap(&other->tx_debug_tm_ms_);
  gid_.Swap(&other->gid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contract_code_.Swap(&other->contract_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contract_input_.Swap(&other->contract_input_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  swap(gas_limit_, other->gas_limit_);
  swap(gas_used_, other->gas_used_);
  swap(gas_price_, other->gas_price_);
  swap(balance_, other->balance_);
  swap(step_, other->step_);
  swap(status_, other->status_);
  swap(contract_prepayment_, other->contract_prepayment_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BlockTx::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Block::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kVersionFieldNumber;
const int Block::kHeightFieldNumber;
const int Block::kConsistencyRandomFieldNumber;
const int Block::kTimeblockHeightFieldNumber;
const int Block::kTxListFieldNumber;
const int Block::kTimestampFieldNumber;
const int Block::kChangeLeaderInvalidHashsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_Block.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.Block)
}
Block::Block(const Block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tx_list_(from.tx_list_),
      change_leader_invalid_hashs_(from.change_leader_invalid_hashs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&height_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.Block)
}

void Block::SharedCtor() {
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&height_)) + sizeof(version_));
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.Block)
  SharedDtor();
}

void Block::SharedDtor() {
}

void Block::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Block& Block::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_Block.base);
  return *internal_default_instance();
}


void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tx_list_.Clear();
  change_leader_invalid_hashs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&version_) -
        reinterpret_cast<char*>(&height_)) + sizeof(version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.Block)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 consistency_random = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_consistency_random();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &consistency_random_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 timeblock_height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_timeblock_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timeblock_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .shardora.block.protobuf.BlockTx tx_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tx_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes change_leader_invalid_hashs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_change_leader_invalid_hashs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional uint64 height = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->height(), output);
  }

  // optional uint64 consistency_random = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->consistency_random(), output);
  }

  // optional uint64 timeblock_height = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->timeblock_height(), output);
  }

  // repeated .shardora.block.protobuf.BlockTx tx_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tx_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->tx_list(static_cast<int>(i)),
      output);
  }

  // optional uint64 timestamp = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->timestamp(), output);
  }

  // repeated bytes change_leader_invalid_hashs = 7;
  for (int i = 0, n = this->change_leader_invalid_hashs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      7, this->change_leader_invalid_hashs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.Block)
}

::google::protobuf::uint8* Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional uint64 height = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->height(), target);
  }

  // optional uint64 consistency_random = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->consistency_random(), target);
  }

  // optional uint64 timeblock_height = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->timeblock_height(), target);
  }

  // repeated .shardora.block.protobuf.BlockTx tx_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tx_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->tx_list(static_cast<int>(i)), deterministic, target);
  }

  // optional uint64 timestamp = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->timestamp(), target);
  }

  // repeated bytes change_leader_invalid_hashs = 7;
  for (int i = 0, n = this->change_leader_invalid_hashs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(7, this->change_leader_invalid_hashs(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.Block)
  return target;
}

size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.Block)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.block.protobuf.BlockTx tx_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->tx_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tx_list(static_cast<int>(i)));
    }
  }

  // repeated bytes change_leader_invalid_hashs = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->change_leader_invalid_hashs_size());
  for (int i = 0, n = this->change_leader_invalid_hashs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->change_leader_invalid_hashs(i));
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint64 height = 2;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->height());
    }

    // optional uint64 consistency_random = 3;
    if (has_consistency_random()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->consistency_random());
    }

    // optional uint64 timeblock_height = 4;
    if (has_timeblock_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timeblock_height());
    }

    // optional uint64 timestamp = 6;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.Block)
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tx_list_.MergeFrom(from.tx_list_);
  change_leader_invalid_hashs_.MergeFrom(from.change_leader_invalid_hashs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000002u) {
      consistency_random_ = from.consistency_random_;
    }
    if (cached_has_bits & 0x00000004u) {
      timeblock_height_ = from.timeblock_height_;
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  using std::swap;
  CastToBase(&tx_list_)->InternalSwap(CastToBase(&other->tx_list_));
  change_leader_invalid_hashs_.InternalSwap(CastToBase(&other->change_leader_invalid_hashs_));
  swap(height_, other->height_);
  swap(consistency_random_, other->consistency_random_);
  swap(timeblock_height_, other->timeblock_height_);
  swap(timestamp_, other->timestamp_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConsensusToTxsItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConsensusToTxsItem::kToFieldNumber;
const int ConsensusToTxsItem::kBalanceFieldNumber;
const int ConsensusToTxsItem::kContractFromFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConsensusToTxsItem::ConsensusToTxsItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_ConsensusToTxsItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.ConsensusToTxsItem)
}
ConsensusToTxsItem::ConsensusToTxsItem(const ConsensusToTxsItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to()) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  contract_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_contract_from()) {
    contract_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_from_);
  }
  balance_ = from.balance_;
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.ConsensusToTxsItem)
}

void ConsensusToTxsItem::SharedCtor() {
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_ = GOOGLE_ULONGLONG(0);
}

ConsensusToTxsItem::~ConsensusToTxsItem() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.ConsensusToTxsItem)
  SharedDtor();
}

void ConsensusToTxsItem::SharedDtor() {
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConsensusToTxsItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConsensusToTxsItem::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConsensusToTxsItem& ConsensusToTxsItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_ConsensusToTxsItem.base);
  return *internal_default_instance();
}


void ConsensusToTxsItem::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.ConsensusToTxsItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      to_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      contract_from_.ClearNonDefaultToEmptyNoArena();
    }
  }
  balance_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConsensusToTxsItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.ConsensusToTxsItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes to = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 balance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_balance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes contract_from = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_contract_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.ConsensusToTxsItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.ConsensusToTxsItem)
  return false;
#undef DO_
}

void ConsensusToTxsItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.ConsensusToTxsItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes to = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->to(), output);
  }

  // optional uint64 balance = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->balance(), output);
  }

  // optional bytes contract_from = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->contract_from(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.ConsensusToTxsItem)
}

::google::protobuf::uint8* ConsensusToTxsItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.ConsensusToTxsItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes to = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->to(), target);
  }

  // optional uint64 balance = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->balance(), target);
  }

  // optional bytes contract_from = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->contract_from(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.ConsensusToTxsItem)
  return target;
}

size_t ConsensusToTxsItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.ConsensusToTxsItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes to = 1;
    if (has_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->to());
    }

    // optional bytes contract_from = 3;
    if (has_contract_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->contract_from());
    }

    // optional uint64 balance = 2;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->balance());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsensusToTxsItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.ConsensusToTxsItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsensusToTxsItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConsensusToTxsItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.ConsensusToTxsItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.ConsensusToTxsItem)
    MergeFrom(*source);
  }
}

void ConsensusToTxsItem::MergeFrom(const ConsensusToTxsItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.ConsensusToTxsItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_to();
      to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_contract_from();
      contract_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_from_);
    }
    if (cached_has_bits & 0x00000004u) {
      balance_ = from.balance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConsensusToTxsItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.ConsensusToTxsItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsensusToTxsItem::CopyFrom(const ConsensusToTxsItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.ConsensusToTxsItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsensusToTxsItem::IsInitialized() const {
  return true;
}

void ConsensusToTxsItem::Swap(ConsensusToTxsItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConsensusToTxsItem::InternalSwap(ConsensusToTxsItem* other) {
  using std::swap;
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contract_from_.Swap(&other->contract_from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(balance_, other->balance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConsensusToTxsItem::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConsensusToTxs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConsensusToTxs::kTosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConsensusToTxs::ConsensusToTxs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_ConsensusToTxs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.ConsensusToTxs)
}
ConsensusToTxs::ConsensusToTxs(const ConsensusToTxs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tos_(from.tos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.ConsensusToTxs)
}

void ConsensusToTxs::SharedCtor() {
}

ConsensusToTxs::~ConsensusToTxs() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.ConsensusToTxs)
  SharedDtor();
}

void ConsensusToTxs::SharedDtor() {
}

void ConsensusToTxs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConsensusToTxs::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConsensusToTxs& ConsensusToTxs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_ConsensusToTxs.base);
  return *internal_default_instance();
}


void ConsensusToTxs::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.ConsensusToTxs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tos_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConsensusToTxs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.ConsensusToTxs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shardora.block.protobuf.ConsensusToTxsItem tos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.ConsensusToTxs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.ConsensusToTxs)
  return false;
#undef DO_
}

void ConsensusToTxs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.ConsensusToTxs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.block.protobuf.ConsensusToTxsItem tos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tos(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.ConsensusToTxs)
}

::google::protobuf::uint8* ConsensusToTxs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.ConsensusToTxs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.block.protobuf.ConsensusToTxsItem tos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tos(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.ConsensusToTxs)
  return target;
}

size_t ConsensusToTxs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.ConsensusToTxs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.block.protobuf.ConsensusToTxsItem tos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tos(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsensusToTxs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.ConsensusToTxs)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsensusToTxs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConsensusToTxs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.ConsensusToTxs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.ConsensusToTxs)
    MergeFrom(*source);
  }
}

void ConsensusToTxs::MergeFrom(const ConsensusToTxs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.ConsensusToTxs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tos_.MergeFrom(from.tos_);
}

void ConsensusToTxs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.ConsensusToTxs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsensusToTxs::CopyFrom(const ConsensusToTxs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.ConsensusToTxs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsensusToTxs::IsInitialized() const {
  return true;
}

void ConsensusToTxs::Swap(ConsensusToTxs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConsensusToTxs::InternalSwap(ConsensusToTxs* other) {
  using std::swap;
  CastToBase(&tos_)->InternalSwap(CastToBase(&other->tos_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConsensusToTxs::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTxBlockRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTxBlockRequest::kTxGidFieldNumber;
const int GetTxBlockRequest::kBlockHashFieldNumber;
const int GetTxBlockRequest::kFromFieldNumber;
const int GetTxBlockRequest::kHeightFieldNumber;
const int GetTxBlockRequest::kAccountAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTxBlockRequest::GetTxBlockRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_GetTxBlockRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.GetTxBlockRequest)
}
GetTxBlockRequest::GetTxBlockRequest(const GetTxBlockRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tx_gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tx_gid()) {
    tx_gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_gid_);
  }
  block_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_block_hash()) {
    block_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.block_hash_);
  }
  account_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_address()) {
    account_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_address_);
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_) -
    reinterpret_cast<char*>(&height_)) + sizeof(from_));
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.GetTxBlockRequest)
}

void GetTxBlockRequest::SharedCtor() {
  tx_gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_) -
      reinterpret_cast<char*>(&height_)) + sizeof(from_));
}

GetTxBlockRequest::~GetTxBlockRequest() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.GetTxBlockRequest)
  SharedDtor();
}

void GetTxBlockRequest::SharedDtor() {
  tx_gid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTxBlockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTxBlockRequest::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTxBlockRequest& GetTxBlockRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_GetTxBlockRequest.base);
  return *internal_default_instance();
}


void GetTxBlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.GetTxBlockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      tx_gid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      block_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      account_address_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&from_) -
        reinterpret_cast<char*>(&height_)) + sizeof(from_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTxBlockRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.GetTxBlockRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes tx_gid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tx_gid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes block_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_block_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool from = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_from();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes account_address = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.GetTxBlockRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.GetTxBlockRequest)
  return false;
#undef DO_
}

void GetTxBlockRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.GetTxBlockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes tx_gid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->tx_gid(), output);
  }

  // optional bytes block_hash = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->block_hash(), output);
  }

  // optional bool from = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->from(), output);
  }

  // optional uint64 height = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->height(), output);
  }

  // optional bytes account_address = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->account_address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.GetTxBlockRequest)
}

::google::protobuf::uint8* GetTxBlockRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.GetTxBlockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes tx_gid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->tx_gid(), target);
  }

  // optional bytes block_hash = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->block_hash(), target);
  }

  // optional bool from = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->from(), target);
  }

  // optional uint64 height = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->height(), target);
  }

  // optional bytes account_address = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->account_address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.GetTxBlockRequest)
  return target;
}

size_t GetTxBlockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.GetTxBlockRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes tx_gid = 1;
    if (has_tx_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tx_gid());
    }

    // optional bytes block_hash = 2;
    if (has_block_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->block_hash());
    }

    // optional bytes account_address = 5;
    if (has_account_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->account_address());
    }

    // optional uint64 height = 4;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->height());
    }

    // optional bool from = 3;
    if (has_from()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTxBlockRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.GetTxBlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTxBlockRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTxBlockRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.GetTxBlockRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.GetTxBlockRequest)
    MergeFrom(*source);
  }
}

void GetTxBlockRequest::MergeFrom(const GetTxBlockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.GetTxBlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tx_gid();
      tx_gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tx_gid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_block_hash();
      block_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.block_hash_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_account_address();
      account_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_address_);
    }
    if (cached_has_bits & 0x00000008u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000010u) {
      from_ = from.from_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetTxBlockRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.GetTxBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTxBlockRequest::CopyFrom(const GetTxBlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.GetTxBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTxBlockRequest::IsInitialized() const {
  return true;
}

void GetTxBlockRequest::Swap(GetTxBlockRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTxBlockRequest::InternalSwap(GetTxBlockRequest* other) {
  using std::swap;
  tx_gid_.Swap(&other->tx_gid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  block_hash_.Swap(&other->block_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_address_.Swap(&other->account_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(height_, other->height_);
  swap(from_, other->from_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTxBlockRequest::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetTxBlockResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTxBlockResponse::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTxBlockResponse::GetTxBlockResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_GetTxBlockResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.GetTxBlockResponse)
}
GetTxBlockResponse::GetTxBlockResponse(const GetTxBlockResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_block()) {
    block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.block_);
  }
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.GetTxBlockResponse)
}

void GetTxBlockResponse::SharedCtor() {
  block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetTxBlockResponse::~GetTxBlockResponse() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.GetTxBlockResponse)
  SharedDtor();
}

void GetTxBlockResponse::SharedDtor() {
  block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetTxBlockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetTxBlockResponse::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetTxBlockResponse& GetTxBlockResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_GetTxBlockResponse.base);
  return *internal_default_instance();
}


void GetTxBlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.GetTxBlockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    block_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetTxBlockResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.GetTxBlockResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.GetTxBlockResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.GetTxBlockResponse)
  return false;
#undef DO_
}

void GetTxBlockResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.GetTxBlockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes block = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->block(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.GetTxBlockResponse)
}

::google::protobuf::uint8* GetTxBlockResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.GetTxBlockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes block = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->block(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.GetTxBlockResponse)
  return target;
}

size_t GetTxBlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.GetTxBlockResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes block = 1;
  if (has_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->block());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTxBlockResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.GetTxBlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTxBlockResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetTxBlockResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.GetTxBlockResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.GetTxBlockResponse)
    MergeFrom(*source);
  }
}

void GetTxBlockResponse::MergeFrom(const GetTxBlockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.GetTxBlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_block()) {
    set_has_block();
    block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.block_);
  }
}

void GetTxBlockResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.GetTxBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTxBlockResponse::CopyFrom(const GetTxBlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.GetTxBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTxBlockResponse::IsInitialized() const {
  return true;
}

void GetTxBlockResponse::Swap(GetTxBlockResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTxBlockResponse::InternalSwap(GetTxBlockResponse* other) {
  using std::swap;
  block_.Swap(&other->block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTxBlockResponse::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountHeightRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountHeightRequest::kAccountAddrFieldNumber;
const int AccountHeightRequest::kIndexFieldNumber;
const int AccountHeightRequest::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountHeightRequest::AccountHeightRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_AccountHeightRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.AccountHeightRequest)
}
AccountHeightRequest::AccountHeightRequest(const AccountHeightRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_addr()) {
    account_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_addr_);
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&index_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.AccountHeightRequest)
}

void AccountHeightRequest::SharedCtor() {
  account_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&index_)) + sizeof(count_));
}

AccountHeightRequest::~AccountHeightRequest() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.AccountHeightRequest)
  SharedDtor();
}

void AccountHeightRequest::SharedDtor() {
  account_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountHeightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountHeightRequest::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountHeightRequest& AccountHeightRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_AccountHeightRequest.base);
  return *internal_default_instance();
}


void AccountHeightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.AccountHeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    account_addr_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&index_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountHeightRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.AccountHeightRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes account_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account_addr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.AccountHeightRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.AccountHeightRequest)
  return false;
#undef DO_
}

void AccountHeightRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.AccountHeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes account_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account_addr(), output);
  }

  // optional int64 index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->index(), output);
  }

  // optional int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.AccountHeightRequest)
}

::google::protobuf::uint8* AccountHeightRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.AccountHeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes account_addr = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account_addr(), target);
  }

  // optional int64 index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->index(), target);
  }

  // optional int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.AccountHeightRequest)
  return target;
}

size_t AccountHeightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.AccountHeightRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes account_addr = 1;
    if (has_account_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->account_addr());
    }

    // optional int64 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->index());
    }

    // optional int32 count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountHeightRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.AccountHeightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountHeightRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountHeightRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.AccountHeightRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.AccountHeightRequest)
    MergeFrom(*source);
  }
}

void AccountHeightRequest::MergeFrom(const AccountHeightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.AccountHeightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_addr();
      account_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_addr_);
    }
    if (cached_has_bits & 0x00000002u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AccountHeightRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.AccountHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountHeightRequest::CopyFrom(const AccountHeightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.AccountHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountHeightRequest::IsInitialized() const {
  return true;
}

void AccountHeightRequest::Swap(AccountHeightRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountHeightRequest::InternalSwap(AccountHeightRequest* other) {
  using std::swap;
  account_addr_.Swap(&other->account_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountHeightRequest::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountHeightResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountHeightResponse::kHeightsFieldNumber;
const int AccountHeightResponse::kAccountAddrFieldNumber;
const int AccountHeightResponse::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountHeightResponse::AccountHeightResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_AccountHeightResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.AccountHeightResponse)
}
AccountHeightResponse::AccountHeightResponse(const AccountHeightResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      heights_(from.heights_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_addr()) {
    account_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_addr_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.AccountHeightResponse)
}

void AccountHeightResponse::SharedCtor() {
  account_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AccountHeightResponse::~AccountHeightResponse() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.AccountHeightResponse)
  SharedDtor();
}

void AccountHeightResponse::SharedDtor() {
  account_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountHeightResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountHeightResponse::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountHeightResponse& AccountHeightResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_AccountHeightResponse.base);
  return *internal_default_instance();
}


void AccountHeightResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.AccountHeightResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heights_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      account_addr_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      type_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountHeightResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.AccountHeightResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 heights = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_heights())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_heights())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes account_addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account_addr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.AccountHeightResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.AccountHeightResponse)
  return false;
#undef DO_
}

void AccountHeightResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.AccountHeightResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 heights = 1;
  for (int i = 0, n = this->heights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->heights(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes account_addr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->account_addr(), output);
  }

  // optional bytes type = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.AccountHeightResponse)
}

::google::protobuf::uint8* AccountHeightResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.AccountHeightResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 heights = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->heights_, target);

  cached_has_bits = _has_bits_[0];
  // optional bytes account_addr = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->account_addr(), target);
  }

  // optional bytes type = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.AccountHeightResponse)
  return target;
}

size_t AccountHeightResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.AccountHeightResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 heights = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->heights_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->heights_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes account_addr = 2;
    if (has_account_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->account_addr());
    }

    // optional bytes type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountHeightResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.AccountHeightResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountHeightResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountHeightResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.AccountHeightResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.AccountHeightResponse)
    MergeFrom(*source);
  }
}

void AccountHeightResponse::MergeFrom(const AccountHeightResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.AccountHeightResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  heights_.MergeFrom(from.heights_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_addr();
      account_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_addr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
  }
}

void AccountHeightResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.AccountHeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountHeightResponse::CopyFrom(const AccountHeightResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.AccountHeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountHeightResponse::IsInitialized() const {
  return true;
}

void AccountHeightResponse::Swap(AccountHeightResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountHeightResponse::InternalSwap(AccountHeightResponse* other) {
  using std::swap;
  heights_.InternalSwap(&other->heights_);
  account_addr_.Swap(&other->account_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountHeightResponse::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountAttrRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountAttrRequest::kAccountFieldNumber;
const int AccountAttrRequest::kAttrKeyFieldNumber;
const int AccountAttrRequest::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountAttrRequest::AccountAttrRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_AccountAttrRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.AccountAttrRequest)
}
AccountAttrRequest::AccountAttrRequest(const AccountAttrRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  attr_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attr_key()) {
    attr_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_key_);
  }
  height_ = from.height_;
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.AccountAttrRequest)
}

void AccountAttrRequest::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  height_ = GOOGLE_ULONGLONG(0);
}

AccountAttrRequest::~AccountAttrRequest() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.AccountAttrRequest)
  SharedDtor();
}

void AccountAttrRequest::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountAttrRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountAttrRequest::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountAttrRequest& AccountAttrRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_AccountAttrRequest.base);
  return *internal_default_instance();
}


void AccountAttrRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.AccountAttrRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      attr_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  height_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountAttrRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.AccountAttrRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attr_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attr_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.AccountAttrRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.AccountAttrRequest)
  return false;
#undef DO_
}

void AccountAttrRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.AccountAttrRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account(), output);
  }

  // optional bytes attr_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->attr_key(), output);
  }

  // optional uint64 height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.AccountAttrRequest)
}

::google::protobuf::uint8* AccountAttrRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.AccountAttrRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account(), target);
  }

  // optional bytes attr_key = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->attr_key(), target);
  }

  // optional uint64 height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.AccountAttrRequest)
  return target;
}

size_t AccountAttrRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.AccountAttrRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->account());
    }

    // optional bytes attr_key = 2;
    if (has_attr_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attr_key());
    }

    // optional uint64 height = 3;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountAttrRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.AccountAttrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountAttrRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountAttrRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.AccountAttrRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.AccountAttrRequest)
    MergeFrom(*source);
  }
}

void AccountAttrRequest::MergeFrom(const AccountAttrRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.AccountAttrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_attr_key();
      attr_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AccountAttrRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.AccountAttrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountAttrRequest::CopyFrom(const AccountAttrRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.AccountAttrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountAttrRequest::IsInitialized() const {
  return true;
}

void AccountAttrRequest::Swap(AccountAttrRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountAttrRequest::InternalSwap(AccountAttrRequest* other) {
  using std::swap;
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attr_key_.Swap(&other->attr_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountAttrRequest::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountAttrResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountAttrResponse::kAccountFieldNumber;
const int AccountAttrResponse::kAttrKeyFieldNumber;
const int AccountAttrResponse::kHeightFieldNumber;
const int AccountAttrResponse::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountAttrResponse::AccountAttrResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_AccountAttrResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.AccountAttrResponse)
}
AccountAttrResponse::AccountAttrResponse(const AccountAttrResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  attr_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attr_key()) {
    attr_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_key_);
  }
  block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_block()) {
    block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.block_);
  }
  height_ = from.height_;
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.AccountAttrResponse)
}

void AccountAttrResponse::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  height_ = GOOGLE_ULONGLONG(0);
}

AccountAttrResponse::~AccountAttrResponse() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.AccountAttrResponse)
  SharedDtor();
}

void AccountAttrResponse::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountAttrResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccountAttrResponse::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountAttrResponse& AccountAttrResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_AccountAttrResponse.base);
  return *internal_default_instance();
}


void AccountAttrResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.AccountAttrResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      account_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      attr_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      block_.ClearNonDefaultToEmptyNoArena();
    }
  }
  height_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountAttrResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.AccountAttrResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes attr_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attr_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes block = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.AccountAttrResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.AccountAttrResponse)
  return false;
#undef DO_
}

void AccountAttrResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.AccountAttrResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account(), output);
  }

  // optional bytes attr_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->attr_key(), output);
  }

  // optional uint64 height = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->height(), output);
  }

  // optional bytes block = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->block(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.AccountAttrResponse)
}

::google::protobuf::uint8* AccountAttrResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.AccountAttrResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account(), target);
  }

  // optional bytes attr_key = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->attr_key(), target);
  }

  // optional uint64 height = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->height(), target);
  }

  // optional bytes block = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->block(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.AccountAttrResponse)
  return target;
}

size_t AccountAttrResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.AccountAttrResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->account());
    }

    // optional bytes attr_key = 2;
    if (has_attr_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->attr_key());
    }

    // optional bytes block = 4;
    if (has_block()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->block());
    }

    // optional uint64 height = 3;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountAttrResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.AccountAttrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountAttrResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountAttrResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.AccountAttrResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.AccountAttrResponse)
    MergeFrom(*source);
  }
}

void AccountAttrResponse::MergeFrom(const AccountAttrResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.AccountAttrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_attr_key();
      attr_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_block();
      block_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.block_);
    }
    if (cached_has_bits & 0x00000008u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AccountAttrResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.AccountAttrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountAttrResponse::CopyFrom(const AccountAttrResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.AccountAttrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountAttrResponse::IsInitialized() const {
  return true;
}

void AccountAttrResponse::Swap(AccountAttrResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountAttrResponse::InternalSwap(AccountAttrResponse* other) {
  using std::swap;
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attr_key_.Swap(&other->attr_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  block_.Swap(&other->block_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccountAttrResponse::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateVpnCountRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateVpnCountRequest::kAccountHashFieldNumber;
const int UpdateVpnCountRequest::kIpFieldNumber;
const int UpdateVpnCountRequest::kOldIpFieldNumber;
const int UpdateVpnCountRequest::kUidFieldNumber;
const int UpdateVpnCountRequest::kJustSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateVpnCountRequest::UpdateVpnCountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_UpdateVpnCountRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.UpdateVpnCountRequest)
}
UpdateVpnCountRequest::UpdateVpnCountRequest(const UpdateVpnCountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  old_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_old_ip()) {
    old_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_ip_);
  }
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uid()) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  ::memcpy(&account_hash_, &from.account_hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&just_set_) -
    reinterpret_cast<char*>(&account_hash_)) + sizeof(just_set_));
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.UpdateVpnCountRequest)
}

void UpdateVpnCountRequest::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  old_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&just_set_) -
      reinterpret_cast<char*>(&account_hash_)) + sizeof(just_set_));
}

UpdateVpnCountRequest::~UpdateVpnCountRequest() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.UpdateVpnCountRequest)
  SharedDtor();
}

void UpdateVpnCountRequest::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  old_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateVpnCountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateVpnCountRequest::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateVpnCountRequest& UpdateVpnCountRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_UpdateVpnCountRequest.base);
  return *internal_default_instance();
}


void UpdateVpnCountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.UpdateVpnCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      ip_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      old_ip_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      uid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&account_hash_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&just_set_) -
        reinterpret_cast<char*>(&account_hash_)) + sizeof(just_set_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateVpnCountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.UpdateVpnCountRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 account_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_account_hash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &account_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes old_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_old_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes uid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool just_set = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_just_set();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &just_set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.UpdateVpnCountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.UpdateVpnCountRequest)
  return false;
#undef DO_
}

void UpdateVpnCountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.UpdateVpnCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 account_hash = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->account_hash(), output);
  }

  // optional bytes ip = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ip(), output);
  }

  // optional bytes old_ip = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->old_ip(), output);
  }

  // optional bytes uid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->uid(), output);
  }

  // optional bool just_set = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->just_set(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.UpdateVpnCountRequest)
}

::google::protobuf::uint8* UpdateVpnCountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.UpdateVpnCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 account_hash = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->account_hash(), target);
  }

  // optional bytes ip = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip(), target);
  }

  // optional bytes old_ip = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->old_ip(), target);
  }

  // optional bytes uid = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->uid(), target);
  }

  // optional bool just_set = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->just_set(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.UpdateVpnCountRequest)
  return target;
}

size_t UpdateVpnCountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.UpdateVpnCountRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ip());
    }

    // optional bytes old_ip = 3;
    if (has_old_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->old_ip());
    }

    // optional bytes uid = 4;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uid());
    }

    // optional uint64 account_hash = 1;
    if (has_account_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->account_hash());
    }

    // optional bool just_set = 5;
    if (has_just_set()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateVpnCountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.UpdateVpnCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateVpnCountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateVpnCountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.UpdateVpnCountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.UpdateVpnCountRequest)
    MergeFrom(*source);
  }
}

void UpdateVpnCountRequest::MergeFrom(const UpdateVpnCountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.UpdateVpnCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_old_ip();
      old_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_ip_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_uid();
      uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
    }
    if (cached_has_bits & 0x00000008u) {
      account_hash_ = from.account_hash_;
    }
    if (cached_has_bits & 0x00000010u) {
      just_set_ = from.just_set_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UpdateVpnCountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.UpdateVpnCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateVpnCountRequest::CopyFrom(const UpdateVpnCountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.UpdateVpnCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateVpnCountRequest::IsInitialized() const {
  return true;
}

void UpdateVpnCountRequest::Swap(UpdateVpnCountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateVpnCountRequest::InternalSwap(UpdateVpnCountRequest* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  old_ip_.Swap(&other->old_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(account_hash_, other->account_hash_);
  swap(just_set_, other->just_set_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateVpnCountRequest::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VpnCountItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VpnCountItem::kIpFieldNumber;
const int VpnCountItem::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VpnCountItem::VpnCountItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_VpnCountItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.VpnCountItem)
}
VpnCountItem::VpnCountItem(const VpnCountItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.VpnCountItem)
}

void VpnCountItem::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0u;
}

VpnCountItem::~VpnCountItem() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.VpnCountItem)
  SharedDtor();
}

void VpnCountItem::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VpnCountItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VpnCountItem::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VpnCountItem& VpnCountItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_VpnCountItem.base);
  return *internal_default_instance();
}


void VpnCountItem::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.VpnCountItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ip_.ClearNonDefaultToEmptyNoArena();
  }
  count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VpnCountItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.VpnCountItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.VpnCountItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.VpnCountItem)
  return false;
#undef DO_
}

void VpnCountItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.VpnCountItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ip(), output);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.VpnCountItem)
}

::google::protobuf::uint8* VpnCountItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.VpnCountItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ip(), target);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.VpnCountItem)
  return target;
}

size_t VpnCountItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.VpnCountItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes ip = 1;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ip());
    }

    // optional uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VpnCountItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.VpnCountItem)
  GOOGLE_DCHECK_NE(&from, this);
  const VpnCountItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VpnCountItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.VpnCountItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.VpnCountItem)
    MergeFrom(*source);
  }
}

void VpnCountItem::MergeFrom(const VpnCountItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.VpnCountItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VpnCountItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.VpnCountItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VpnCountItem::CopyFrom(const VpnCountItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.VpnCountItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VpnCountItem::IsInitialized() const {
  return true;
}

void VpnCountItem::Swap(VpnCountItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VpnCountItem::InternalSwap(VpnCountItem* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VpnCountItem::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateVpnCountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateVpnCountResponse::kVpnNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateVpnCountResponse::UpdateVpnCountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_UpdateVpnCountResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.UpdateVpnCountResponse)
}
UpdateVpnCountResponse::UpdateVpnCountResponse(const UpdateVpnCountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      vpn_nodes_(from.vpn_nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.UpdateVpnCountResponse)
}

void UpdateVpnCountResponse::SharedCtor() {
}

UpdateVpnCountResponse::~UpdateVpnCountResponse() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.UpdateVpnCountResponse)
  SharedDtor();
}

void UpdateVpnCountResponse::SharedDtor() {
}

void UpdateVpnCountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateVpnCountResponse::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateVpnCountResponse& UpdateVpnCountResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_UpdateVpnCountResponse.base);
  return *internal_default_instance();
}


void UpdateVpnCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.UpdateVpnCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vpn_nodes_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateVpnCountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.UpdateVpnCountResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shardora.block.protobuf.VpnCountItem vpn_nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vpn_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.UpdateVpnCountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.UpdateVpnCountResponse)
  return false;
#undef DO_
}

void UpdateVpnCountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.UpdateVpnCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.block.protobuf.VpnCountItem vpn_nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vpn_nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->vpn_nodes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.UpdateVpnCountResponse)
}

::google::protobuf::uint8* UpdateVpnCountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.UpdateVpnCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.block.protobuf.VpnCountItem vpn_nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vpn_nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->vpn_nodes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.UpdateVpnCountResponse)
  return target;
}

size_t UpdateVpnCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.UpdateVpnCountResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.block.protobuf.VpnCountItem vpn_nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->vpn_nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vpn_nodes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateVpnCountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.UpdateVpnCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateVpnCountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateVpnCountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.UpdateVpnCountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.UpdateVpnCountResponse)
    MergeFrom(*source);
  }
}

void UpdateVpnCountResponse::MergeFrom(const UpdateVpnCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.UpdateVpnCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vpn_nodes_.MergeFrom(from.vpn_nodes_);
}

void UpdateVpnCountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.UpdateVpnCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateVpnCountResponse::CopyFrom(const UpdateVpnCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.UpdateVpnCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateVpnCountResponse::IsInitialized() const {
  return true;
}

void UpdateVpnCountResponse::Swap(UpdateVpnCountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateVpnCountResponse::InternalSwap(UpdateVpnCountResponse* other) {
  using std::swap;
  CastToBase(&vpn_nodes_)->InternalSwap(CastToBase(&other->vpn_nodes_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateVpnCountResponse::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAccountInitInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccountInitInfoRequest::kIdFieldNumber;
const int GetAccountInitInfoRequest::kCountFieldNumber;
const int GetAccountInitInfoRequest::kHeightFieldNumber;
const int GetAccountInitInfoRequest::kNetIdFieldNumber;
const int GetAccountInitInfoRequest::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccountInitInfoRequest::GetAccountInitInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_GetAccountInitInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.GetAccountInitInfoRequest)
}
GetAccountInitInfoRequest::GetAccountInitInfoRequest(const GetAccountInitInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&height_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.GetAccountInitInfoRequest)
}

void GetAccountInitInfoRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&height_)) + sizeof(count_));
}

GetAccountInitInfoRequest::~GetAccountInitInfoRequest() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.GetAccountInitInfoRequest)
  SharedDtor();
}

void GetAccountInitInfoRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccountInitInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAccountInitInfoRequest::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAccountInitInfoRequest& GetAccountInitInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_GetAccountInitInfoRequest.base);
  return *internal_default_instance();
}


void GetAccountInitInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.GetAccountInitInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&height_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAccountInitInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.GetAccountInitInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 net_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_net_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &net_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.GetAccountInitInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.GetAccountInitInfoRequest)
  return false;
#undef DO_
}

void GetAccountInitInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.GetAccountInitInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->id(), output);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // optional uint64 height = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->height(), output);
  }

  // optional uint64 net_id = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->net_id(), output);
  }

  // optional uint64 index = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.GetAccountInitInfoRequest)
}

::google::protobuf::uint8* GetAccountInitInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.GetAccountInitInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->id(), target);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // optional uint64 height = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->height(), target);
  }

  // optional uint64 net_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->net_id(), target);
  }

  // optional uint64 index = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.GetAccountInitInfoRequest)
  return target;
}

size_t GetAccountInitInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.GetAccountInitInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id());
    }

    // optional uint64 height = 3;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->height());
    }

    // optional uint64 net_id = 4;
    if (has_net_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->net_id());
    }

    // optional uint64 index = 5;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->index());
    }

    // optional uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccountInitInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.GetAccountInitInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountInitInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccountInitInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.GetAccountInitInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.GetAccountInitInfoRequest)
    MergeFrom(*source);
  }
}

void GetAccountInitInfoRequest::MergeFrom(const GetAccountInitInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.GetAccountInitInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000004u) {
      net_id_ = from.net_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAccountInitInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.GetAccountInitInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountInitInfoRequest::CopyFrom(const GetAccountInitInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.GetAccountInitInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountInitInfoRequest::IsInitialized() const {
  return true;
}

void GetAccountInitInfoRequest::Swap(GetAccountInitInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccountInitInfoRequest::InternalSwap(GetAccountInitInfoRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(height_, other->height_);
  swap(net_id_, other->net_id_);
  swap(index_, other->index_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAccountInitInfoRequest::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAccountInitInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccountInitInfoResponse::kBalanceFieldNumber;
const int GetAccountInitInfoResponse::kBlockListFieldNumber;
const int GetAccountInitInfoResponse::kIdFieldNumber;
const int GetAccountInitInfoResponse::kMaxIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccountInitInfoResponse::GetAccountInitInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_GetAccountInitInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.GetAccountInitInfoResponse)
}
GetAccountInitInfoResponse::GetAccountInitInfoResponse(const GetAccountInitInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      block_list_(from.block_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&balance_, &from.balance_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_index_) -
    reinterpret_cast<char*>(&balance_)) + sizeof(max_index_));
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.GetAccountInitInfoResponse)
}

void GetAccountInitInfoResponse::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&balance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_index_) -
      reinterpret_cast<char*>(&balance_)) + sizeof(max_index_));
}

GetAccountInitInfoResponse::~GetAccountInitInfoResponse() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.GetAccountInitInfoResponse)
  SharedDtor();
}

void GetAccountInitInfoResponse::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccountInitInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAccountInitInfoResponse::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAccountInitInfoResponse& GetAccountInitInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_GetAccountInitInfoResponse.base);
  return *internal_default_instance();
}


void GetAccountInitInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.GetAccountInitInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&balance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_index_) -
        reinterpret_cast<char*>(&balance_)) + sizeof(max_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAccountInitInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.GetAccountInitInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 balance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_balance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .shardora.block.protobuf.Block block_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_block_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 max_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_max_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.GetAccountInitInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.GetAccountInitInfoResponse)
  return false;
#undef DO_
}

void GetAccountInitInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.GetAccountInitInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 balance = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->balance(), output);
  }

  // repeated .shardora.block.protobuf.Block block_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->block_list(static_cast<int>(i)),
      output);
  }

  // optional bytes id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->id(), output);
  }

  // optional uint64 max_index = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->max_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.GetAccountInitInfoResponse)
}

::google::protobuf::uint8* GetAccountInitInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.GetAccountInitInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 balance = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->balance(), target);
  }

  // repeated .shardora.block.protobuf.Block block_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->block_list(static_cast<int>(i)), deterministic, target);
  }

  // optional bytes id = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->id(), target);
  }

  // optional uint64 max_index = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->max_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.GetAccountInitInfoResponse)
  return target;
}

size_t GetAccountInitInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.GetAccountInitInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.block.protobuf.Block block_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->block_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->block_list(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes id = 3;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id());
    }

    // optional uint64 balance = 1;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->balance());
    }

    // optional uint64 max_index = 4;
    if (has_max_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->max_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccountInitInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.GetAccountInitInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountInitInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccountInitInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.GetAccountInitInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.GetAccountInitInfoResponse)
    MergeFrom(*source);
  }
}

void GetAccountInitInfoResponse::MergeFrom(const GetAccountInitInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.GetAccountInitInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_list_.MergeFrom(from.block_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      balance_ = from.balance_;
    }
    if (cached_has_bits & 0x00000004u) {
      max_index_ = from.max_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAccountInitInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.GetAccountInitInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountInitInfoResponse::CopyFrom(const GetAccountInitInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.GetAccountInitInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountInitInfoResponse::IsInitialized() const {
  return true;
}

void GetAccountInitInfoResponse::Swap(GetAccountInitInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccountInitInfoResponse::InternalSwap(GetAccountInitInfoResponse* other) {
  using std::swap;
  CastToBase(&block_list_)->InternalSwap(CastToBase(&other->block_list_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(balance_, other->balance_);
  swap(max_index_, other->max_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAccountInitInfoResponse::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateVpnActiveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateVpnActiveRequest::kIdFieldNumber;
const int UpdateVpnActiveRequest::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateVpnActiveRequest::UpdateVpnActiveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_UpdateVpnActiveRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.UpdateVpnActiveRequest)
}
UpdateVpnActiveRequest::UpdateVpnActiveRequest(const UpdateVpnActiveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.UpdateVpnActiveRequest)
}

void UpdateVpnActiveRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UpdateVpnActiveRequest::~UpdateVpnActiveRequest() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.UpdateVpnActiveRequest)
  SharedDtor();
}

void UpdateVpnActiveRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateVpnActiveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateVpnActiveRequest::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateVpnActiveRequest& UpdateVpnActiveRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_UpdateVpnActiveRequest.base);
  return *internal_default_instance();
}


void UpdateVpnActiveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.UpdateVpnActiveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      ip_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateVpnActiveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.UpdateVpnActiveRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.UpdateVpnActiveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.UpdateVpnActiveRequest)
  return false;
#undef DO_
}

void UpdateVpnActiveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.UpdateVpnActiveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->id(), output);
  }

  // optional bytes ip = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.UpdateVpnActiveRequest)
}

::google::protobuf::uint8* UpdateVpnActiveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.UpdateVpnActiveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->id(), target);
  }

  // optional bytes ip = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.UpdateVpnActiveRequest)
  return target;
}

size_t UpdateVpnActiveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.UpdateVpnActiveRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id());
    }

    // optional bytes ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ip());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateVpnActiveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.UpdateVpnActiveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateVpnActiveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateVpnActiveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.UpdateVpnActiveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.UpdateVpnActiveRequest)
    MergeFrom(*source);
  }
}

void UpdateVpnActiveRequest::MergeFrom(const UpdateVpnActiveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.UpdateVpnActiveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
  }
}

void UpdateVpnActiveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.UpdateVpnActiveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateVpnActiveRequest::CopyFrom(const UpdateVpnActiveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.UpdateVpnActiveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateVpnActiveRequest::IsInitialized() const {
  return true;
}

void UpdateVpnActiveRequest::Swap(UpdateVpnActiveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateVpnActiveRequest::InternalSwap(UpdateVpnActiveRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateVpnActiveRequest::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AdRewardRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdRewardRequest::kIdFieldNumber;
const int AdRewardRequest::kRewardKeyFieldNumber;
const int AdRewardRequest::kGidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdRewardRequest::AdRewardRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_AdRewardRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.AdRewardRequest)
}
AdRewardRequest::AdRewardRequest(const AdRewardRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  reward_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reward_key()) {
    reward_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward_key_);
  }
  gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gid()) {
    gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gid_);
  }
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.AdRewardRequest)
}

void AdRewardRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AdRewardRequest::~AdRewardRequest() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.AdRewardRequest)
  SharedDtor();
}

void AdRewardRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reward_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AdRewardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AdRewardRequest::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdRewardRequest& AdRewardRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_AdRewardRequest.base);
  return *internal_default_instance();
}


void AdRewardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.AdRewardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      reward_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      gid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AdRewardRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.AdRewardRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes reward_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_reward_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.AdRewardRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.AdRewardRequest)
  return false;
#undef DO_
}

void AdRewardRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.AdRewardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->id(), output);
  }

  // optional bytes reward_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->reward_key(), output);
  }

  // optional bytes gid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->gid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.AdRewardRequest)
}

::google::protobuf::uint8* AdRewardRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.AdRewardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->id(), target);
  }

  // optional bytes reward_key = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->reward_key(), target);
  }

  // optional bytes gid = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->gid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.AdRewardRequest)
  return target;
}

size_t AdRewardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.AdRewardRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id());
    }

    // optional bytes reward_key = 2;
    if (has_reward_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->reward_key());
    }

    // optional bytes gid = 3;
    if (has_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdRewardRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.AdRewardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AdRewardRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdRewardRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.AdRewardRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.AdRewardRequest)
    MergeFrom(*source);
  }
}

void AdRewardRequest::MergeFrom(const AdRewardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.AdRewardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_reward_key();
      reward_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reward_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_gid();
      gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gid_);
    }
  }
}

void AdRewardRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.AdRewardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdRewardRequest::CopyFrom(const AdRewardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.AdRewardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdRewardRequest::IsInitialized() const {
  return true;
}

void AdRewardRequest::Swap(AdRewardRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdRewardRequest::InternalSwap(AdRewardRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reward_key_.Swap(&other->reward_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gid_.Swap(&other->gid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AdRewardRequest::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElectStatisticInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElectStatisticInfo::kElectHeightFieldNumber;
const int ElectStatisticInfo::kSuccTxCountFieldNumber;
const int ElectStatisticInfo::kLofLeadersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElectStatisticInfo::ElectStatisticInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_ElectStatisticInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.ElectStatisticInfo)
}
ElectStatisticInfo::ElectStatisticInfo(const ElectStatisticInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      succ_tx_count_(from.succ_tx_count_),
      lof_leaders_(from.lof_leaders_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  elect_height_ = from.elect_height_;
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.ElectStatisticInfo)
}

void ElectStatisticInfo::SharedCtor() {
  elect_height_ = GOOGLE_ULONGLONG(0);
}

ElectStatisticInfo::~ElectStatisticInfo() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.ElectStatisticInfo)
  SharedDtor();
}

void ElectStatisticInfo::SharedDtor() {
}

void ElectStatisticInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElectStatisticInfo::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElectStatisticInfo& ElectStatisticInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_ElectStatisticInfo.base);
  return *internal_default_instance();
}


void ElectStatisticInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.ElectStatisticInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  succ_tx_count_.Clear();
  lof_leaders_.Clear();
  elect_height_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ElectStatisticInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.ElectStatisticInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 elect_height = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_elect_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elect_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 succ_tx_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_succ_tx_count())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_succ_tx_count())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 lof_leaders = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_lof_leaders())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lof_leaders())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.ElectStatisticInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.ElectStatisticInfo)
  return false;
#undef DO_
}

void ElectStatisticInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.ElectStatisticInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 elect_height = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->elect_height(), output);
  }

  // repeated uint32 succ_tx_count = 2;
  for (int i = 0, n = this->succ_tx_count_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->succ_tx_count(i), output);
  }

  // repeated uint32 lof_leaders = 3;
  for (int i = 0, n = this->lof_leaders_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->lof_leaders(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.ElectStatisticInfo)
}

::google::protobuf::uint8* ElectStatisticInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.ElectStatisticInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 elect_height = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->elect_height(), target);
  }

  // repeated uint32 succ_tx_count = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->succ_tx_count_, target);

  // repeated uint32 lof_leaders = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->lof_leaders_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.ElectStatisticInfo)
  return target;
}

size_t ElectStatisticInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.ElectStatisticInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 succ_tx_count = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->succ_tx_count_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->succ_tx_count_size());
    total_size += data_size;
  }

  // repeated uint32 lof_leaders = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->lof_leaders_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->lof_leaders_size());
    total_size += data_size;
  }

  // optional uint64 elect_height = 1;
  if (has_elect_height()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->elect_height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElectStatisticInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.ElectStatisticInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ElectStatisticInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElectStatisticInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.ElectStatisticInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.ElectStatisticInfo)
    MergeFrom(*source);
  }
}

void ElectStatisticInfo::MergeFrom(const ElectStatisticInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.ElectStatisticInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  succ_tx_count_.MergeFrom(from.succ_tx_count_);
  lof_leaders_.MergeFrom(from.lof_leaders_);
  if (from.has_elect_height()) {
    set_elect_height(from.elect_height());
  }
}

void ElectStatisticInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.ElectStatisticInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElectStatisticInfo::CopyFrom(const ElectStatisticInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.ElectStatisticInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElectStatisticInfo::IsInitialized() const {
  return true;
}

void ElectStatisticInfo::Swap(ElectStatisticInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElectStatisticInfo::InternalSwap(ElectStatisticInfo* other) {
  using std::swap;
  succ_tx_count_.InternalSwap(&other->succ_tx_count_);
  lof_leaders_.InternalSwap(&other->lof_leaders_);
  swap(elect_height_, other->elect_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElectStatisticInfo::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StatisticInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatisticInfo::kTimeblockHeightFieldNumber;
const int StatisticInfo::kAllTxCountFieldNumber;
const int StatisticInfo::kElectStatisticFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatisticInfo::StatisticInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_StatisticInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.StatisticInfo)
}
StatisticInfo::StatisticInfo(const StatisticInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      elect_statistic_(from.elect_statistic_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timeblock_height_, &from.timeblock_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&all_tx_count_) -
    reinterpret_cast<char*>(&timeblock_height_)) + sizeof(all_tx_count_));
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.StatisticInfo)
}

void StatisticInfo::SharedCtor() {
  ::memset(&timeblock_height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&all_tx_count_) -
      reinterpret_cast<char*>(&timeblock_height_)) + sizeof(all_tx_count_));
}

StatisticInfo::~StatisticInfo() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.StatisticInfo)
  SharedDtor();
}

void StatisticInfo::SharedDtor() {
}

void StatisticInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StatisticInfo::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatisticInfo& StatisticInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_StatisticInfo.base);
  return *internal_default_instance();
}


void StatisticInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.StatisticInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elect_statistic_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&timeblock_height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&all_tx_count_) -
        reinterpret_cast<char*>(&timeblock_height_)) + sizeof(all_tx_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StatisticInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.StatisticInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 timeblock_height = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_timeblock_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timeblock_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 all_tx_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_all_tx_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &all_tx_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .shardora.block.protobuf.ElectStatisticInfo elect_statistic = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_elect_statistic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.StatisticInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.StatisticInfo)
  return false;
#undef DO_
}

void StatisticInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.StatisticInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 timeblock_height = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timeblock_height(), output);
  }

  // optional uint32 all_tx_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->all_tx_count(), output);
  }

  // repeated .shardora.block.protobuf.ElectStatisticInfo elect_statistic = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elect_statistic_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->elect_statistic(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.StatisticInfo)
}

::google::protobuf::uint8* StatisticInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.StatisticInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 timeblock_height = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timeblock_height(), target);
  }

  // optional uint32 all_tx_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->all_tx_count(), target);
  }

  // repeated .shardora.block.protobuf.ElectStatisticInfo elect_statistic = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->elect_statistic_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->elect_statistic(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.StatisticInfo)
  return target;
}

size_t StatisticInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.StatisticInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.block.protobuf.ElectStatisticInfo elect_statistic = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->elect_statistic_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->elect_statistic(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 timeblock_height = 1;
    if (has_timeblock_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timeblock_height());
    }

    // optional uint32 all_tx_count = 2;
    if (has_all_tx_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->all_tx_count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatisticInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.StatisticInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const StatisticInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatisticInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.StatisticInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.StatisticInfo)
    MergeFrom(*source);
  }
}

void StatisticInfo::MergeFrom(const StatisticInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.StatisticInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elect_statistic_.MergeFrom(from.elect_statistic_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      timeblock_height_ = from.timeblock_height_;
    }
    if (cached_has_bits & 0x00000002u) {
      all_tx_count_ = from.all_tx_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StatisticInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.StatisticInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatisticInfo::CopyFrom(const StatisticInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.StatisticInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticInfo::IsInitialized() const {
  return true;
}

void StatisticInfo::Swap(StatisticInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatisticInfo::InternalSwap(StatisticInfo* other) {
  using std::swap;
  CastToBase(&elect_statistic_)->InternalSwap(CastToBase(&other->elect_statistic_));
  swap(timeblock_height_, other->timeblock_height_);
  swap(all_tx_count_, other->all_tx_count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StatisticInfo::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RefreshPoolHeightRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefreshPoolHeightRequest::kHeightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshPoolHeightRequest::RefreshPoolHeightRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_RefreshPoolHeightRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.RefreshPoolHeightRequest)
}
RefreshPoolHeightRequest::RefreshPoolHeightRequest(const RefreshPoolHeightRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      heights_(from.heights_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.RefreshPoolHeightRequest)
}

void RefreshPoolHeightRequest::SharedCtor() {
}

RefreshPoolHeightRequest::~RefreshPoolHeightRequest() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.RefreshPoolHeightRequest)
  SharedDtor();
}

void RefreshPoolHeightRequest::SharedDtor() {
}

void RefreshPoolHeightRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RefreshPoolHeightRequest::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefreshPoolHeightRequest& RefreshPoolHeightRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_RefreshPoolHeightRequest.base);
  return *internal_default_instance();
}


void RefreshPoolHeightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.RefreshPoolHeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heights_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RefreshPoolHeightRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.RefreshPoolHeightRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 heights = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_heights())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_heights())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.RefreshPoolHeightRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.RefreshPoolHeightRequest)
  return false;
#undef DO_
}

void RefreshPoolHeightRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.RefreshPoolHeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 heights = 1;
  for (int i = 0, n = this->heights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->heights(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.RefreshPoolHeightRequest)
}

::google::protobuf::uint8* RefreshPoolHeightRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.RefreshPoolHeightRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 heights = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->heights_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.RefreshPoolHeightRequest)
  return target;
}

size_t RefreshPoolHeightRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.RefreshPoolHeightRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 heights = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->heights_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->heights_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefreshPoolHeightRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.RefreshPoolHeightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshPoolHeightRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshPoolHeightRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.RefreshPoolHeightRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.RefreshPoolHeightRequest)
    MergeFrom(*source);
  }
}

void RefreshPoolHeightRequest::MergeFrom(const RefreshPoolHeightRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.RefreshPoolHeightRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  heights_.MergeFrom(from.heights_);
}

void RefreshPoolHeightRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.RefreshPoolHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshPoolHeightRequest::CopyFrom(const RefreshPoolHeightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.RefreshPoolHeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshPoolHeightRequest::IsInitialized() const {
  return true;
}

void RefreshPoolHeightRequest::Swap(RefreshPoolHeightRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshPoolHeightRequest::InternalSwap(RefreshPoolHeightRequest* other) {
  using std::swap;
  heights_.InternalSwap(&other->heights_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RefreshPoolHeightRequest::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RefreshPoolHeightResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefreshPoolHeightResponse::kHeightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefreshPoolHeightResponse::RefreshPoolHeightResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_RefreshPoolHeightResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.RefreshPoolHeightResponse)
}
RefreshPoolHeightResponse::RefreshPoolHeightResponse(const RefreshPoolHeightResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      heights_(from.heights_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.RefreshPoolHeightResponse)
}

void RefreshPoolHeightResponse::SharedCtor() {
}

RefreshPoolHeightResponse::~RefreshPoolHeightResponse() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.RefreshPoolHeightResponse)
  SharedDtor();
}

void RefreshPoolHeightResponse::SharedDtor() {
}

void RefreshPoolHeightResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RefreshPoolHeightResponse::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefreshPoolHeightResponse& RefreshPoolHeightResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_RefreshPoolHeightResponse.base);
  return *internal_default_instance();
}


void RefreshPoolHeightResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.RefreshPoolHeightResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heights_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RefreshPoolHeightResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.RefreshPoolHeightResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 heights = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_heights())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_heights())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.RefreshPoolHeightResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.RefreshPoolHeightResponse)
  return false;
#undef DO_
}

void RefreshPoolHeightResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.RefreshPoolHeightResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 heights = 1;
  for (int i = 0, n = this->heights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->heights(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.RefreshPoolHeightResponse)
}

::google::protobuf::uint8* RefreshPoolHeightResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.RefreshPoolHeightResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 heights = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->heights_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.RefreshPoolHeightResponse)
  return target;
}

size_t RefreshPoolHeightResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.RefreshPoolHeightResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 heights = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->heights_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->heights_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefreshPoolHeightResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.RefreshPoolHeightResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RefreshPoolHeightResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefreshPoolHeightResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.RefreshPoolHeightResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.RefreshPoolHeightResponse)
    MergeFrom(*source);
  }
}

void RefreshPoolHeightResponse::MergeFrom(const RefreshPoolHeightResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.RefreshPoolHeightResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  heights_.MergeFrom(from.heights_);
}

void RefreshPoolHeightResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.RefreshPoolHeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshPoolHeightResponse::CopyFrom(const RefreshPoolHeightResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.RefreshPoolHeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshPoolHeightResponse::IsInitialized() const {
  return true;
}

void RefreshPoolHeightResponse::Swap(RefreshPoolHeightResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefreshPoolHeightResponse::InternalSwap(RefreshPoolHeightResponse* other) {
  using std::swap;
  heights_.InternalSwap(&other->heights_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RefreshPoolHeightResponse::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAccountShardRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccountShardRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccountShardRequest::GetAccountShardRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_GetAccountShardRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.GetAccountShardRequest)
}
GetAccountShardRequest::GetAccountShardRequest(const GetAccountShardRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.GetAccountShardRequest)
}

void GetAccountShardRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetAccountShardRequest::~GetAccountShardRequest() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.GetAccountShardRequest)
  SharedDtor();
}

void GetAccountShardRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccountShardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAccountShardRequest::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAccountShardRequest& GetAccountShardRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_GetAccountShardRequest.base);
  return *internal_default_instance();
}


void GetAccountShardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.GetAccountShardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAccountShardRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.GetAccountShardRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.GetAccountShardRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.GetAccountShardRequest)
  return false;
#undef DO_
}

void GetAccountShardRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.GetAccountShardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.GetAccountShardRequest)
}

::google::protobuf::uint8* GetAccountShardRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.GetAccountShardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.GetAccountShardRequest)
  return target;
}

size_t GetAccountShardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.GetAccountShardRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bytes id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccountShardRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.GetAccountShardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountShardRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccountShardRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.GetAccountShardRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.GetAccountShardRequest)
    MergeFrom(*source);
  }
}

void GetAccountShardRequest::MergeFrom(const GetAccountShardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.GetAccountShardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_has_id();
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void GetAccountShardRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.GetAccountShardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountShardRequest::CopyFrom(const GetAccountShardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.GetAccountShardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountShardRequest::IsInitialized() const {
  return true;
}

void GetAccountShardRequest::Swap(GetAccountShardRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccountShardRequest::InternalSwap(GetAccountShardRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAccountShardRequest::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAccountShardReponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAccountShardReponse::kIdFieldNumber;
const int GetAccountShardReponse::kShardIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAccountShardReponse::GetAccountShardReponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_GetAccountShardReponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.GetAccountShardReponse)
}
GetAccountShardReponse::GetAccountShardReponse(const GetAccountShardReponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  shard_id_ = from.shard_id_;
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.GetAccountShardReponse)
}

void GetAccountShardReponse::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shard_id_ = 0u;
}

GetAccountShardReponse::~GetAccountShardReponse() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.GetAccountShardReponse)
  SharedDtor();
}

void GetAccountShardReponse::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetAccountShardReponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetAccountShardReponse::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAccountShardReponse& GetAccountShardReponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_GetAccountShardReponse.base);
  return *internal_default_instance();
}


void GetAccountShardReponse::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.GetAccountShardReponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  shard_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAccountShardReponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.GetAccountShardReponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 shard_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_shard_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.GetAccountShardReponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.GetAccountShardReponse)
  return false;
#undef DO_
}

void GetAccountShardReponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.GetAccountShardReponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->id(), output);
  }

  // optional uint32 shard_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->shard_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.GetAccountShardReponse)
}

::google::protobuf::uint8* GetAccountShardReponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.GetAccountShardReponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->id(), target);
  }

  // optional uint32 shard_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->shard_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.GetAccountShardReponse)
  return target;
}

size_t GetAccountShardReponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.GetAccountShardReponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id());
    }

    // optional uint32 shard_id = 2;
    if (has_shard_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shard_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAccountShardReponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.GetAccountShardReponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAccountShardReponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAccountShardReponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.GetAccountShardReponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.GetAccountShardReponse)
    MergeFrom(*source);
  }
}

void GetAccountShardReponse::MergeFrom(const GetAccountShardReponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.GetAccountShardReponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      shard_id_ = from.shard_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAccountShardReponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.GetAccountShardReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAccountShardReponse::CopyFrom(const GetAccountShardReponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.GetAccountShardReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAccountShardReponse::IsInitialized() const {
  return true;
}

void GetAccountShardReponse::Swap(GetAccountShardReponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAccountShardReponse::InternalSwap(GetAccountShardReponse* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shard_id_, other->shard_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetAccountShardReponse::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CrossShardingTosMessage::InitAsDefaultInstance() {
  ::shardora::block::protobuf::_CrossShardingTosMessage_default_instance_._instance.get_mutable()->block_ = const_cast< ::shardora::block::protobuf::Block*>(
      ::shardora::block::protobuf::Block::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CrossShardingTosMessage::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CrossShardingTosMessage::CrossShardingTosMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_CrossShardingTosMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.CrossShardingTosMessage)
}
CrossShardingTosMessage::CrossShardingTosMessage(const CrossShardingTosMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_block()) {
    block_ = new ::shardora::block::protobuf::Block(*from.block_);
  } else {
    block_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.CrossShardingTosMessage)
}

void CrossShardingTosMessage::SharedCtor() {
  block_ = NULL;
}

CrossShardingTosMessage::~CrossShardingTosMessage() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.CrossShardingTosMessage)
  SharedDtor();
}

void CrossShardingTosMessage::SharedDtor() {
  if (this != internal_default_instance()) delete block_;
}

void CrossShardingTosMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CrossShardingTosMessage::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CrossShardingTosMessage& CrossShardingTosMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_CrossShardingTosMessage.base);
  return *internal_default_instance();
}


void CrossShardingTosMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.CrossShardingTosMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(block_ != NULL);
    block_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CrossShardingTosMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.CrossShardingTosMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .shardora.block.protobuf.Block block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.CrossShardingTosMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.CrossShardingTosMessage)
  return false;
#undef DO_
}

void CrossShardingTosMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.CrossShardingTosMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.block.protobuf.Block block = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_block(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.CrossShardingTosMessage)
}

::google::protobuf::uint8* CrossShardingTosMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.CrossShardingTosMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.block.protobuf.Block block = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_block(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.CrossShardingTosMessage)
  return target;
}

size_t CrossShardingTosMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.CrossShardingTosMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .shardora.block.protobuf.Block block = 1;
  if (has_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *block_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CrossShardingTosMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.CrossShardingTosMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CrossShardingTosMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CrossShardingTosMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.CrossShardingTosMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.CrossShardingTosMessage)
    MergeFrom(*source);
  }
}

void CrossShardingTosMessage::MergeFrom(const CrossShardingTosMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.CrossShardingTosMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_block()) {
    mutable_block()->::shardora::block::protobuf::Block::MergeFrom(from.block());
  }
}

void CrossShardingTosMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.CrossShardingTosMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrossShardingTosMessage::CopyFrom(const CrossShardingTosMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.CrossShardingTosMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrossShardingTosMessage::IsInitialized() const {
  return true;
}

void CrossShardingTosMessage::Swap(CrossShardingTosMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrossShardingTosMessage::InternalSwap(CrossShardingTosMessage* other) {
  using std::swap;
  swap(block_, other->block_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CrossShardingTosMessage::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CrossShardingStatisticMessage::InitAsDefaultInstance() {
  ::shardora::block::protobuf::_CrossShardingStatisticMessage_default_instance_._instance.get_mutable()->block_ = const_cast< ::shardora::block::protobuf::Block*>(
      ::shardora::block::protobuf::Block::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CrossShardingStatisticMessage::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CrossShardingStatisticMessage::CrossShardingStatisticMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_CrossShardingStatisticMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.CrossShardingStatisticMessage)
}
CrossShardingStatisticMessage::CrossShardingStatisticMessage(const CrossShardingStatisticMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_block()) {
    block_ = new ::shardora::block::protobuf::Block(*from.block_);
  } else {
    block_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.CrossShardingStatisticMessage)
}

void CrossShardingStatisticMessage::SharedCtor() {
  block_ = NULL;
}

CrossShardingStatisticMessage::~CrossShardingStatisticMessage() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.CrossShardingStatisticMessage)
  SharedDtor();
}

void CrossShardingStatisticMessage::SharedDtor() {
  if (this != internal_default_instance()) delete block_;
}

void CrossShardingStatisticMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CrossShardingStatisticMessage::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CrossShardingStatisticMessage& CrossShardingStatisticMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_CrossShardingStatisticMessage.base);
  return *internal_default_instance();
}


void CrossShardingStatisticMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.CrossShardingStatisticMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(block_ != NULL);
    block_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CrossShardingStatisticMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.CrossShardingStatisticMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .shardora.block.protobuf.Block block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.CrossShardingStatisticMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.CrossShardingStatisticMessage)
  return false;
#undef DO_
}

void CrossShardingStatisticMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.CrossShardingStatisticMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.block.protobuf.Block block = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_block(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.CrossShardingStatisticMessage)
}

::google::protobuf::uint8* CrossShardingStatisticMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.CrossShardingStatisticMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.block.protobuf.Block block = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_block(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.CrossShardingStatisticMessage)
  return target;
}

size_t CrossShardingStatisticMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.CrossShardingStatisticMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .shardora.block.protobuf.Block block = 1;
  if (has_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *block_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CrossShardingStatisticMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.CrossShardingStatisticMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CrossShardingStatisticMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CrossShardingStatisticMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.CrossShardingStatisticMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.CrossShardingStatisticMessage)
    MergeFrom(*source);
  }
}

void CrossShardingStatisticMessage::MergeFrom(const CrossShardingStatisticMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.CrossShardingStatisticMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_block()) {
    mutable_block()->::shardora::block::protobuf::Block::MergeFrom(from.block());
  }
}

void CrossShardingStatisticMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.CrossShardingStatisticMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrossShardingStatisticMessage::CopyFrom(const CrossShardingStatisticMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.CrossShardingStatisticMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrossShardingStatisticMessage::IsInitialized() const {
  return true;
}

void CrossShardingStatisticMessage::Swap(CrossShardingStatisticMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrossShardingStatisticMessage::InternalSwap(CrossShardingStatisticMessage* other) {
  using std::swap;
  swap(block_, other->block_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CrossShardingStatisticMessage::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElectBlockMessage::InitAsDefaultInstance() {
  ::shardora::block::protobuf::_ElectBlockMessage_default_instance_._instance.get_mutable()->block_ = const_cast< ::shardora::block::protobuf::Block*>(
      ::shardora::block::protobuf::Block::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElectBlockMessage::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElectBlockMessage::ElectBlockMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_ElectBlockMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.ElectBlockMessage)
}
ElectBlockMessage::ElectBlockMessage(const ElectBlockMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_block()) {
    block_ = new ::shardora::block::protobuf::Block(*from.block_);
  } else {
    block_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.ElectBlockMessage)
}

void ElectBlockMessage::SharedCtor() {
  block_ = NULL;
}

ElectBlockMessage::~ElectBlockMessage() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.ElectBlockMessage)
  SharedDtor();
}

void ElectBlockMessage::SharedDtor() {
  if (this != internal_default_instance()) delete block_;
}

void ElectBlockMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElectBlockMessage::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElectBlockMessage& ElectBlockMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_ElectBlockMessage.base);
  return *internal_default_instance();
}


void ElectBlockMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.ElectBlockMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(block_ != NULL);
    block_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ElectBlockMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.ElectBlockMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .shardora.block.protobuf.Block block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.ElectBlockMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.ElectBlockMessage)
  return false;
#undef DO_
}

void ElectBlockMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.ElectBlockMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.block.protobuf.Block block = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_block(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.ElectBlockMessage)
}

::google::protobuf::uint8* ElectBlockMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.ElectBlockMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.block.protobuf.Block block = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_block(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.ElectBlockMessage)
  return target;
}

size_t ElectBlockMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.ElectBlockMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .shardora.block.protobuf.Block block = 1;
  if (has_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *block_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElectBlockMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.ElectBlockMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ElectBlockMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElectBlockMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.ElectBlockMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.ElectBlockMessage)
    MergeFrom(*source);
  }
}

void ElectBlockMessage::MergeFrom(const ElectBlockMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.ElectBlockMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_block()) {
    mutable_block()->::shardora::block::protobuf::Block::MergeFrom(from.block());
  }
}

void ElectBlockMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.ElectBlockMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElectBlockMessage::CopyFrom(const ElectBlockMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.ElectBlockMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElectBlockMessage::IsInitialized() const {
  return true;
}

void ElectBlockMessage::Swap(ElectBlockMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElectBlockMessage::InternalSwap(ElectBlockMessage* other) {
  using std::swap;
  swap(block_, other->block_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElectBlockMessage::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShardToTxMessage::InitAsDefaultInstance() {
}
void ShardToTxMessage::clear_to_txs() {
  to_txs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShardToTxMessage::kToTxsFieldNumber;
const int ShardToTxMessage::kLeaderIdxFieldNumber;
const int ShardToTxMessage::kElectHeightFieldNumber;
const int ShardToTxMessage::kLeaderToIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShardToTxMessage::ShardToTxMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_ShardToTxMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.ShardToTxMessage)
}
ShardToTxMessage::ShardToTxMessage(const ShardToTxMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      to_txs_(from.to_txs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&elect_height_, &from.elect_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&leader_to_idx_) -
    reinterpret_cast<char*>(&elect_height_)) + sizeof(leader_to_idx_));
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.ShardToTxMessage)
}

void ShardToTxMessage::SharedCtor() {
  ::memset(&elect_height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leader_to_idx_) -
      reinterpret_cast<char*>(&elect_height_)) + sizeof(leader_to_idx_));
}

ShardToTxMessage::~ShardToTxMessage() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.ShardToTxMessage)
  SharedDtor();
}

void ShardToTxMessage::SharedDtor() {
}

void ShardToTxMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShardToTxMessage::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShardToTxMessage& ShardToTxMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_ShardToTxMessage.base);
  return *internal_default_instance();
}


void ShardToTxMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.ShardToTxMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  to_txs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&elect_height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&leader_to_idx_) -
        reinterpret_cast<char*>(&elect_height_)) + sizeof(leader_to_idx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShardToTxMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.ShardToTxMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shardora.pools.protobuf.ShardToTxItem to_txs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_to_txs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 leader_idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_leader_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leader_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 elect_height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_elect_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elect_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leader_to_idx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_leader_to_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_to_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.ShardToTxMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.ShardToTxMessage)
  return false;
#undef DO_
}

void ShardToTxMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.ShardToTxMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.pools.protobuf.ShardToTxItem to_txs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->to_txs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->to_txs(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 leader_idx = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->leader_idx(), output);
  }

  // optional uint64 elect_height = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->elect_height(), output);
  }

  // optional int32 leader_to_idx = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->leader_to_idx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.ShardToTxMessage)
}

::google::protobuf::uint8* ShardToTxMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.ShardToTxMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.pools.protobuf.ShardToTxItem to_txs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->to_txs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->to_txs(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 leader_idx = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->leader_idx(), target);
  }

  // optional uint64 elect_height = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->elect_height(), target);
  }

  // optional int32 leader_to_idx = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->leader_to_idx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.ShardToTxMessage)
  return target;
}

size_t ShardToTxMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.ShardToTxMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.pools.protobuf.ShardToTxItem to_txs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->to_txs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->to_txs(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 elect_height = 3;
    if (has_elect_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->elect_height());
    }

    // optional uint32 leader_idx = 2;
    if (has_leader_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->leader_idx());
    }

    // optional int32 leader_to_idx = 4;
    if (has_leader_to_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leader_to_idx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShardToTxMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.ShardToTxMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ShardToTxMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShardToTxMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.ShardToTxMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.ShardToTxMessage)
    MergeFrom(*source);
  }
}

void ShardToTxMessage::MergeFrom(const ShardToTxMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.ShardToTxMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  to_txs_.MergeFrom(from.to_txs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      elect_height_ = from.elect_height_;
    }
    if (cached_has_bits & 0x00000002u) {
      leader_idx_ = from.leader_idx_;
    }
    if (cached_has_bits & 0x00000004u) {
      leader_to_idx_ = from.leader_to_idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShardToTxMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.ShardToTxMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShardToTxMessage::CopyFrom(const ShardToTxMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.ShardToTxMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShardToTxMessage::IsInitialized() const {
  return true;
}

void ShardToTxMessage::Swap(ShardToTxMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShardToTxMessage::InternalSwap(ShardToTxMessage* other) {
  using std::swap;
  CastToBase(&to_txs_)->InternalSwap(CastToBase(&other->to_txs_));
  swap(elect_height_, other->elect_height_);
  swap(leader_idx_, other->leader_idx_);
  swap(leader_to_idx_, other->leader_to_idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShardToTxMessage::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StatisticTxMessage::InitAsDefaultInstance() {
  ::shardora::block::protobuf::_StatisticTxMessage_default_instance_._instance.get_mutable()->statistic_ = const_cast< ::shardora::pools::protobuf::StatisticTxItem*>(
      ::shardora::pools::protobuf::StatisticTxItem::internal_default_instance());
}
void StatisticTxMessage::clear_statistic() {
  if (statistic_ != NULL) statistic_->Clear();
  clear_has_statistic();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatisticTxMessage::kStatisticFieldNumber;
const int StatisticTxMessage::kLeaderIdxFieldNumber;
const int StatisticTxMessage::kElectHeightFieldNumber;
const int StatisticTxMessage::kLeaderToIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatisticTxMessage::StatisticTxMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_StatisticTxMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.StatisticTxMessage)
}
StatisticTxMessage::StatisticTxMessage(const StatisticTxMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statistic()) {
    statistic_ = new ::shardora::pools::protobuf::StatisticTxItem(*from.statistic_);
  } else {
    statistic_ = NULL;
  }
  ::memcpy(&elect_height_, &from.elect_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&leader_to_idx_) -
    reinterpret_cast<char*>(&elect_height_)) + sizeof(leader_to_idx_));
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.StatisticTxMessage)
}

void StatisticTxMessage::SharedCtor() {
  ::memset(&statistic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leader_to_idx_) -
      reinterpret_cast<char*>(&statistic_)) + sizeof(leader_to_idx_));
}

StatisticTxMessage::~StatisticTxMessage() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.StatisticTxMessage)
  SharedDtor();
}

void StatisticTxMessage::SharedDtor() {
  if (this != internal_default_instance()) delete statistic_;
}

void StatisticTxMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StatisticTxMessage::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatisticTxMessage& StatisticTxMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_StatisticTxMessage.base);
  return *internal_default_instance();
}


void StatisticTxMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.StatisticTxMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(statistic_ != NULL);
    statistic_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&elect_height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&leader_to_idx_) -
        reinterpret_cast<char*>(&elect_height_)) + sizeof(leader_to_idx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StatisticTxMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.StatisticTxMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .shardora.pools.protobuf.StatisticTxItem statistic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statistic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 leader_idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_leader_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leader_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 elect_height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_elect_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elect_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leader_to_idx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_leader_to_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_to_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.StatisticTxMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.StatisticTxMessage)
  return false;
#undef DO_
}

void StatisticTxMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.StatisticTxMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.pools.protobuf.StatisticTxItem statistic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_statistic(), output);
  }

  // optional uint32 leader_idx = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->leader_idx(), output);
  }

  // optional uint64 elect_height = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->elect_height(), output);
  }

  // optional int32 leader_to_idx = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->leader_to_idx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.StatisticTxMessage)
}

::google::protobuf::uint8* StatisticTxMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.StatisticTxMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.pools.protobuf.StatisticTxItem statistic = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_statistic(), deterministic, target);
  }

  // optional uint32 leader_idx = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->leader_idx(), target);
  }

  // optional uint64 elect_height = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->elect_height(), target);
  }

  // optional int32 leader_to_idx = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->leader_to_idx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.StatisticTxMessage)
  return target;
}

size_t StatisticTxMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.StatisticTxMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .shardora.pools.protobuf.StatisticTxItem statistic = 1;
    if (has_statistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *statistic_);
    }

    // optional uint64 elect_height = 3;
    if (has_elect_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->elect_height());
    }

    // optional uint32 leader_idx = 2;
    if (has_leader_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->leader_idx());
    }

    // optional int32 leader_to_idx = 4;
    if (has_leader_to_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leader_to_idx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatisticTxMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.StatisticTxMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StatisticTxMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatisticTxMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.StatisticTxMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.StatisticTxMessage)
    MergeFrom(*source);
  }
}

void StatisticTxMessage::MergeFrom(const StatisticTxMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.StatisticTxMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_statistic()->::shardora::pools::protobuf::StatisticTxItem::MergeFrom(from.statistic());
    }
    if (cached_has_bits & 0x00000002u) {
      elect_height_ = from.elect_height_;
    }
    if (cached_has_bits & 0x00000004u) {
      leader_idx_ = from.leader_idx_;
    }
    if (cached_has_bits & 0x00000008u) {
      leader_to_idx_ = from.leader_to_idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StatisticTxMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.StatisticTxMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatisticTxMessage::CopyFrom(const StatisticTxMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.StatisticTxMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticTxMessage::IsInitialized() const {
  return true;
}

void StatisticTxMessage::Swap(StatisticTxMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatisticTxMessage::InternalSwap(StatisticTxMessage* other) {
  using std::swap;
  swap(statistic_, other->statistic_);
  swap(elect_height_, other->elect_height_);
  swap(leader_idx_, other->leader_idx_);
  swap(leader_to_idx_, other->leader_to_idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StatisticTxMessage::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlockMessage::InitAsDefaultInstance() {
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->block_req_ = const_cast< ::shardora::block::protobuf::GetTxBlockRequest*>(
      ::shardora::block::protobuf::GetTxBlockRequest::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->block_res_ = const_cast< ::shardora::block::protobuf::GetTxBlockResponse*>(
      ::shardora::block::protobuf::GetTxBlockResponse::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->height_req_ = const_cast< ::shardora::block::protobuf::AccountHeightRequest*>(
      ::shardora::block::protobuf::AccountHeightRequest::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->height_res_ = const_cast< ::shardora::block::protobuf::AccountHeightResponse*>(
      ::shardora::block::protobuf::AccountHeightResponse::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->acc_attr_req_ = const_cast< ::shardora::block::protobuf::AccountAttrRequest*>(
      ::shardora::block::protobuf::AccountAttrRequest::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->acc_attr_res_ = const_cast< ::shardora::block::protobuf::AccountAttrResponse*>(
      ::shardora::block::protobuf::AccountAttrResponse::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->up_vpn_req_ = const_cast< ::shardora::block::protobuf::UpdateVpnCountRequest*>(
      ::shardora::block::protobuf::UpdateVpnCountRequest::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->up_vpn_res_ = const_cast< ::shardora::block::protobuf::UpdateVpnCountResponse*>(
      ::shardora::block::protobuf::UpdateVpnCountResponse::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->account_init_req_ = const_cast< ::shardora::block::protobuf::GetAccountInitInfoRequest*>(
      ::shardora::block::protobuf::GetAccountInitInfoRequest::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->account_init_res_ = const_cast< ::shardora::block::protobuf::GetAccountInitInfoResponse*>(
      ::shardora::block::protobuf::GetAccountInitInfoResponse::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->vpn_active_req_ = const_cast< ::shardora::block::protobuf::UpdateVpnActiveRequest*>(
      ::shardora::block::protobuf::UpdateVpnActiveRequest::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->ad_reward_req_ = const_cast< ::shardora::block::protobuf::AdRewardRequest*>(
      ::shardora::block::protobuf::AdRewardRequest::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->ref_heights_req_ = const_cast< ::shardora::block::protobuf::RefreshPoolHeightRequest*>(
      ::shardora::block::protobuf::RefreshPoolHeightRequest::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->ref_heights_res_ = const_cast< ::shardora::block::protobuf::RefreshPoolHeightResponse*>(
      ::shardora::block::protobuf::RefreshPoolHeightResponse::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->acc_shard_req_ = const_cast< ::shardora::block::protobuf::GetAccountShardRequest*>(
      ::shardora::block::protobuf::GetAccountShardRequest::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->acc_shard_res_ = const_cast< ::shardora::block::protobuf::GetAccountShardReponse*>(
      ::shardora::block::protobuf::GetAccountShardReponse::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->shard_to_ = const_cast< ::shardora::block::protobuf::ShardToTxMessage*>(
      ::shardora::block::protobuf::ShardToTxMessage::internal_default_instance());
  ::shardora::block::protobuf::_BlockMessage_default_instance_._instance.get_mutable()->statistic_tx_ = const_cast< ::shardora::block::protobuf::StatisticTxMessage*>(
      ::shardora::block::protobuf::StatisticTxMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockMessage::kBlockReqFieldNumber;
const int BlockMessage::kBlockResFieldNumber;
const int BlockMessage::kHeightReqFieldNumber;
const int BlockMessage::kHeightResFieldNumber;
const int BlockMessage::kAccAttrReqFieldNumber;
const int BlockMessage::kAccAttrResFieldNumber;
const int BlockMessage::kUpVpnReqFieldNumber;
const int BlockMessage::kUpVpnResFieldNumber;
const int BlockMessage::kAccountInitReqFieldNumber;
const int BlockMessage::kAccountInitResFieldNumber;
const int BlockMessage::kVpnActiveReqFieldNumber;
const int BlockMessage::kAdRewardReqFieldNumber;
const int BlockMessage::kRefHeightsReqFieldNumber;
const int BlockMessage::kRefHeightsResFieldNumber;
const int BlockMessage::kAccShardReqFieldNumber;
const int BlockMessage::kAccShardResFieldNumber;
const int BlockMessage::kShardToFieldNumber;
const int BlockMessage::kStatisticTxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockMessage::BlockMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fblock_2eproto::scc_info_BlockMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.block.protobuf.BlockMessage)
}
BlockMessage::BlockMessage(const BlockMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_block_req()) {
    block_req_ = new ::shardora::block::protobuf::GetTxBlockRequest(*from.block_req_);
  } else {
    block_req_ = NULL;
  }
  if (from.has_block_res()) {
    block_res_ = new ::shardora::block::protobuf::GetTxBlockResponse(*from.block_res_);
  } else {
    block_res_ = NULL;
  }
  if (from.has_height_req()) {
    height_req_ = new ::shardora::block::protobuf::AccountHeightRequest(*from.height_req_);
  } else {
    height_req_ = NULL;
  }
  if (from.has_height_res()) {
    height_res_ = new ::shardora::block::protobuf::AccountHeightResponse(*from.height_res_);
  } else {
    height_res_ = NULL;
  }
  if (from.has_acc_attr_req()) {
    acc_attr_req_ = new ::shardora::block::protobuf::AccountAttrRequest(*from.acc_attr_req_);
  } else {
    acc_attr_req_ = NULL;
  }
  if (from.has_acc_attr_res()) {
    acc_attr_res_ = new ::shardora::block::protobuf::AccountAttrResponse(*from.acc_attr_res_);
  } else {
    acc_attr_res_ = NULL;
  }
  if (from.has_up_vpn_req()) {
    up_vpn_req_ = new ::shardora::block::protobuf::UpdateVpnCountRequest(*from.up_vpn_req_);
  } else {
    up_vpn_req_ = NULL;
  }
  if (from.has_up_vpn_res()) {
    up_vpn_res_ = new ::shardora::block::protobuf::UpdateVpnCountResponse(*from.up_vpn_res_);
  } else {
    up_vpn_res_ = NULL;
  }
  if (from.has_account_init_req()) {
    account_init_req_ = new ::shardora::block::protobuf::GetAccountInitInfoRequest(*from.account_init_req_);
  } else {
    account_init_req_ = NULL;
  }
  if (from.has_account_init_res()) {
    account_init_res_ = new ::shardora::block::protobuf::GetAccountInitInfoResponse(*from.account_init_res_);
  } else {
    account_init_res_ = NULL;
  }
  if (from.has_vpn_active_req()) {
    vpn_active_req_ = new ::shardora::block::protobuf::UpdateVpnActiveRequest(*from.vpn_active_req_);
  } else {
    vpn_active_req_ = NULL;
  }
  if (from.has_ad_reward_req()) {
    ad_reward_req_ = new ::shardora::block::protobuf::AdRewardRequest(*from.ad_reward_req_);
  } else {
    ad_reward_req_ = NULL;
  }
  if (from.has_ref_heights_req()) {
    ref_heights_req_ = new ::shardora::block::protobuf::RefreshPoolHeightRequest(*from.ref_heights_req_);
  } else {
    ref_heights_req_ = NULL;
  }
  if (from.has_ref_heights_res()) {
    ref_heights_res_ = new ::shardora::block::protobuf::RefreshPoolHeightResponse(*from.ref_heights_res_);
  } else {
    ref_heights_res_ = NULL;
  }
  if (from.has_acc_shard_req()) {
    acc_shard_req_ = new ::shardora::block::protobuf::GetAccountShardRequest(*from.acc_shard_req_);
  } else {
    acc_shard_req_ = NULL;
  }
  if (from.has_acc_shard_res()) {
    acc_shard_res_ = new ::shardora::block::protobuf::GetAccountShardReponse(*from.acc_shard_res_);
  } else {
    acc_shard_res_ = NULL;
  }
  if (from.has_shard_to()) {
    shard_to_ = new ::shardora::block::protobuf::ShardToTxMessage(*from.shard_to_);
  } else {
    shard_to_ = NULL;
  }
  if (from.has_statistic_tx()) {
    statistic_tx_ = new ::shardora::block::protobuf::StatisticTxMessage(*from.statistic_tx_);
  } else {
    statistic_tx_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:shardora.block.protobuf.BlockMessage)
}

void BlockMessage::SharedCtor() {
  ::memset(&block_req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&statistic_tx_) -
      reinterpret_cast<char*>(&block_req_)) + sizeof(statistic_tx_));
}

BlockMessage::~BlockMessage() {
  // @@protoc_insertion_point(destructor:shardora.block.protobuf.BlockMessage)
  SharedDtor();
}

void BlockMessage::SharedDtor() {
  if (this != internal_default_instance()) delete block_req_;
  if (this != internal_default_instance()) delete block_res_;
  if (this != internal_default_instance()) delete height_req_;
  if (this != internal_default_instance()) delete height_res_;
  if (this != internal_default_instance()) delete acc_attr_req_;
  if (this != internal_default_instance()) delete acc_attr_res_;
  if (this != internal_default_instance()) delete up_vpn_req_;
  if (this != internal_default_instance()) delete up_vpn_res_;
  if (this != internal_default_instance()) delete account_init_req_;
  if (this != internal_default_instance()) delete account_init_res_;
  if (this != internal_default_instance()) delete vpn_active_req_;
  if (this != internal_default_instance()) delete ad_reward_req_;
  if (this != internal_default_instance()) delete ref_heights_req_;
  if (this != internal_default_instance()) delete ref_heights_res_;
  if (this != internal_default_instance()) delete acc_shard_req_;
  if (this != internal_default_instance()) delete acc_shard_res_;
  if (this != internal_default_instance()) delete shard_to_;
  if (this != internal_default_instance()) delete statistic_tx_;
}

void BlockMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BlockMessage::descriptor() {
  ::protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockMessage& BlockMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fblock_2eproto::scc_info_BlockMessage.base);
  return *internal_default_instance();
}


void BlockMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.block.protobuf.BlockMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(block_req_ != NULL);
      block_req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(block_res_ != NULL);
      block_res_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(height_req_ != NULL);
      height_req_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(height_res_ != NULL);
      height_res_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(acc_attr_req_ != NULL);
      acc_attr_req_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(acc_attr_res_ != NULL);
      acc_attr_res_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(up_vpn_req_ != NULL);
      up_vpn_req_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(up_vpn_res_ != NULL);
      up_vpn_res_->Clear();
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(account_init_req_ != NULL);
      account_init_req_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(account_init_res_ != NULL);
      account_init_res_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(vpn_active_req_ != NULL);
      vpn_active_req_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(ad_reward_req_ != NULL);
      ad_reward_req_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(ref_heights_req_ != NULL);
      ref_heights_req_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(ref_heights_res_ != NULL);
      ref_heights_res_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(acc_shard_req_ != NULL);
      acc_shard_req_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(acc_shard_res_ != NULL);
      acc_shard_res_->Clear();
    }
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(shard_to_ != NULL);
      shard_to_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(statistic_tx_ != NULL);
      statistic_tx_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BlockMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.block.protobuf.BlockMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .shardora.block.protobuf.GetTxBlockRequest block_req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_block_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.GetTxBlockResponse block_res = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_block_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.AccountHeightRequest height_req = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_height_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.AccountHeightResponse height_res = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_height_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.AccountAttrRequest acc_attr_req = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acc_attr_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.AccountAttrResponse acc_attr_res = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acc_attr_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.UpdateVpnCountRequest up_vpn_req = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_up_vpn_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.UpdateVpnCountResponse up_vpn_res = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_up_vpn_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.GetAccountInitInfoRequest account_init_req = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_account_init_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.GetAccountInitInfoResponse account_init_res = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_account_init_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.UpdateVpnActiveRequest vpn_active_req = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vpn_active_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.AdRewardRequest ad_reward_req = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ad_reward_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.RefreshPoolHeightRequest ref_heights_req = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ref_heights_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.RefreshPoolHeightResponse ref_heights_res = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ref_heights_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.GetAccountShardRequest acc_shard_req = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acc_shard_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.GetAccountShardReponse acc_shard_res = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acc_shard_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.ShardToTxMessage shard_to = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shard_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.StatisticTxMessage statistic_tx = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statistic_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.block.protobuf.BlockMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.block.protobuf.BlockMessage)
  return false;
#undef DO_
}

void BlockMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.block.protobuf.BlockMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.block.protobuf.GetTxBlockRequest block_req = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_block_req(), output);
  }

  // optional .shardora.block.protobuf.GetTxBlockResponse block_res = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_block_res(), output);
  }

  // optional .shardora.block.protobuf.AccountHeightRequest height_req = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_height_req(), output);
  }

  // optional .shardora.block.protobuf.AccountHeightResponse height_res = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_height_res(), output);
  }

  // optional .shardora.block.protobuf.AccountAttrRequest acc_attr_req = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_acc_attr_req(), output);
  }

  // optional .shardora.block.protobuf.AccountAttrResponse acc_attr_res = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_acc_attr_res(), output);
  }

  // optional .shardora.block.protobuf.UpdateVpnCountRequest up_vpn_req = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_up_vpn_req(), output);
  }

  // optional .shardora.block.protobuf.UpdateVpnCountResponse up_vpn_res = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_up_vpn_res(), output);
  }

  // optional .shardora.block.protobuf.GetAccountInitInfoRequest account_init_req = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_account_init_req(), output);
  }

  // optional .shardora.block.protobuf.GetAccountInitInfoResponse account_init_res = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_account_init_res(), output);
  }

  // optional .shardora.block.protobuf.UpdateVpnActiveRequest vpn_active_req = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_vpn_active_req(), output);
  }

  // optional .shardora.block.protobuf.AdRewardRequest ad_reward_req = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_ad_reward_req(), output);
  }

  // optional .shardora.block.protobuf.RefreshPoolHeightRequest ref_heights_req = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_ref_heights_req(), output);
  }

  // optional .shardora.block.protobuf.RefreshPoolHeightResponse ref_heights_res = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_ref_heights_res(), output);
  }

  // optional .shardora.block.protobuf.GetAccountShardRequest acc_shard_req = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_acc_shard_req(), output);
  }

  // optional .shardora.block.protobuf.GetAccountShardReponse acc_shard_res = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_acc_shard_res(), output);
  }

  // optional .shardora.block.protobuf.ShardToTxMessage shard_to = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_shard_to(), output);
  }

  // optional .shardora.block.protobuf.StatisticTxMessage statistic_tx = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_statistic_tx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.block.protobuf.BlockMessage)
}

::google::protobuf::uint8* BlockMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.block.protobuf.BlockMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.block.protobuf.GetTxBlockRequest block_req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_block_req(), deterministic, target);
  }

  // optional .shardora.block.protobuf.GetTxBlockResponse block_res = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_block_res(), deterministic, target);
  }

  // optional .shardora.block.protobuf.AccountHeightRequest height_req = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_height_req(), deterministic, target);
  }

  // optional .shardora.block.protobuf.AccountHeightResponse height_res = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_height_res(), deterministic, target);
  }

  // optional .shardora.block.protobuf.AccountAttrRequest acc_attr_req = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_acc_attr_req(), deterministic, target);
  }

  // optional .shardora.block.protobuf.AccountAttrResponse acc_attr_res = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_acc_attr_res(), deterministic, target);
  }

  // optional .shardora.block.protobuf.UpdateVpnCountRequest up_vpn_req = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_up_vpn_req(), deterministic, target);
  }

  // optional .shardora.block.protobuf.UpdateVpnCountResponse up_vpn_res = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_up_vpn_res(), deterministic, target);
  }

  // optional .shardora.block.protobuf.GetAccountInitInfoRequest account_init_req = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_account_init_req(), deterministic, target);
  }

  // optional .shardora.block.protobuf.GetAccountInitInfoResponse account_init_res = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_account_init_res(), deterministic, target);
  }

  // optional .shardora.block.protobuf.UpdateVpnActiveRequest vpn_active_req = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_vpn_active_req(), deterministic, target);
  }

  // optional .shardora.block.protobuf.AdRewardRequest ad_reward_req = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_ad_reward_req(), deterministic, target);
  }

  // optional .shardora.block.protobuf.RefreshPoolHeightRequest ref_heights_req = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_ref_heights_req(), deterministic, target);
  }

  // optional .shardora.block.protobuf.RefreshPoolHeightResponse ref_heights_res = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_ref_heights_res(), deterministic, target);
  }

  // optional .shardora.block.protobuf.GetAccountShardRequest acc_shard_req = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_acc_shard_req(), deterministic, target);
  }

  // optional .shardora.block.protobuf.GetAccountShardReponse acc_shard_res = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_acc_shard_res(), deterministic, target);
  }

  // optional .shardora.block.protobuf.ShardToTxMessage shard_to = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_shard_to(), deterministic, target);
  }

  // optional .shardora.block.protobuf.StatisticTxMessage statistic_tx = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_statistic_tx(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.block.protobuf.BlockMessage)
  return target;
}

size_t BlockMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.block.protobuf.BlockMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .shardora.block.protobuf.GetTxBlockRequest block_req = 1;
    if (has_block_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *block_req_);
    }

    // optional .shardora.block.protobuf.GetTxBlockResponse block_res = 2;
    if (has_block_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *block_res_);
    }

    // optional .shardora.block.protobuf.AccountHeightRequest height_req = 3;
    if (has_height_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *height_req_);
    }

    // optional .shardora.block.protobuf.AccountHeightResponse height_res = 4;
    if (has_height_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *height_res_);
    }

    // optional .shardora.block.protobuf.AccountAttrRequest acc_attr_req = 5;
    if (has_acc_attr_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *acc_attr_req_);
    }

    // optional .shardora.block.protobuf.AccountAttrResponse acc_attr_res = 6;
    if (has_acc_attr_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *acc_attr_res_);
    }

    // optional .shardora.block.protobuf.UpdateVpnCountRequest up_vpn_req = 7;
    if (has_up_vpn_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *up_vpn_req_);
    }

    // optional .shardora.block.protobuf.UpdateVpnCountResponse up_vpn_res = 8;
    if (has_up_vpn_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *up_vpn_res_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .shardora.block.protobuf.GetAccountInitInfoRequest account_init_req = 9;
    if (has_account_init_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *account_init_req_);
    }

    // optional .shardora.block.protobuf.GetAccountInitInfoResponse account_init_res = 10;
    if (has_account_init_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *account_init_res_);
    }

    // optional .shardora.block.protobuf.UpdateVpnActiveRequest vpn_active_req = 11;
    if (has_vpn_active_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *vpn_active_req_);
    }

    // optional .shardora.block.protobuf.AdRewardRequest ad_reward_req = 12;
    if (has_ad_reward_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ad_reward_req_);
    }

    // optional .shardora.block.protobuf.RefreshPoolHeightRequest ref_heights_req = 13;
    if (has_ref_heights_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ref_heights_req_);
    }

    // optional .shardora.block.protobuf.RefreshPoolHeightResponse ref_heights_res = 14;
    if (has_ref_heights_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ref_heights_res_);
    }

    // optional .shardora.block.protobuf.GetAccountShardRequest acc_shard_req = 15;
    if (has_acc_shard_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *acc_shard_req_);
    }

    // optional .shardora.block.protobuf.GetAccountShardReponse acc_shard_res = 16;
    if (has_acc_shard_res()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *acc_shard_res_);
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional .shardora.block.protobuf.ShardToTxMessage shard_to = 17;
    if (has_shard_to()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *shard_to_);
    }

    // optional .shardora.block.protobuf.StatisticTxMessage statistic_tx = 18;
    if (has_statistic_tx()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *statistic_tx_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.block.protobuf.BlockMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.block.protobuf.BlockMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.block.protobuf.BlockMessage)
    MergeFrom(*source);
  }
}

void BlockMessage::MergeFrom(const BlockMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.block.protobuf.BlockMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_block_req()->::shardora::block::protobuf::GetTxBlockRequest::MergeFrom(from.block_req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_block_res()->::shardora::block::protobuf::GetTxBlockResponse::MergeFrom(from.block_res());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_height_req()->::shardora::block::protobuf::AccountHeightRequest::MergeFrom(from.height_req());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_height_res()->::shardora::block::protobuf::AccountHeightResponse::MergeFrom(from.height_res());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_acc_attr_req()->::shardora::block::protobuf::AccountAttrRequest::MergeFrom(from.acc_attr_req());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_acc_attr_res()->::shardora::block::protobuf::AccountAttrResponse::MergeFrom(from.acc_attr_res());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_up_vpn_req()->::shardora::block::protobuf::UpdateVpnCountRequest::MergeFrom(from.up_vpn_req());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_up_vpn_res()->::shardora::block::protobuf::UpdateVpnCountResponse::MergeFrom(from.up_vpn_res());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_account_init_req()->::shardora::block::protobuf::GetAccountInitInfoRequest::MergeFrom(from.account_init_req());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_account_init_res()->::shardora::block::protobuf::GetAccountInitInfoResponse::MergeFrom(from.account_init_res());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_vpn_active_req()->::shardora::block::protobuf::UpdateVpnActiveRequest::MergeFrom(from.vpn_active_req());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_ad_reward_req()->::shardora::block::protobuf::AdRewardRequest::MergeFrom(from.ad_reward_req());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_ref_heights_req()->::shardora::block::protobuf::RefreshPoolHeightRequest::MergeFrom(from.ref_heights_req());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_ref_heights_res()->::shardora::block::protobuf::RefreshPoolHeightResponse::MergeFrom(from.ref_heights_res());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_acc_shard_req()->::shardora::block::protobuf::GetAccountShardRequest::MergeFrom(from.acc_shard_req());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_acc_shard_res()->::shardora::block::protobuf::GetAccountShardReponse::MergeFrom(from.acc_shard_res());
    }
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_shard_to()->::shardora::block::protobuf::ShardToTxMessage::MergeFrom(from.shard_to());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_statistic_tx()->::shardora::block::protobuf::StatisticTxMessage::MergeFrom(from.statistic_tx());
    }
  }
}

void BlockMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.block.protobuf.BlockMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockMessage::CopyFrom(const BlockMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.block.protobuf.BlockMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockMessage::IsInitialized() const {
  return true;
}

void BlockMessage::Swap(BlockMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockMessage::InternalSwap(BlockMessage* other) {
  using std::swap;
  swap(block_req_, other->block_req_);
  swap(block_res_, other->block_res_);
  swap(height_req_, other->height_req_);
  swap(height_res_, other->height_res_);
  swap(acc_attr_req_, other->acc_attr_req_);
  swap(acc_attr_res_, other->acc_attr_res_);
  swap(up_vpn_req_, other->up_vpn_req_);
  swap(up_vpn_res_, other->up_vpn_res_);
  swap(account_init_req_, other->account_init_req_);
  swap(account_init_res_, other->account_init_res_);
  swap(vpn_active_req_, other->vpn_active_req_);
  swap(ad_reward_req_, other->ad_reward_req_);
  swap(ref_heights_req_, other->ref_heights_req_);
  swap(ref_heights_res_, other->ref_heights_res_);
  swap(acc_shard_req_, other->acc_shard_req_);
  swap(acc_shard_res_, other->acc_shard_res_);
  swap(shard_to_, other->shard_to_);
  swap(statistic_tx_, other->statistic_tx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BlockMessage::GetMetadata() const {
  protobuf_protos_2fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace block
}  // namespace shardora
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::StorageItem* Arena::CreateMaybeMessage< ::shardora::block::protobuf::StorageItem >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::StorageItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::TransferItem* Arena::CreateMaybeMessage< ::shardora::block::protobuf::TransferItem >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::TransferItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::TxLog* Arena::CreateMaybeMessage< ::shardora::block::protobuf::TxLog >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::TxLog >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::BlockTx* Arena::CreateMaybeMessage< ::shardora::block::protobuf::BlockTx >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::BlockTx >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::Block* Arena::CreateMaybeMessage< ::shardora::block::protobuf::Block >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::Block >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::ConsensusToTxsItem* Arena::CreateMaybeMessage< ::shardora::block::protobuf::ConsensusToTxsItem >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::ConsensusToTxsItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::ConsensusToTxs* Arena::CreateMaybeMessage< ::shardora::block::protobuf::ConsensusToTxs >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::ConsensusToTxs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::GetTxBlockRequest* Arena::CreateMaybeMessage< ::shardora::block::protobuf::GetTxBlockRequest >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::GetTxBlockRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::GetTxBlockResponse* Arena::CreateMaybeMessage< ::shardora::block::protobuf::GetTxBlockResponse >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::GetTxBlockResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::AccountHeightRequest* Arena::CreateMaybeMessage< ::shardora::block::protobuf::AccountHeightRequest >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::AccountHeightRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::AccountHeightResponse* Arena::CreateMaybeMessage< ::shardora::block::protobuf::AccountHeightResponse >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::AccountHeightResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::AccountAttrRequest* Arena::CreateMaybeMessage< ::shardora::block::protobuf::AccountAttrRequest >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::AccountAttrRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::AccountAttrResponse* Arena::CreateMaybeMessage< ::shardora::block::protobuf::AccountAttrResponse >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::AccountAttrResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::UpdateVpnCountRequest* Arena::CreateMaybeMessage< ::shardora::block::protobuf::UpdateVpnCountRequest >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::UpdateVpnCountRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::VpnCountItem* Arena::CreateMaybeMessage< ::shardora::block::protobuf::VpnCountItem >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::VpnCountItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::UpdateVpnCountResponse* Arena::CreateMaybeMessage< ::shardora::block::protobuf::UpdateVpnCountResponse >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::UpdateVpnCountResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::GetAccountInitInfoRequest* Arena::CreateMaybeMessage< ::shardora::block::protobuf::GetAccountInitInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::GetAccountInitInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::GetAccountInitInfoResponse* Arena::CreateMaybeMessage< ::shardora::block::protobuf::GetAccountInitInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::GetAccountInitInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::UpdateVpnActiveRequest* Arena::CreateMaybeMessage< ::shardora::block::protobuf::UpdateVpnActiveRequest >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::UpdateVpnActiveRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::AdRewardRequest* Arena::CreateMaybeMessage< ::shardora::block::protobuf::AdRewardRequest >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::AdRewardRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::ElectStatisticInfo* Arena::CreateMaybeMessage< ::shardora::block::protobuf::ElectStatisticInfo >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::ElectStatisticInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::StatisticInfo* Arena::CreateMaybeMessage< ::shardora::block::protobuf::StatisticInfo >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::StatisticInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::RefreshPoolHeightRequest* Arena::CreateMaybeMessage< ::shardora::block::protobuf::RefreshPoolHeightRequest >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::RefreshPoolHeightRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::RefreshPoolHeightResponse* Arena::CreateMaybeMessage< ::shardora::block::protobuf::RefreshPoolHeightResponse >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::RefreshPoolHeightResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::GetAccountShardRequest* Arena::CreateMaybeMessage< ::shardora::block::protobuf::GetAccountShardRequest >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::GetAccountShardRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::GetAccountShardReponse* Arena::CreateMaybeMessage< ::shardora::block::protobuf::GetAccountShardReponse >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::GetAccountShardReponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::CrossShardingTosMessage* Arena::CreateMaybeMessage< ::shardora::block::protobuf::CrossShardingTosMessage >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::CrossShardingTosMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::CrossShardingStatisticMessage* Arena::CreateMaybeMessage< ::shardora::block::protobuf::CrossShardingStatisticMessage >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::CrossShardingStatisticMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::ElectBlockMessage* Arena::CreateMaybeMessage< ::shardora::block::protobuf::ElectBlockMessage >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::ElectBlockMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::ShardToTxMessage* Arena::CreateMaybeMessage< ::shardora::block::protobuf::ShardToTxMessage >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::ShardToTxMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::StatisticTxMessage* Arena::CreateMaybeMessage< ::shardora::block::protobuf::StatisticTxMessage >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::StatisticTxMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::block::protobuf::BlockMessage* Arena::CreateMaybeMessage< ::shardora::block::protobuf::BlockMessage >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::block::protobuf::BlockMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
