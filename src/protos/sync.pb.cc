// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/sync.proto

#include "protos/sync.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace zjchain {
namespace sync {
namespace protobuf {
PROTOBUF_CONSTEXPR SyncItem::SyncItem(
    ::_pbi::ConstantInitialized)
  : key_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , value_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct SyncItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncItemDefaultTypeInternal() {}
  union {
    SyncItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncItemDefaultTypeInternal _SyncItem_default_instance_;
PROTOBUF_CONSTEXPR SyncInfo::SyncInfo(
    ::_pbi::ConstantInitialized)
  : items_(){}
struct SyncInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncInfoDefaultTypeInternal() {}
  union {
    SyncInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncInfoDefaultTypeInternal _SyncInfo_default_instance_;
PROTOBUF_CONSTEXPR SyncHeightItem::SyncHeightItem(
    ::_pbi::ConstantInitialized)
  : height_(uint64_t{0u})
  , pool_idx_(0u)
  , tag_(0u){}
struct SyncHeightItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncHeightItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncHeightItemDefaultTypeInternal() {}
  union {
    SyncHeightItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncHeightItemDefaultTypeInternal _SyncHeightItem_default_instance_;
PROTOBUF_CONSTEXPR FlushDbItem::FlushDbItem(
    ::_pbi::ConstantInitialized)
  : heights_()
  , max_vec_index_(uint64_t{0u})
  , max_height_(uint64_t{0u}){}
struct FlushDbItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FlushDbItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FlushDbItemDefaultTypeInternal() {}
  union {
    FlushDbItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FlushDbItemDefaultTypeInternal _FlushDbItem_default_instance_;
PROTOBUF_CONSTEXPR SyncValueRequest::SyncValueRequest(
    ::_pbi::ConstantInitialized)
  : keys_()
  , heights_()
  , network_id_(0u){}
struct SyncValueRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncValueRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncValueRequestDefaultTypeInternal() {}
  union {
    SyncValueRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncValueRequestDefaultTypeInternal _SyncValueRequest_default_instance_;
PROTOBUF_CONSTEXPR SyncResItem::SyncResItem(
    ::_pbi::ConstantInitialized)
  : key_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , value_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , network_id_(0u)
  , pool_idx_(0u)
  , height_(uint64_t{0u}){}
struct SyncResItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncResItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncResItemDefaultTypeInternal() {}
  union {
    SyncResItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncResItemDefaultTypeInternal _SyncResItem_default_instance_;
PROTOBUF_CONSTEXPR SyncValueResponse::SyncValueResponse(
    ::_pbi::ConstantInitialized)
  : res_()
  , network_id_(0u){}
struct SyncValueResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncValueResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncValueResponseDefaultTypeInternal() {}
  union {
    SyncValueResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncValueResponseDefaultTypeInternal _SyncValueResponse_default_instance_;
PROTOBUF_CONSTEXPR SyncMessage::SyncMessage(
    ::_pbi::ConstantInitialized)
  : sync_value_req_(nullptr)
  , sync_value_res_(nullptr){}
struct SyncMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncMessageDefaultTypeInternal() {}
  union {
    SyncMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncMessageDefaultTypeInternal _SyncMessage_default_instance_;
}  // namespace protobuf
}  // namespace sync
}  // namespace zjchain
static ::_pb::Metadata file_level_metadata_protos_2fsync_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_protos_2fsync_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_protos_2fsync_2eproto = nullptr;

const uint32_t TableStruct_protos_2fsync_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncItem, key_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncItem, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncInfo, items_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncHeightItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncHeightItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncHeightItem, pool_idx_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncHeightItem, height_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncHeightItem, tag_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::FlushDbItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::FlushDbItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::FlushDbItem, max_vec_index_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::FlushDbItem, max_height_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::FlushDbItem, heights_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncValueRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncValueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncValueRequest, network_id_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncValueRequest, keys_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncValueRequest, heights_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncResItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncResItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncResItem, key_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncResItem, value_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncResItem, network_id_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncResItem, pool_idx_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncResItem, height_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncValueResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncValueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncValueResponse, network_id_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncValueResponse, res_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncMessage, sync_value_req_),
  PROTOBUF_FIELD_OFFSET(::zjchain::sync::protobuf::SyncMessage, sync_value_res_),
  0,
  1,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::zjchain::sync::protobuf::SyncItem)},
  { 10, -1, -1, sizeof(::zjchain::sync::protobuf::SyncInfo)},
  { 17, 26, -1, sizeof(::zjchain::sync::protobuf::SyncHeightItem)},
  { 29, 38, -1, sizeof(::zjchain::sync::protobuf::FlushDbItem)},
  { 41, 50, -1, sizeof(::zjchain::sync::protobuf::SyncValueRequest)},
  { 53, 64, -1, sizeof(::zjchain::sync::protobuf::SyncResItem)},
  { 69, 77, -1, sizeof(::zjchain::sync::protobuf::SyncValueResponse)},
  { 79, 87, -1, sizeof(::zjchain::sync::protobuf::SyncMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::zjchain::sync::protobuf::_SyncItem_default_instance_._instance,
  &::zjchain::sync::protobuf::_SyncInfo_default_instance_._instance,
  &::zjchain::sync::protobuf::_SyncHeightItem_default_instance_._instance,
  &::zjchain::sync::protobuf::_FlushDbItem_default_instance_._instance,
  &::zjchain::sync::protobuf::_SyncValueRequest_default_instance_._instance,
  &::zjchain::sync::protobuf::_SyncResItem_default_instance_._instance,
  &::zjchain::sync::protobuf::_SyncValueResponse_default_instance_._instance,
  &::zjchain::sync::protobuf::_SyncMessage_default_instance_._instance,
};

const char descriptor_table_protodef_protos_2fsync_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021protos/sync.proto\022\025zjchain.sync.protob"
  "uf\"&\n\010SyncItem\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001"
  "(\014\":\n\010SyncInfo\022.\n\005items\030\001 \003(\0132\037.zjchain."
  "sync.protobuf.SyncItem\"\?\n\016SyncHeightItem"
  "\022\020\n\010pool_idx\030\001 \001(\r\022\016\n\006height\030\002 \001(\004\022\013\n\003ta"
  "g\030\003 \001(\r\"I\n\013FlushDbItem\022\025\n\rmax_vec_index\030"
  "\001 \001(\004\022\022\n\nmax_height\030\002 \001(\004\022\017\n\007heights\030\003 \003"
  "(\004\"l\n\020SyncValueRequest\022\022\n\nnetwork_id\030\001 \001"
  "(\r\022\014\n\004keys\030\002 \003(\014\0226\n\007heights\030\003 \003(\0132%.zjch"
  "ain.sync.protobuf.SyncHeightItem\"_\n\013Sync"
  "ResItem\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014\022\022\n\nn"
  "etwork_id\030\003 \001(\r\022\020\n\010pool_idx\030\004 \001(\r\022\016\n\006hei"
  "ght\030\005 \001(\004\"X\n\021SyncValueResponse\022\022\n\nnetwor"
  "k_id\030\001 \001(\r\022/\n\003res\030\002 \003(\0132\".zjchain.sync.p"
  "rotobuf.SyncResItem\"\220\001\n\013SyncMessage\022\?\n\016s"
  "ync_value_req\030\001 \001(\0132\'.zjchain.sync.proto"
  "buf.SyncValueRequest\022@\n\016sync_value_res\030\002"
  " \001(\0132(.zjchain.sync.protobuf.SyncValueRe"
  "sponse"
  ;
static ::_pbi::once_flag descriptor_table_protos_2fsync_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2fsync_2eproto = {
    false, false, 726, descriptor_table_protodef_protos_2fsync_2eproto,
    "protos/sync.proto",
    &descriptor_table_protos_2fsync_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_protos_2fsync_2eproto::offsets,
    file_level_metadata_protos_2fsync_2eproto, file_level_enum_descriptors_protos_2fsync_2eproto,
    file_level_service_descriptors_protos_2fsync_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2fsync_2eproto_getter() {
  return &descriptor_table_protos_2fsync_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2fsync_2eproto(&descriptor_table_protos_2fsync_2eproto);
namespace zjchain {
namespace sync {
namespace protobuf {

// ===================================================================

class SyncItem::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncItem>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

SyncItem::SyncItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:zjchain.sync.protobuf.SyncItem)
}
SyncItem::SyncItem(const SyncItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_key()) {
    key_.Set(from._internal_key(), 
      GetArenaForAllocation());
  }
  value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_value()) {
    value_.Set(from._internal_value(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:zjchain.sync.protobuf.SyncItem)
}

inline void SyncItem::SharedCtor() {
key_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
value_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncItem::~SyncItem() {
  // @@protoc_insertion_point(destructor:zjchain.sync.protobuf.SyncItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.Destroy();
  value_.Destroy();
}

void SyncItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SyncItem::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.sync.protobuf.SyncItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bytes key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.sync.protobuf.SyncItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_key(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.sync.protobuf.SyncItem)
  return target;
}

size_t SyncItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.sync.protobuf.SyncItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_key());
    }

    // optional bytes value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SyncItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncItem::GetClassData() const { return &_class_data_; }

void SyncItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SyncItem *>(to)->MergeFrom(
      static_cast<const SyncItem &>(from));
}


void SyncItem::MergeFrom(const SyncItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.sync.protobuf.SyncItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_key(from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_value(from._internal_value());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncItem::CopyFrom(const SyncItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.sync.protobuf.SyncItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncItem::IsInitialized() const {
  return true;
}

void SyncItem::InternalSwap(SyncItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fsync_2eproto_getter, &descriptor_table_protos_2fsync_2eproto_once,
      file_level_metadata_protos_2fsync_2eproto[0]);
}

// ===================================================================

class SyncInfo::_Internal {
 public:
};

SyncInfo::SyncInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  items_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:zjchain.sync.protobuf.SyncInfo)
}
SyncInfo::SyncInfo(const SyncInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zjchain.sync.protobuf.SyncInfo)
}

inline void SyncInfo::SharedCtor() {
}

SyncInfo::~SyncInfo() {
  // @@protoc_insertion_point(destructor:zjchain.sync.protobuf.SyncInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SyncInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SyncInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.sync.protobuf.SyncInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .zjchain.sync.protobuf.SyncItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.sync.protobuf.SyncInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zjchain.sync.protobuf.SyncItem items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.sync.protobuf.SyncInfo)
  return target;
}

size_t SyncInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.sync.protobuf.SyncInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .zjchain.sync.protobuf.SyncItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SyncInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncInfo::GetClassData() const { return &_class_data_; }

void SyncInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SyncInfo *>(to)->MergeFrom(
      static_cast<const SyncInfo &>(from));
}


void SyncInfo::MergeFrom(const SyncInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.sync.protobuf.SyncInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncInfo::CopyFrom(const SyncInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.sync.protobuf.SyncInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncInfo::IsInitialized() const {
  return true;
}

void SyncInfo::InternalSwap(SyncInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fsync_2eproto_getter, &descriptor_table_protos_2fsync_2eproto_once,
      file_level_metadata_protos_2fsync_2eproto[1]);
}

// ===================================================================

class SyncHeightItem::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncHeightItem>()._has_bits_);
  static void set_has_pool_idx(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

SyncHeightItem::SyncHeightItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:zjchain.sync.protobuf.SyncHeightItem)
}
SyncHeightItem::SyncHeightItem(const SyncHeightItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&tag_) -
    reinterpret_cast<char*>(&height_)) + sizeof(tag_));
  // @@protoc_insertion_point(copy_constructor:zjchain.sync.protobuf.SyncHeightItem)
}

inline void SyncHeightItem::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&height_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&tag_) -
    reinterpret_cast<char*>(&height_)) + sizeof(tag_));
}

SyncHeightItem::~SyncHeightItem() {
  // @@protoc_insertion_point(destructor:zjchain.sync.protobuf.SyncHeightItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncHeightItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SyncHeightItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SyncHeightItem::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.sync.protobuf.SyncHeightItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tag_) -
        reinterpret_cast<char*>(&height_)) + sizeof(tag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncHeightItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 pool_idx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_pool_idx(&has_bits);
          pool_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_height(&has_bits);
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 tag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_tag(&has_bits);
          tag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncHeightItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.sync.protobuf.SyncHeightItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pool_idx = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_pool_idx(), target);
  }

  // optional uint64 height = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_height(), target);
  }

  // optional uint32 tag = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_tag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.sync.protobuf.SyncHeightItem)
  return target;
}

size_t SyncHeightItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.sync.protobuf.SyncHeightItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 height = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_height());
    }

    // optional uint32 pool_idx = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_pool_idx());
    }

    // optional uint32 tag = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_tag());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncHeightItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SyncHeightItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncHeightItem::GetClassData() const { return &_class_data_; }

void SyncHeightItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SyncHeightItem *>(to)->MergeFrom(
      static_cast<const SyncHeightItem &>(from));
}


void SyncHeightItem::MergeFrom(const SyncHeightItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.sync.protobuf.SyncHeightItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000002u) {
      pool_idx_ = from.pool_idx_;
    }
    if (cached_has_bits & 0x00000004u) {
      tag_ = from.tag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncHeightItem::CopyFrom(const SyncHeightItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.sync.protobuf.SyncHeightItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncHeightItem::IsInitialized() const {
  return true;
}

void SyncHeightItem::InternalSwap(SyncHeightItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SyncHeightItem, tag_)
      + sizeof(SyncHeightItem::tag_)
      - PROTOBUF_FIELD_OFFSET(SyncHeightItem, height_)>(
          reinterpret_cast<char*>(&height_),
          reinterpret_cast<char*>(&other->height_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncHeightItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fsync_2eproto_getter, &descriptor_table_protos_2fsync_2eproto_once,
      file_level_metadata_protos_2fsync_2eproto[2]);
}

// ===================================================================

class FlushDbItem::_Internal {
 public:
  using HasBits = decltype(std::declval<FlushDbItem>()._has_bits_);
  static void set_has_max_vec_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_max_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

FlushDbItem::FlushDbItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  heights_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:zjchain.sync.protobuf.FlushDbItem)
}
FlushDbItem::FlushDbItem(const FlushDbItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      heights_(from.heights_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&max_vec_index_, &from.max_vec_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_height_) -
    reinterpret_cast<char*>(&max_vec_index_)) + sizeof(max_height_));
  // @@protoc_insertion_point(copy_constructor:zjchain.sync.protobuf.FlushDbItem)
}

inline void FlushDbItem::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&max_vec_index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&max_height_) -
    reinterpret_cast<char*>(&max_vec_index_)) + sizeof(max_height_));
}

FlushDbItem::~FlushDbItem() {
  // @@protoc_insertion_point(destructor:zjchain.sync.protobuf.FlushDbItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FlushDbItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FlushDbItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FlushDbItem::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.sync.protobuf.FlushDbItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heights_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&max_vec_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_height_) -
        reinterpret_cast<char*>(&max_vec_index_)) + sizeof(max_height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FlushDbItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint64 max_vec_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_max_vec_index(&has_bits);
          max_vec_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 max_height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_max_height(&has_bits);
          max_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 heights = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_heights(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<uint8_t>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_heights(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FlushDbItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.sync.protobuf.FlushDbItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 max_vec_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_max_vec_index(), target);
  }

  // optional uint64 max_height = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_max_height(), target);
  }

  // repeated uint64 heights = 3;
  for (int i = 0, n = this->_internal_heights_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_heights(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.sync.protobuf.FlushDbItem)
  return target;
}

size_t FlushDbItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.sync.protobuf.FlushDbItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 heights = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->heights_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_heights_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 max_vec_index = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_max_vec_index());
    }

    // optional uint64 max_height = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_max_height());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FlushDbItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FlushDbItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FlushDbItem::GetClassData() const { return &_class_data_; }

void FlushDbItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FlushDbItem *>(to)->MergeFrom(
      static_cast<const FlushDbItem &>(from));
}


void FlushDbItem::MergeFrom(const FlushDbItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.sync.protobuf.FlushDbItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  heights_.MergeFrom(from.heights_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      max_vec_index_ = from.max_vec_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      max_height_ = from.max_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FlushDbItem::CopyFrom(const FlushDbItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.sync.protobuf.FlushDbItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlushDbItem::IsInitialized() const {
  return true;
}

void FlushDbItem::InternalSwap(FlushDbItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  heights_.InternalSwap(&other->heights_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FlushDbItem, max_height_)
      + sizeof(FlushDbItem::max_height_)
      - PROTOBUF_FIELD_OFFSET(FlushDbItem, max_vec_index_)>(
          reinterpret_cast<char*>(&max_vec_index_),
          reinterpret_cast<char*>(&other->max_vec_index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FlushDbItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fsync_2eproto_getter, &descriptor_table_protos_2fsync_2eproto_once,
      file_level_metadata_protos_2fsync_2eproto[3]);
}

// ===================================================================

class SyncValueRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncValueRequest>()._has_bits_);
  static void set_has_network_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SyncValueRequest::SyncValueRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  keys_(arena),
  heights_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:zjchain.sync.protobuf.SyncValueRequest)
}
SyncValueRequest::SyncValueRequest(const SyncValueRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      keys_(from.keys_),
      heights_(from.heights_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:zjchain.sync.protobuf.SyncValueRequest)
}

inline void SyncValueRequest::SharedCtor() {
network_id_ = 0u;
}

SyncValueRequest::~SyncValueRequest() {
  // @@protoc_insertion_point(destructor:zjchain.sync.protobuf.SyncValueRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncValueRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SyncValueRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SyncValueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.sync.protobuf.SyncValueRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  heights_.Clear();
  network_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncValueRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 network_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_network_id(&has_bits);
          network_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated bytes keys = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keys();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .zjchain.sync.protobuf.SyncHeightItem heights = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_heights(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncValueRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.sync.protobuf.SyncValueRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_network_id(), target);
  }

  // repeated bytes keys = 2;
  for (int i = 0, n = this->_internal_keys_size(); i < n; i++) {
    const auto& s = this->_internal_keys(i);
    target = stream->WriteBytes(2, s, target);
  }

  // repeated .zjchain.sync.protobuf.SyncHeightItem heights = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_heights_size()); i < n; i++) {
    const auto& repfield = this->_internal_heights(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.sync.protobuf.SyncValueRequest)
  return target;
}

size_t SyncValueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.sync.protobuf.SyncValueRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes keys = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keys_.size());
  for (int i = 0, n = keys_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      keys_.Get(i));
  }

  // repeated .zjchain.sync.protobuf.SyncHeightItem heights = 3;
  total_size += 1UL * this->_internal_heights_size();
  for (const auto& msg : this->heights_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint32 network_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_network_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncValueRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SyncValueRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncValueRequest::GetClassData() const { return &_class_data_; }

void SyncValueRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SyncValueRequest *>(to)->MergeFrom(
      static_cast<const SyncValueRequest &>(from));
}


void SyncValueRequest::MergeFrom(const SyncValueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.sync.protobuf.SyncValueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  heights_.MergeFrom(from.heights_);
  if (from._internal_has_network_id()) {
    _internal_set_network_id(from._internal_network_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncValueRequest::CopyFrom(const SyncValueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.sync.protobuf.SyncValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncValueRequest::IsInitialized() const {
  return true;
}

void SyncValueRequest::InternalSwap(SyncValueRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  keys_.InternalSwap(&other->keys_);
  heights_.InternalSwap(&other->heights_);
  swap(network_id_, other->network_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncValueRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fsync_2eproto_getter, &descriptor_table_protos_2fsync_2eproto_once,
      file_level_metadata_protos_2fsync_2eproto[4]);
}

// ===================================================================

class SyncResItem::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncResItem>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_network_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_pool_idx(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

SyncResItem::SyncResItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:zjchain.sync.protobuf.SyncResItem)
}
SyncResItem::SyncResItem(const SyncResItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_key()) {
    key_.Set(from._internal_key(), 
      GetArenaForAllocation());
  }
  value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_value()) {
    value_.Set(from._internal_value(), 
      GetArenaForAllocation());
  }
  ::memcpy(&network_id_, &from.network_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&network_id_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:zjchain.sync.protobuf.SyncResItem)
}

inline void SyncResItem::SharedCtor() {
key_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
value_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&network_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&network_id_)) + sizeof(height_));
}

SyncResItem::~SyncResItem() {
  // @@protoc_insertion_point(destructor:zjchain.sync.protobuf.SyncResItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncResItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.Destroy();
  value_.Destroy();
}

void SyncResItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SyncResItem::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.sync.protobuf.SyncResItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&network_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&network_id_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncResItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bytes key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 network_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_network_id(&has_bits);
          network_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 pool_idx = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_pool_idx(&has_bits);
          pool_idx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint64 height = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_height(&has_bits);
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncResItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.sync.protobuf.SyncResItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_key(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  // optional uint32 network_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_network_id(), target);
  }

  // optional uint32 pool_idx = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_pool_idx(), target);
  }

  // optional uint64 height = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.sync.protobuf.SyncResItem)
  return target;
}

size_t SyncResItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.sync.protobuf.SyncResItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bytes key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_key());
    }

    // optional bytes value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_value());
    }

    // optional uint32 network_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_network_id());
    }

    // optional uint32 pool_idx = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_pool_idx());
    }

    // optional uint64 height = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_height());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncResItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SyncResItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncResItem::GetClassData() const { return &_class_data_; }

void SyncResItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SyncResItem *>(to)->MergeFrom(
      static_cast<const SyncResItem &>(from));
}


void SyncResItem::MergeFrom(const SyncResItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.sync.protobuf.SyncResItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_key(from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_value(from._internal_value());
    }
    if (cached_has_bits & 0x00000004u) {
      network_id_ = from.network_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      pool_idx_ = from.pool_idx_;
    }
    if (cached_has_bits & 0x00000010u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncResItem::CopyFrom(const SyncResItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.sync.protobuf.SyncResItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncResItem::IsInitialized() const {
  return true;
}

void SyncResItem::InternalSwap(SyncResItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SyncResItem, height_)
      + sizeof(SyncResItem::height_)
      - PROTOBUF_FIELD_OFFSET(SyncResItem, network_id_)>(
          reinterpret_cast<char*>(&network_id_),
          reinterpret_cast<char*>(&other->network_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncResItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fsync_2eproto_getter, &descriptor_table_protos_2fsync_2eproto_once,
      file_level_metadata_protos_2fsync_2eproto[5]);
}

// ===================================================================

class SyncValueResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncValueResponse>()._has_bits_);
  static void set_has_network_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SyncValueResponse::SyncValueResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  res_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:zjchain.sync.protobuf.SyncValueResponse)
}
SyncValueResponse::SyncValueResponse(const SyncValueResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      res_(from.res_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:zjchain.sync.protobuf.SyncValueResponse)
}

inline void SyncValueResponse::SharedCtor() {
network_id_ = 0u;
}

SyncValueResponse::~SyncValueResponse() {
  // @@protoc_insertion_point(destructor:zjchain.sync.protobuf.SyncValueResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncValueResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SyncValueResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SyncValueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.sync.protobuf.SyncValueResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_.Clear();
  network_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncValueResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 network_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_network_id(&has_bits);
          network_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .zjchain.sync.protobuf.SyncResItem res = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_res(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncValueResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.sync.protobuf.SyncValueResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_network_id(), target);
  }

  // repeated .zjchain.sync.protobuf.SyncResItem res = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_res_size()); i < n; i++) {
    const auto& repfield = this->_internal_res(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.sync.protobuf.SyncValueResponse)
  return target;
}

size_t SyncValueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.sync.protobuf.SyncValueResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .zjchain.sync.protobuf.SyncResItem res = 2;
  total_size += 1UL * this->_internal_res_size();
  for (const auto& msg : this->res_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint32 network_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_network_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncValueResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SyncValueResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncValueResponse::GetClassData() const { return &_class_data_; }

void SyncValueResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SyncValueResponse *>(to)->MergeFrom(
      static_cast<const SyncValueResponse &>(from));
}


void SyncValueResponse::MergeFrom(const SyncValueResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.sync.protobuf.SyncValueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  res_.MergeFrom(from.res_);
  if (from._internal_has_network_id()) {
    _internal_set_network_id(from._internal_network_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncValueResponse::CopyFrom(const SyncValueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.sync.protobuf.SyncValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncValueResponse::IsInitialized() const {
  return true;
}

void SyncValueResponse::InternalSwap(SyncValueResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  res_.InternalSwap(&other->res_);
  swap(network_id_, other->network_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncValueResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fsync_2eproto_getter, &descriptor_table_protos_2fsync_2eproto_once,
      file_level_metadata_protos_2fsync_2eproto[6]);
}

// ===================================================================

class SyncMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncMessage>()._has_bits_);
  static const ::zjchain::sync::protobuf::SyncValueRequest& sync_value_req(const SyncMessage* msg);
  static void set_has_sync_value_req(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::zjchain::sync::protobuf::SyncValueResponse& sync_value_res(const SyncMessage* msg);
  static void set_has_sync_value_res(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::zjchain::sync::protobuf::SyncValueRequest&
SyncMessage::_Internal::sync_value_req(const SyncMessage* msg) {
  return *msg->sync_value_req_;
}
const ::zjchain::sync::protobuf::SyncValueResponse&
SyncMessage::_Internal::sync_value_res(const SyncMessage* msg) {
  return *msg->sync_value_res_;
}
SyncMessage::SyncMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:zjchain.sync.protobuf.SyncMessage)
}
SyncMessage::SyncMessage(const SyncMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_sync_value_req()) {
    sync_value_req_ = new ::zjchain::sync::protobuf::SyncValueRequest(*from.sync_value_req_);
  } else {
    sync_value_req_ = nullptr;
  }
  if (from._internal_has_sync_value_res()) {
    sync_value_res_ = new ::zjchain::sync::protobuf::SyncValueResponse(*from.sync_value_res_);
  } else {
    sync_value_res_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:zjchain.sync.protobuf.SyncMessage)
}

inline void SyncMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&sync_value_req_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&sync_value_res_) -
    reinterpret_cast<char*>(&sync_value_req_)) + sizeof(sync_value_res_));
}

SyncMessage::~SyncMessage() {
  // @@protoc_insertion_point(destructor:zjchain.sync.protobuf.SyncMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete sync_value_req_;
  if (this != internal_default_instance()) delete sync_value_res_;
}

void SyncMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SyncMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.sync.protobuf.SyncMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(sync_value_req_ != nullptr);
      sync_value_req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(sync_value_res_ != nullptr);
      sync_value_res_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .zjchain.sync.protobuf.SyncValueRequest sync_value_req = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_sync_value_req(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .zjchain.sync.protobuf.SyncValueResponse sync_value_res = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_sync_value_res(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.sync.protobuf.SyncMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zjchain.sync.protobuf.SyncValueRequest sync_value_req = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::sync_value_req(this),
        _Internal::sync_value_req(this).GetCachedSize(), target, stream);
  }

  // optional .zjchain.sync.protobuf.SyncValueResponse sync_value_res = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::sync_value_res(this),
        _Internal::sync_value_res(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.sync.protobuf.SyncMessage)
  return target;
}

size_t SyncMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.sync.protobuf.SyncMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .zjchain.sync.protobuf.SyncValueRequest sync_value_req = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sync_value_req_);
    }

    // optional .zjchain.sync.protobuf.SyncValueResponse sync_value_res = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sync_value_res_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SyncMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncMessage::GetClassData() const { return &_class_data_; }

void SyncMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SyncMessage *>(to)->MergeFrom(
      static_cast<const SyncMessage &>(from));
}


void SyncMessage::MergeFrom(const SyncMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.sync.protobuf.SyncMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_sync_value_req()->::zjchain::sync::protobuf::SyncValueRequest::MergeFrom(from._internal_sync_value_req());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_sync_value_res()->::zjchain::sync::protobuf::SyncValueResponse::MergeFrom(from._internal_sync_value_res());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncMessage::CopyFrom(const SyncMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.sync.protobuf.SyncMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncMessage::IsInitialized() const {
  return true;
}

void SyncMessage::InternalSwap(SyncMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SyncMessage, sync_value_res_)
      + sizeof(SyncMessage::sync_value_res_)
      - PROTOBUF_FIELD_OFFSET(SyncMessage, sync_value_req_)>(
          reinterpret_cast<char*>(&sync_value_req_),
          reinterpret_cast<char*>(&other->sync_value_req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fsync_2eproto_getter, &descriptor_table_protos_2fsync_2eproto_once,
      file_level_metadata_protos_2fsync_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace sync
}  // namespace zjchain
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::zjchain::sync::protobuf::SyncItem*
Arena::CreateMaybeMessage< ::zjchain::sync::protobuf::SyncItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zjchain::sync::protobuf::SyncItem >(arena);
}
template<> PROTOBUF_NOINLINE ::zjchain::sync::protobuf::SyncInfo*
Arena::CreateMaybeMessage< ::zjchain::sync::protobuf::SyncInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zjchain::sync::protobuf::SyncInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::zjchain::sync::protobuf::SyncHeightItem*
Arena::CreateMaybeMessage< ::zjchain::sync::protobuf::SyncHeightItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zjchain::sync::protobuf::SyncHeightItem >(arena);
}
template<> PROTOBUF_NOINLINE ::zjchain::sync::protobuf::FlushDbItem*
Arena::CreateMaybeMessage< ::zjchain::sync::protobuf::FlushDbItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zjchain::sync::protobuf::FlushDbItem >(arena);
}
template<> PROTOBUF_NOINLINE ::zjchain::sync::protobuf::SyncValueRequest*
Arena::CreateMaybeMessage< ::zjchain::sync::protobuf::SyncValueRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zjchain::sync::protobuf::SyncValueRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::zjchain::sync::protobuf::SyncResItem*
Arena::CreateMaybeMessage< ::zjchain::sync::protobuf::SyncResItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zjchain::sync::protobuf::SyncResItem >(arena);
}
template<> PROTOBUF_NOINLINE ::zjchain::sync::protobuf::SyncValueResponse*
Arena::CreateMaybeMessage< ::zjchain::sync::protobuf::SyncValueResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zjchain::sync::protobuf::SyncValueResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::zjchain::sync::protobuf::SyncMessage*
Arena::CreateMaybeMessage< ::zjchain::sync::protobuf::SyncMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zjchain::sync::protobuf::SyncMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
