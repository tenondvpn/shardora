// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/sync.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protos/sync.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zjchain {
namespace sync {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* SyncItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncHeightItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncHeightItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* FlushDbItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FlushDbItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncValueRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncValueRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncResItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncResItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncValueResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncValueResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_protos_2fsync_2eproto() {
  protobuf_AddDesc_protos_2fsync_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protos/sync.proto");
  GOOGLE_CHECK(file != NULL);
  SyncItem_descriptor_ = file->message_type(0);
  static const int SyncItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncItem, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncItem, value_),
  };
  SyncItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncItem_descriptor_,
      SyncItem::default_instance_,
      SyncItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncItem));
  SyncInfo_descriptor_ = file->message_type(1);
  static const int SyncInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncInfo, items_),
  };
  SyncInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncInfo_descriptor_,
      SyncInfo::default_instance_,
      SyncInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncInfo));
  SyncHeightItem_descriptor_ = file->message_type(2);
  static const int SyncHeightItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncHeightItem, pool_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncHeightItem, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncHeightItem, tag_),
  };
  SyncHeightItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncHeightItem_descriptor_,
      SyncHeightItem::default_instance_,
      SyncHeightItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncHeightItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncHeightItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncHeightItem));
  FlushDbItem_descriptor_ = file->message_type(3);
  static const int FlushDbItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlushDbItem, max_vec_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlushDbItem, max_height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlushDbItem, heights_),
  };
  FlushDbItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FlushDbItem_descriptor_,
      FlushDbItem::default_instance_,
      FlushDbItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlushDbItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlushDbItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FlushDbItem));
  SyncValueRequest_descriptor_ = file->message_type(4);
  static const int SyncValueRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncValueRequest, network_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncValueRequest, keys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncValueRequest, heights_),
  };
  SyncValueRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncValueRequest_descriptor_,
      SyncValueRequest::default_instance_,
      SyncValueRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncValueRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncValueRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncValueRequest));
  SyncResItem_descriptor_ = file->message_type(5);
  static const int SyncResItem_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResItem, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResItem, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResItem, network_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResItem, pool_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResItem, height_),
  };
  SyncResItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncResItem_descriptor_,
      SyncResItem::default_instance_,
      SyncResItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncResItem));
  SyncValueResponse_descriptor_ = file->message_type(6);
  static const int SyncValueResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncValueResponse, network_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncValueResponse, res_),
  };
  SyncValueResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncValueResponse_descriptor_,
      SyncValueResponse::default_instance_,
      SyncValueResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncValueResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncValueResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncValueResponse));
  SyncMessage_descriptor_ = file->message_type(7);
  static const int SyncMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, sync_value_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, sync_value_res_),
  };
  SyncMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncMessage_descriptor_,
      SyncMessage::default_instance_,
      SyncMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protos_2fsync_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncItem_descriptor_, &SyncItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncInfo_descriptor_, &SyncInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncHeightItem_descriptor_, &SyncHeightItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FlushDbItem_descriptor_, &FlushDbItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncValueRequest_descriptor_, &SyncValueRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncResItem_descriptor_, &SyncResItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncValueResponse_descriptor_, &SyncValueResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncMessage_descriptor_, &SyncMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protos_2fsync_2eproto() {
  delete SyncItem::default_instance_;
  delete SyncItem_reflection_;
  delete SyncInfo::default_instance_;
  delete SyncInfo_reflection_;
  delete SyncHeightItem::default_instance_;
  delete SyncHeightItem_reflection_;
  delete FlushDbItem::default_instance_;
  delete FlushDbItem_reflection_;
  delete SyncValueRequest::default_instance_;
  delete SyncValueRequest_reflection_;
  delete SyncResItem::default_instance_;
  delete SyncResItem_reflection_;
  delete SyncValueResponse::default_instance_;
  delete SyncValueResponse_reflection_;
  delete SyncMessage::default_instance_;
  delete SyncMessage_reflection_;
}

void protobuf_AddDesc_protos_2fsync_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021protos/sync.proto\022\025zjchain.sync.protob"
    "uf\"&\n\010SyncItem\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001"
    "(\014\":\n\010SyncInfo\022.\n\005items\030\001 \003(\0132\037.zjchain."
    "sync.protobuf.SyncItem\"\?\n\016SyncHeightItem"
    "\022\020\n\010pool_idx\030\001 \001(\r\022\016\n\006height\030\002 \001(\004\022\013\n\003ta"
    "g\030\003 \001(\r\"I\n\013FlushDbItem\022\025\n\rmax_vec_index\030"
    "\001 \001(\004\022\022\n\nmax_height\030\002 \001(\004\022\017\n\007heights\030\003 \003"
    "(\004\"l\n\020SyncValueRequest\022\022\n\nnetwork_id\030\001 \001"
    "(\r\022\014\n\004keys\030\002 \003(\014\0226\n\007heights\030\003 \003(\0132%.zjch"
    "ain.sync.protobuf.SyncHeightItem\"_\n\013Sync"
    "ResItem\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014\022\022\n\nn"
    "etwork_id\030\003 \001(\r\022\020\n\010pool_idx\030\004 \001(\r\022\016\n\006hei"
    "ght\030\005 \001(\004\"X\n\021SyncValueResponse\022\022\n\nnetwor"
    "k_id\030\001 \001(\r\022/\n\003res\030\002 \003(\0132\".zjchain.sync.p"
    "rotobuf.SyncResItem\"\220\001\n\013SyncMessage\022\?\n\016s"
    "ync_value_req\030\001 \001(\0132\'.zjchain.sync.proto"
    "buf.SyncValueRequest\022@\n\016sync_value_res\030\002"
    " \001(\0132(.zjchain.sync.protobuf.SyncValueRe"
    "sponse", 726);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protos/sync.proto", &protobuf_RegisterTypes);
  SyncItem::default_instance_ = new SyncItem();
  SyncInfo::default_instance_ = new SyncInfo();
  SyncHeightItem::default_instance_ = new SyncHeightItem();
  FlushDbItem::default_instance_ = new FlushDbItem();
  SyncValueRequest::default_instance_ = new SyncValueRequest();
  SyncResItem::default_instance_ = new SyncResItem();
  SyncValueResponse::default_instance_ = new SyncValueResponse();
  SyncMessage::default_instance_ = new SyncMessage();
  SyncItem::default_instance_->InitAsDefaultInstance();
  SyncInfo::default_instance_->InitAsDefaultInstance();
  SyncHeightItem::default_instance_->InitAsDefaultInstance();
  FlushDbItem::default_instance_->InitAsDefaultInstance();
  SyncValueRequest::default_instance_->InitAsDefaultInstance();
  SyncResItem::default_instance_->InitAsDefaultInstance();
  SyncValueResponse::default_instance_->InitAsDefaultInstance();
  SyncMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protos_2fsync_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protos_2fsync_2eproto {
  StaticDescriptorInitializer_protos_2fsync_2eproto() {
    protobuf_AddDesc_protos_2fsync_2eproto();
  }
} static_descriptor_initializer_protos_2fsync_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SyncItem::kKeyFieldNumber;
const int SyncItem::kValueFieldNumber;
#endif  // !_MSC_VER

SyncItem::SyncItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncItem::InitAsDefaultInstance() {
}

SyncItem::SyncItem(const SyncItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncItem::SharedCtor() {
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncItem::~SyncItem() {
  SharedDtor();
}

void SyncItem::SharedDtor() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void SyncItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncItem_descriptor_;
}

const SyncItem& SyncItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2fsync_2eproto();
  return *default_instance_;
}

SyncItem* SyncItem::default_instance_ = NULL;

SyncItem* SyncItem::New() const {
  return new SyncItem;
}

void SyncItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::kEmptyString) {
        key_->clear();
      }
    }
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::kEmptyString) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->key(), output);
  }

  // optional bytes value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes key = 1;
  if (has_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional bytes value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncItem::MergeFrom(const SyncItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncItem::CopyFrom(const SyncItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncItem::IsInitialized() const {

  return true;
}

void SyncItem::Swap(SyncItem* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncItem_descriptor_;
  metadata.reflection = SyncItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncInfo::kItemsFieldNumber;
#endif  // !_MSC_VER

SyncInfo::SyncInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncInfo::InitAsDefaultInstance() {
}

SyncInfo::SyncInfo(const SyncInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncInfo::~SyncInfo() {
  SharedDtor();
}

void SyncInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncInfo_descriptor_;
}

const SyncInfo& SyncInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2fsync_2eproto();
  return *default_instance_;
}

SyncInfo* SyncInfo::default_instance_ = NULL;

SyncInfo* SyncInfo::New() const {
  return new SyncInfo;
}

void SyncInfo::Clear() {
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .zjchain.sync.protobuf.SyncItem items = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_items;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .zjchain.sync.protobuf.SyncItem items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .zjchain.sync.protobuf.SyncItem items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncInfo::ByteSize() const {
  int total_size = 0;

  // repeated .zjchain.sync.protobuf.SyncItem items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncInfo::MergeFrom(const SyncInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncInfo::CopyFrom(const SyncInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncInfo::IsInitialized() const {

  return true;
}

void SyncInfo::Swap(SyncInfo* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncInfo_descriptor_;
  metadata.reflection = SyncInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncHeightItem::kPoolIdxFieldNumber;
const int SyncHeightItem::kHeightFieldNumber;
const int SyncHeightItem::kTagFieldNumber;
#endif  // !_MSC_VER

SyncHeightItem::SyncHeightItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncHeightItem::InitAsDefaultInstance() {
}

SyncHeightItem::SyncHeightItem(const SyncHeightItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncHeightItem::SharedCtor() {
  _cached_size_ = 0;
  pool_idx_ = 0u;
  height_ = GOOGLE_ULONGLONG(0);
  tag_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncHeightItem::~SyncHeightItem() {
  SharedDtor();
}

void SyncHeightItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncHeightItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncHeightItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncHeightItem_descriptor_;
}

const SyncHeightItem& SyncHeightItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2fsync_2eproto();
  return *default_instance_;
}

SyncHeightItem* SyncHeightItem::default_instance_ = NULL;

SyncHeightItem* SyncHeightItem::New() const {
  return new SyncHeightItem;
}

void SyncHeightItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pool_idx_ = 0u;
    height_ = GOOGLE_ULONGLONG(0);
    tag_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncHeightItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pool_idx = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pool_idx_)));
          set_has_pool_idx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_height;
        break;
      }

      // optional uint64 height = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_tag;
        break;
      }

      // optional uint32 tag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_)));
          set_has_tag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncHeightItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 pool_idx = 1;
  if (has_pool_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pool_idx(), output);
  }

  // optional uint64 height = 2;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->height(), output);
  }

  // optional uint32 tag = 3;
  if (has_tag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncHeightItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 pool_idx = 1;
  if (has_pool_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pool_idx(), target);
  }

  // optional uint64 height = 2;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->height(), target);
  }

  // optional uint32 tag = 3;
  if (has_tag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncHeightItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 pool_idx = 1;
    if (has_pool_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pool_idx());
    }

    // optional uint64 height = 2;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->height());
    }

    // optional uint32 tag = 3;
    if (has_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncHeightItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncHeightItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncHeightItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncHeightItem::MergeFrom(const SyncHeightItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pool_idx()) {
      set_pool_idx(from.pool_idx());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_tag()) {
      set_tag(from.tag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncHeightItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncHeightItem::CopyFrom(const SyncHeightItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncHeightItem::IsInitialized() const {

  return true;
}

void SyncHeightItem::Swap(SyncHeightItem* other) {
  if (other != this) {
    std::swap(pool_idx_, other->pool_idx_);
    std::swap(height_, other->height_);
    std::swap(tag_, other->tag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncHeightItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncHeightItem_descriptor_;
  metadata.reflection = SyncHeightItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FlushDbItem::kMaxVecIndexFieldNumber;
const int FlushDbItem::kMaxHeightFieldNumber;
const int FlushDbItem::kHeightsFieldNumber;
#endif  // !_MSC_VER

FlushDbItem::FlushDbItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FlushDbItem::InitAsDefaultInstance() {
}

FlushDbItem::FlushDbItem(const FlushDbItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FlushDbItem::SharedCtor() {
  _cached_size_ = 0;
  max_vec_index_ = GOOGLE_ULONGLONG(0);
  max_height_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FlushDbItem::~FlushDbItem() {
  SharedDtor();
}

void FlushDbItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FlushDbItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FlushDbItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FlushDbItem_descriptor_;
}

const FlushDbItem& FlushDbItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2fsync_2eproto();
  return *default_instance_;
}

FlushDbItem* FlushDbItem::default_instance_ = NULL;

FlushDbItem* FlushDbItem::New() const {
  return new FlushDbItem;
}

void FlushDbItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    max_vec_index_ = GOOGLE_ULONGLONG(0);
    max_height_ = GOOGLE_ULONGLONG(0);
  }
  heights_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FlushDbItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 max_vec_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_vec_index_)));
          set_has_max_vec_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_max_height;
        break;
      }

      // optional uint64 max_height = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_height_)));
          set_has_max_height();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_heights;
        break;
      }

      // repeated uint64 heights = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heights:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_heights())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_heights())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_heights;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FlushDbItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 max_vec_index = 1;
  if (has_max_vec_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->max_vec_index(), output);
  }

  // optional uint64 max_height = 2;
  if (has_max_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->max_height(), output);
  }

  // repeated uint64 heights = 3;
  for (int i = 0; i < this->heights_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->heights(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FlushDbItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 max_vec_index = 1;
  if (has_max_vec_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->max_vec_index(), target);
  }

  // optional uint64 max_height = 2;
  if (has_max_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->max_height(), target);
  }

  // repeated uint64 heights = 3;
  for (int i = 0; i < this->heights_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->heights(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FlushDbItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 max_vec_index = 1;
    if (has_max_vec_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->max_vec_index());
    }

    // optional uint64 max_height = 2;
    if (has_max_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->max_height());
    }

  }
  // repeated uint64 heights = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->heights_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->heights(i));
    }
    total_size += 1 * this->heights_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FlushDbItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FlushDbItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FlushDbItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FlushDbItem::MergeFrom(const FlushDbItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  heights_.MergeFrom(from.heights_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_max_vec_index()) {
      set_max_vec_index(from.max_vec_index());
    }
    if (from.has_max_height()) {
      set_max_height(from.max_height());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FlushDbItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlushDbItem::CopyFrom(const FlushDbItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlushDbItem::IsInitialized() const {

  return true;
}

void FlushDbItem::Swap(FlushDbItem* other) {
  if (other != this) {
    std::swap(max_vec_index_, other->max_vec_index_);
    std::swap(max_height_, other->max_height_);
    heights_.Swap(&other->heights_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FlushDbItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FlushDbItem_descriptor_;
  metadata.reflection = FlushDbItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncValueRequest::kNetworkIdFieldNumber;
const int SyncValueRequest::kKeysFieldNumber;
const int SyncValueRequest::kHeightsFieldNumber;
#endif  // !_MSC_VER

SyncValueRequest::SyncValueRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncValueRequest::InitAsDefaultInstance() {
}

SyncValueRequest::SyncValueRequest(const SyncValueRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncValueRequest::SharedCtor() {
  _cached_size_ = 0;
  network_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncValueRequest::~SyncValueRequest() {
  SharedDtor();
}

void SyncValueRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncValueRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncValueRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncValueRequest_descriptor_;
}

const SyncValueRequest& SyncValueRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2fsync_2eproto();
  return *default_instance_;
}

SyncValueRequest* SyncValueRequest::default_instance_ = NULL;

SyncValueRequest* SyncValueRequest::New() const {
  return new SyncValueRequest;
}

void SyncValueRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    network_id_ = 0u;
  }
  keys_.Clear();
  heights_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncValueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 network_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_id_)));
          set_has_network_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_keys;
        break;
      }

      // repeated bytes keys = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_keys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_keys()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_keys;
        if (input->ExpectTag(26)) goto parse_heights;
        break;
      }

      // repeated .zjchain.sync.protobuf.SyncHeightItem heights = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_heights:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_heights()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_heights;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncValueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 network_id = 1;
  if (has_network_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->network_id(), output);
  }

  // repeated bytes keys = 2;
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->keys(i), output);
  }

  // repeated .zjchain.sync.protobuf.SyncHeightItem heights = 3;
  for (int i = 0; i < this->heights_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->heights(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncValueRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 network_id = 1;
  if (has_network_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->network_id(), target);
  }

  // repeated bytes keys = 2;
  for (int i = 0; i < this->keys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->keys(i), target);
  }

  // repeated .zjchain.sync.protobuf.SyncHeightItem heights = 3;
  for (int i = 0; i < this->heights_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->heights(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncValueRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 network_id = 1;
    if (has_network_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_id());
    }

  }
  // repeated bytes keys = 2;
  total_size += 1 * this->keys_size();
  for (int i = 0; i < this->keys_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->keys(i));
  }

  // repeated .zjchain.sync.protobuf.SyncHeightItem heights = 3;
  total_size += 1 * this->heights_size();
  for (int i = 0; i < this->heights_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->heights(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncValueRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncValueRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncValueRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncValueRequest::MergeFrom(const SyncValueRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  keys_.MergeFrom(from.keys_);
  heights_.MergeFrom(from.heights_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_network_id()) {
      set_network_id(from.network_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncValueRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncValueRequest::CopyFrom(const SyncValueRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncValueRequest::IsInitialized() const {

  return true;
}

void SyncValueRequest::Swap(SyncValueRequest* other) {
  if (other != this) {
    std::swap(network_id_, other->network_id_);
    keys_.Swap(&other->keys_);
    heights_.Swap(&other->heights_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncValueRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncValueRequest_descriptor_;
  metadata.reflection = SyncValueRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncResItem::kKeyFieldNumber;
const int SyncResItem::kValueFieldNumber;
const int SyncResItem::kNetworkIdFieldNumber;
const int SyncResItem::kPoolIdxFieldNumber;
const int SyncResItem::kHeightFieldNumber;
#endif  // !_MSC_VER

SyncResItem::SyncResItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncResItem::InitAsDefaultInstance() {
}

SyncResItem::SyncResItem(const SyncResItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncResItem::SharedCtor() {
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  network_id_ = 0u;
  pool_idx_ = 0u;
  height_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncResItem::~SyncResItem() {
  SharedDtor();
}

void SyncResItem::SharedDtor() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void SyncResItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncResItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncResItem_descriptor_;
}

const SyncResItem& SyncResItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2fsync_2eproto();
  return *default_instance_;
}

SyncResItem* SyncResItem::default_instance_ = NULL;

SyncResItem* SyncResItem::New() const {
  return new SyncResItem;
}

void SyncResItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::kEmptyString) {
        key_->clear();
      }
    }
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::kEmptyString) {
        value_->clear();
      }
    }
    network_id_ = 0u;
    pool_idx_ = 0u;
    height_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncResItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_network_id;
        break;
      }

      // optional uint32 network_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_network_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_id_)));
          set_has_network_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pool_idx;
        break;
      }

      // optional uint32 pool_idx = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pool_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pool_idx_)));
          set_has_pool_idx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_height;
        break;
      }

      // optional uint64 height = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncResItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->key(), output);
  }

  // optional bytes value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->value(), output);
  }

  // optional uint32 network_id = 3;
  if (has_network_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->network_id(), output);
  }

  // optional uint32 pool_idx = 4;
  if (has_pool_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pool_idx(), output);
  }

  // optional uint64 height = 5;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->height(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncResItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes key = 1;
  if (has_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional bytes value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // optional uint32 network_id = 3;
  if (has_network_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->network_id(), target);
  }

  // optional uint32 pool_idx = 4;
  if (has_pool_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pool_idx(), target);
  }

  // optional uint64 height = 5;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->height(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncResItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

    // optional uint32 network_id = 3;
    if (has_network_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_id());
    }

    // optional uint32 pool_idx = 4;
    if (has_pool_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pool_idx());
    }

    // optional uint64 height = 5;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->height());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncResItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncResItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncResItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncResItem::MergeFrom(const SyncResItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_network_id()) {
      set_network_id(from.network_id());
    }
    if (from.has_pool_idx()) {
      set_pool_idx(from.pool_idx());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncResItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncResItem::CopyFrom(const SyncResItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncResItem::IsInitialized() const {

  return true;
}

void SyncResItem::Swap(SyncResItem* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(network_id_, other->network_id_);
    std::swap(pool_idx_, other->pool_idx_);
    std::swap(height_, other->height_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncResItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncResItem_descriptor_;
  metadata.reflection = SyncResItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncValueResponse::kNetworkIdFieldNumber;
const int SyncValueResponse::kResFieldNumber;
#endif  // !_MSC_VER

SyncValueResponse::SyncValueResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncValueResponse::InitAsDefaultInstance() {
}

SyncValueResponse::SyncValueResponse(const SyncValueResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncValueResponse::SharedCtor() {
  _cached_size_ = 0;
  network_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncValueResponse::~SyncValueResponse() {
  SharedDtor();
}

void SyncValueResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncValueResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncValueResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncValueResponse_descriptor_;
}

const SyncValueResponse& SyncValueResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2fsync_2eproto();
  return *default_instance_;
}

SyncValueResponse* SyncValueResponse::default_instance_ = NULL;

SyncValueResponse* SyncValueResponse::New() const {
  return new SyncValueResponse;
}

void SyncValueResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    network_id_ = 0u;
  }
  res_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncValueResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 network_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_id_)));
          set_has_network_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_res;
        break;
      }

      // repeated .zjchain.sync.protobuf.SyncResItem res = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_res:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_res()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_res;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncValueResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 network_id = 1;
  if (has_network_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->network_id(), output);
  }

  // repeated .zjchain.sync.protobuf.SyncResItem res = 2;
  for (int i = 0; i < this->res_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->res(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncValueResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 network_id = 1;
  if (has_network_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->network_id(), target);
  }

  // repeated .zjchain.sync.protobuf.SyncResItem res = 2;
  for (int i = 0; i < this->res_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->res(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncValueResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 network_id = 1;
    if (has_network_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_id());
    }

  }
  // repeated .zjchain.sync.protobuf.SyncResItem res = 2;
  total_size += 1 * this->res_size();
  for (int i = 0; i < this->res_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->res(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncValueResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncValueResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncValueResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncValueResponse::MergeFrom(const SyncValueResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  res_.MergeFrom(from.res_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_network_id()) {
      set_network_id(from.network_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncValueResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncValueResponse::CopyFrom(const SyncValueResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncValueResponse::IsInitialized() const {

  return true;
}

void SyncValueResponse::Swap(SyncValueResponse* other) {
  if (other != this) {
    std::swap(network_id_, other->network_id_);
    res_.Swap(&other->res_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncValueResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncValueResponse_descriptor_;
  metadata.reflection = SyncValueResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncMessage::kSyncValueReqFieldNumber;
const int SyncMessage::kSyncValueResFieldNumber;
#endif  // !_MSC_VER

SyncMessage::SyncMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncMessage::InitAsDefaultInstance() {
  sync_value_req_ = const_cast< ::zjchain::sync::protobuf::SyncValueRequest*>(&::zjchain::sync::protobuf::SyncValueRequest::default_instance());
  sync_value_res_ = const_cast< ::zjchain::sync::protobuf::SyncValueResponse*>(&::zjchain::sync::protobuf::SyncValueResponse::default_instance());
}

SyncMessage::SyncMessage(const SyncMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncMessage::SharedCtor() {
  _cached_size_ = 0;
  sync_value_req_ = NULL;
  sync_value_res_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncMessage::~SyncMessage() {
  SharedDtor();
}

void SyncMessage::SharedDtor() {
  if (this != default_instance_) {
    delete sync_value_req_;
    delete sync_value_res_;
  }
}

void SyncMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncMessage_descriptor_;
}

const SyncMessage& SyncMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protos_2fsync_2eproto();
  return *default_instance_;
}

SyncMessage* SyncMessage::default_instance_ = NULL;

SyncMessage* SyncMessage::New() const {
  return new SyncMessage;
}

void SyncMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_sync_value_req()) {
      if (sync_value_req_ != NULL) sync_value_req_->::zjchain::sync::protobuf::SyncValueRequest::Clear();
    }
    if (has_sync_value_res()) {
      if (sync_value_res_ != NULL) sync_value_res_->::zjchain::sync::protobuf::SyncValueResponse::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .zjchain.sync.protobuf.SyncValueRequest sync_value_req = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sync_value_req()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sync_value_res;
        break;
      }

      // optional .zjchain.sync.protobuf.SyncValueResponse sync_value_res = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sync_value_res:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sync_value_res()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .zjchain.sync.protobuf.SyncValueRequest sync_value_req = 1;
  if (has_sync_value_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sync_value_req(), output);
  }

  // optional .zjchain.sync.protobuf.SyncValueResponse sync_value_res = 2;
  if (has_sync_value_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sync_value_res(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .zjchain.sync.protobuf.SyncValueRequest sync_value_req = 1;
  if (has_sync_value_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sync_value_req(), target);
  }

  // optional .zjchain.sync.protobuf.SyncValueResponse sync_value_res = 2;
  if (has_sync_value_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->sync_value_res(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .zjchain.sync.protobuf.SyncValueRequest sync_value_req = 1;
    if (has_sync_value_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sync_value_req());
    }

    // optional .zjchain.sync.protobuf.SyncValueResponse sync_value_res = 2;
    if (has_sync_value_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sync_value_res());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncMessage::MergeFrom(const SyncMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sync_value_req()) {
      mutable_sync_value_req()->::zjchain::sync::protobuf::SyncValueRequest::MergeFrom(from.sync_value_req());
    }
    if (from.has_sync_value_res()) {
      mutable_sync_value_res()->::zjchain::sync::protobuf::SyncValueResponse::MergeFrom(from.sync_value_res());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncMessage::CopyFrom(const SyncMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncMessage::IsInitialized() const {

  return true;
}

void SyncMessage::Swap(SyncMessage* other) {
  if (other != this) {
    std::swap(sync_value_req_, other->sync_value_req_);
    std::swap(sync_value_res_, other->sync_value_res_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncMessage_descriptor_;
  metadata.reflection = SyncMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace sync
}  // namespace zjchain

// @@protoc_insertion_point(global_scope)
