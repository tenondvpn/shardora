// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/init.proto

#ifndef PROTOBUF_protos_2finit_2eproto__INCLUDED
#define PROTOBUF_protos_2finit_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "protos/bls.pb.h"
#include "protos/block.pb.h"
// @@protoc_insertion_point(includes)

namespace zjchain {
namespace init {
namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protos_2finit_2eproto();
void protobuf_AssignDesc_protos_2finit_2eproto();
void protobuf_ShutdownFile_protos_2finit_2eproto();

class GetAddressInfoRequest;
class GetAddressInfoResponse;
class InvalidLeaderPools;
class GenesisInitBlsInfo;
class InitMessage;

// ===================================================================

class GetAddressInfoRequest : public ::google::protobuf::Message {
 public:
  GetAddressInfoRequest();
  virtual ~GetAddressInfoRequest();

  GetAddressInfoRequest(const GetAddressInfoRequest& from);

  inline GetAddressInfoRequest& operator=(const GetAddressInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAddressInfoRequest& default_instance();

  void Swap(GetAddressInfoRequest* other);

  // implements Message ----------------------------------------------

  GetAddressInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAddressInfoRequest& from);
  void MergeFrom(const GetAddressInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const void* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:zjchain.init.protobuf.GetAddressInfoRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2finit_2eproto();
  friend void protobuf_AssignDesc_protos_2finit_2eproto();
  friend void protobuf_ShutdownFile_protos_2finit_2eproto();

  void InitAsDefaultInstance();
  static GetAddressInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetAddressInfoResponse : public ::google::protobuf::Message {
 public:
  GetAddressInfoResponse();
  virtual ~GetAddressInfoResponse();

  GetAddressInfoResponse(const GetAddressInfoResponse& from);

  inline GetAddressInfoResponse& operator=(const GetAddressInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAddressInfoResponse& default_instance();

  void Swap(GetAddressInfoResponse* other);

  // implements Message ----------------------------------------------

  GetAddressInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAddressInfoResponse& from);
  void MergeFrom(const GetAddressInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .zjchain.block.protobuf.Block block = 1;
  inline bool has_block() const;
  inline void clear_block();
  static const int kBlockFieldNumber = 1;
  inline const ::zjchain::block::protobuf::Block& block() const;
  inline ::zjchain::block::protobuf::Block* mutable_block();
  inline ::zjchain::block::protobuf::Block* release_block();
  inline void set_allocated_block(::zjchain::block::protobuf::Block* block);

  // @@protoc_insertion_point(class_scope:zjchain.init.protobuf.GetAddressInfoResponse)
 private:
  inline void set_has_block();
  inline void clear_has_block();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::zjchain::block::protobuf::Block* block_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2finit_2eproto();
  friend void protobuf_AssignDesc_protos_2finit_2eproto();
  friend void protobuf_ShutdownFile_protos_2finit_2eproto();

  void InitAsDefaultInstance();
  static GetAddressInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class InvalidLeaderPools : public ::google::protobuf::Message {
 public:
  InvalidLeaderPools();
  virtual ~InvalidLeaderPools();

  InvalidLeaderPools(const InvalidLeaderPools& from);

  inline InvalidLeaderPools& operator=(const InvalidLeaderPools& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InvalidLeaderPools& default_instance();

  void Swap(InvalidLeaderPools* other);

  // implements Message ----------------------------------------------

  InvalidLeaderPools* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InvalidLeaderPools& from);
  void MergeFrom(const InvalidLeaderPools& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 pools = 1;
  inline int pools_size() const;
  inline void clear_pools();
  static const int kPoolsFieldNumber = 1;
  inline ::google::protobuf::int32 pools(int index) const;
  inline void set_pools(int index, ::google::protobuf::int32 value);
  inline void add_pools(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pools() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pools();

  // optional uint64 elect_height = 2;
  inline bool has_elect_height() const;
  inline void clear_elect_height();
  static const int kElectHeightFieldNumber = 2;
  inline ::google::protobuf::uint64 elect_height() const;
  inline void set_elect_height(::google::protobuf::uint64 value);

  // optional uint32 member_index = 3;
  inline bool has_member_index() const;
  inline void clear_member_index();
  static const int kMemberIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 member_index() const;
  inline void set_member_index(::google::protobuf::uint32 value);

  // optional int32 mod_num = 4;
  inline bool has_mod_num() const;
  inline void clear_mod_num();
  static const int kModNumFieldNumber = 4;
  inline ::google::protobuf::int32 mod_num() const;
  inline void set_mod_num(::google::protobuf::int32 value);

  // optional uint32 leader_idx = 5;
  inline bool has_leader_idx() const;
  inline void clear_leader_idx();
  static const int kLeaderIdxFieldNumber = 5;
  inline ::google::protobuf::uint32 leader_idx() const;
  inline void set_leader_idx(::google::protobuf::uint32 value);

  // optional uint32 version = 6;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 6;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zjchain.init.protobuf.InvalidLeaderPools)
 private:
  inline void set_has_elect_height();
  inline void clear_has_elect_height();
  inline void set_has_member_index();
  inline void clear_has_member_index();
  inline void set_has_mod_num();
  inline void clear_has_mod_num();
  inline void set_has_leader_idx();
  inline void clear_has_leader_idx();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pools_;
  ::google::protobuf::uint64 elect_height_;
  ::google::protobuf::uint32 member_index_;
  ::google::protobuf::int32 mod_num_;
  ::google::protobuf::uint32 leader_idx_;
  ::google::protobuf::uint32 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2finit_2eproto();
  friend void protobuf_AssignDesc_protos_2finit_2eproto();
  friend void protobuf_ShutdownFile_protos_2finit_2eproto();

  void InitAsDefaultInstance();
  static InvalidLeaderPools* default_instance_;
};
// -------------------------------------------------------------------

class GenesisInitBlsInfo : public ::google::protobuf::Message {
 public:
  GenesisInitBlsInfo();
  virtual ~GenesisInitBlsInfo();

  GenesisInitBlsInfo(const GenesisInitBlsInfo& from);

  inline GenesisInitBlsInfo& operator=(const GenesisInitBlsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenesisInitBlsInfo& default_instance();

  void Swap(GenesisInitBlsInfo* other);

  // implements Message ----------------------------------------------

  GenesisInitBlsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GenesisInitBlsInfo& from);
  void MergeFrom(const GenesisInitBlsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 height = 1;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 1;
  inline ::google::protobuf::uint64 height() const;
  inline void set_height(::google::protobuf::uint64 value);

  // optional uint32 shard_id = 2;
  inline bool has_shard_id() const;
  inline void clear_shard_id();
  static const int kShardIdFieldNumber = 2;
  inline ::google::protobuf::uint32 shard_id() const;
  inline void set_shard_id(::google::protobuf::uint32 value);

  // optional bytes id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const void* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // optional bytes bls_enc_data = 4;
  inline bool has_bls_enc_data() const;
  inline void clear_bls_enc_data();
  static const int kBlsEncDataFieldNumber = 4;
  inline const ::std::string& bls_enc_data() const;
  inline void set_bls_enc_data(const ::std::string& value);
  inline void set_bls_enc_data(const char* value);
  inline void set_bls_enc_data(const void* value, size_t size);
  inline ::std::string* mutable_bls_enc_data();
  inline ::std::string* release_bls_enc_data();
  inline void set_allocated_bls_enc_data(::std::string* bls_enc_data);

  // optional bytes bls_hash = 5;
  inline bool has_bls_hash() const;
  inline void clear_bls_hash();
  static const int kBlsHashFieldNumber = 5;
  inline const ::std::string& bls_hash() const;
  inline void set_bls_hash(const ::std::string& value);
  inline void set_bls_hash(const char* value);
  inline void set_bls_hash(const void* value, size_t size);
  inline ::std::string* mutable_bls_hash();
  inline ::std::string* release_bls_hash();
  inline void set_allocated_bls_hash(::std::string* bls_hash);

  // optional .zjchain.bls.protobuf.JoinElectInfo join_info = 6;
  inline bool has_join_info() const;
  inline void clear_join_info();
  static const int kJoinInfoFieldNumber = 6;
  inline const ::zjchain::bls::protobuf::JoinElectInfo& join_info() const;
  inline ::zjchain::bls::protobuf::JoinElectInfo* mutable_join_info();
  inline ::zjchain::bls::protobuf::JoinElectInfo* release_join_info();
  inline void set_allocated_join_info(::zjchain::bls::protobuf::JoinElectInfo* join_info);

  // optional .zjchain.bls.protobuf.LocalPolynomial local_poly = 7;
  inline bool has_local_poly() const;
  inline void clear_local_poly();
  static const int kLocalPolyFieldNumber = 7;
  inline const ::zjchain::bls::protobuf::LocalPolynomial& local_poly() const;
  inline ::zjchain::bls::protobuf::LocalPolynomial* mutable_local_poly();
  inline ::zjchain::bls::protobuf::LocalPolynomial* release_local_poly();
  inline void set_allocated_local_poly(::zjchain::bls::protobuf::LocalPolynomial* local_poly);

  // optional bytes prikey = 8;
  inline bool has_prikey() const;
  inline void clear_prikey();
  static const int kPrikeyFieldNumber = 8;
  inline const ::std::string& prikey() const;
  inline void set_prikey(const ::std::string& value);
  inline void set_prikey(const char* value);
  inline void set_prikey(const void* value, size_t size);
  inline ::std::string* mutable_prikey();
  inline ::std::string* release_prikey();
  inline void set_allocated_prikey(::std::string* prikey);

  // @@protoc_insertion_point(class_scope:zjchain.init.protobuf.GenesisInitBlsInfo)
 private:
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_shard_id();
  inline void clear_has_shard_id();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_bls_enc_data();
  inline void clear_has_bls_enc_data();
  inline void set_has_bls_hash();
  inline void clear_has_bls_hash();
  inline void set_has_join_info();
  inline void clear_has_join_info();
  inline void set_has_local_poly();
  inline void clear_has_local_poly();
  inline void set_has_prikey();
  inline void clear_has_prikey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 height_;
  ::std::string* id_;
  ::std::string* bls_enc_data_;
  ::std::string* bls_hash_;
  ::zjchain::bls::protobuf::JoinElectInfo* join_info_;
  ::zjchain::bls::protobuf::LocalPolynomial* local_poly_;
  ::std::string* prikey_;
  ::google::protobuf::uint32 shard_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2finit_2eproto();
  friend void protobuf_AssignDesc_protos_2finit_2eproto();
  friend void protobuf_ShutdownFile_protos_2finit_2eproto();

  void InitAsDefaultInstance();
  static GenesisInitBlsInfo* default_instance_;
};
// -------------------------------------------------------------------

class InitMessage : public ::google::protobuf::Message {
 public:
  InitMessage();
  virtual ~InitMessage();

  InitMessage(const InitMessage& from);

  inline InitMessage& operator=(const InitMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitMessage& default_instance();

  void Swap(InitMessage* other);

  // implements Message ----------------------------------------------

  InitMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InitMessage& from);
  void MergeFrom(const InitMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .zjchain.init.protobuf.GetAddressInfoRequest addr_req = 1;
  inline bool has_addr_req() const;
  inline void clear_addr_req();
  static const int kAddrReqFieldNumber = 1;
  inline const ::zjchain::init::protobuf::GetAddressInfoRequest& addr_req() const;
  inline ::zjchain::init::protobuf::GetAddressInfoRequest* mutable_addr_req();
  inline ::zjchain::init::protobuf::GetAddressInfoRequest* release_addr_req();
  inline void set_allocated_addr_req(::zjchain::init::protobuf::GetAddressInfoRequest* addr_req);

  // optional .zjchain.init.protobuf.GetAddressInfoResponse addr_res = 2;
  inline bool has_addr_res() const;
  inline void clear_addr_res();
  static const int kAddrResFieldNumber = 2;
  inline const ::zjchain::init::protobuf::GetAddressInfoResponse& addr_res() const;
  inline ::zjchain::init::protobuf::GetAddressInfoResponse* mutable_addr_res();
  inline ::zjchain::init::protobuf::GetAddressInfoResponse* release_addr_res();
  inline void set_allocated_addr_res(::zjchain::init::protobuf::GetAddressInfoResponse* addr_res);

  // optional .zjchain.init.protobuf.InvalidLeaderPools pools = 3;
  inline bool has_pools() const;
  inline void clear_pools();
  static const int kPoolsFieldNumber = 3;
  inline const ::zjchain::init::protobuf::InvalidLeaderPools& pools() const;
  inline ::zjchain::init::protobuf::InvalidLeaderPools* mutable_pools();
  inline ::zjchain::init::protobuf::InvalidLeaderPools* release_pools();
  inline void set_allocated_pools(::zjchain::init::protobuf::InvalidLeaderPools* pools);

  // @@protoc_insertion_point(class_scope:zjchain.init.protobuf.InitMessage)
 private:
  inline void set_has_addr_req();
  inline void clear_has_addr_req();
  inline void set_has_addr_res();
  inline void clear_has_addr_res();
  inline void set_has_pools();
  inline void clear_has_pools();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::zjchain::init::protobuf::GetAddressInfoRequest* addr_req_;
  ::zjchain::init::protobuf::GetAddressInfoResponse* addr_res_;
  ::zjchain::init::protobuf::InvalidLeaderPools* pools_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2finit_2eproto();
  friend void protobuf_AssignDesc_protos_2finit_2eproto();
  friend void protobuf_ShutdownFile_protos_2finit_2eproto();

  void InitAsDefaultInstance();
  static InitMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// GetAddressInfoRequest

// optional bytes id = 1;
inline bool GetAddressInfoRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAddressInfoRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAddressInfoRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAddressInfoRequest::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& GetAddressInfoRequest::id() const {
  return *id_;
}
inline void GetAddressInfoRequest::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void GetAddressInfoRequest::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void GetAddressInfoRequest::set_id(const void* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetAddressInfoRequest::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* GetAddressInfoRequest::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetAddressInfoRequest::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetAddressInfoResponse

// optional .zjchain.block.protobuf.Block block = 1;
inline bool GetAddressInfoResponse::has_block() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAddressInfoResponse::set_has_block() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAddressInfoResponse::clear_has_block() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAddressInfoResponse::clear_block() {
  if (block_ != NULL) block_->::zjchain::block::protobuf::Block::Clear();
  clear_has_block();
}
inline const ::zjchain::block::protobuf::Block& GetAddressInfoResponse::block() const {
  return block_ != NULL ? *block_ : *default_instance_->block_;
}
inline ::zjchain::block::protobuf::Block* GetAddressInfoResponse::mutable_block() {
  set_has_block();
  if (block_ == NULL) block_ = new ::zjchain::block::protobuf::Block;
  return block_;
}
inline ::zjchain::block::protobuf::Block* GetAddressInfoResponse::release_block() {
  clear_has_block();
  ::zjchain::block::protobuf::Block* temp = block_;
  block_ = NULL;
  return temp;
}
inline void GetAddressInfoResponse::set_allocated_block(::zjchain::block::protobuf::Block* block) {
  delete block_;
  block_ = block;
  if (block) {
    set_has_block();
  } else {
    clear_has_block();
  }
}

// -------------------------------------------------------------------

// InvalidLeaderPools

// repeated int32 pools = 1;
inline int InvalidLeaderPools::pools_size() const {
  return pools_.size();
}
inline void InvalidLeaderPools::clear_pools() {
  pools_.Clear();
}
inline ::google::protobuf::int32 InvalidLeaderPools::pools(int index) const {
  return pools_.Get(index);
}
inline void InvalidLeaderPools::set_pools(int index, ::google::protobuf::int32 value) {
  pools_.Set(index, value);
}
inline void InvalidLeaderPools::add_pools(::google::protobuf::int32 value) {
  pools_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
InvalidLeaderPools::pools() const {
  return pools_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
InvalidLeaderPools::mutable_pools() {
  return &pools_;
}

// optional uint64 elect_height = 2;
inline bool InvalidLeaderPools::has_elect_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InvalidLeaderPools::set_has_elect_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InvalidLeaderPools::clear_has_elect_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InvalidLeaderPools::clear_elect_height() {
  elect_height_ = GOOGLE_ULONGLONG(0);
  clear_has_elect_height();
}
inline ::google::protobuf::uint64 InvalidLeaderPools::elect_height() const {
  return elect_height_;
}
inline void InvalidLeaderPools::set_elect_height(::google::protobuf::uint64 value) {
  set_has_elect_height();
  elect_height_ = value;
}

// optional uint32 member_index = 3;
inline bool InvalidLeaderPools::has_member_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InvalidLeaderPools::set_has_member_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InvalidLeaderPools::clear_has_member_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InvalidLeaderPools::clear_member_index() {
  member_index_ = 0u;
  clear_has_member_index();
}
inline ::google::protobuf::uint32 InvalidLeaderPools::member_index() const {
  return member_index_;
}
inline void InvalidLeaderPools::set_member_index(::google::protobuf::uint32 value) {
  set_has_member_index();
  member_index_ = value;
}

// optional int32 mod_num = 4;
inline bool InvalidLeaderPools::has_mod_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InvalidLeaderPools::set_has_mod_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InvalidLeaderPools::clear_has_mod_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InvalidLeaderPools::clear_mod_num() {
  mod_num_ = 0;
  clear_has_mod_num();
}
inline ::google::protobuf::int32 InvalidLeaderPools::mod_num() const {
  return mod_num_;
}
inline void InvalidLeaderPools::set_mod_num(::google::protobuf::int32 value) {
  set_has_mod_num();
  mod_num_ = value;
}

// optional uint32 leader_idx = 5;
inline bool InvalidLeaderPools::has_leader_idx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InvalidLeaderPools::set_has_leader_idx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InvalidLeaderPools::clear_has_leader_idx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InvalidLeaderPools::clear_leader_idx() {
  leader_idx_ = 0u;
  clear_has_leader_idx();
}
inline ::google::protobuf::uint32 InvalidLeaderPools::leader_idx() const {
  return leader_idx_;
}
inline void InvalidLeaderPools::set_leader_idx(::google::protobuf::uint32 value) {
  set_has_leader_idx();
  leader_idx_ = value;
}

// optional uint32 version = 6;
inline bool InvalidLeaderPools::has_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InvalidLeaderPools::set_has_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InvalidLeaderPools::clear_has_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InvalidLeaderPools::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 InvalidLeaderPools::version() const {
  return version_;
}
inline void InvalidLeaderPools::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// GenesisInitBlsInfo

// optional uint64 height = 1;
inline bool GenesisInitBlsInfo::has_height() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GenesisInitBlsInfo::set_has_height() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GenesisInitBlsInfo::clear_has_height() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GenesisInitBlsInfo::clear_height() {
  height_ = GOOGLE_ULONGLONG(0);
  clear_has_height();
}
inline ::google::protobuf::uint64 GenesisInitBlsInfo::height() const {
  return height_;
}
inline void GenesisInitBlsInfo::set_height(::google::protobuf::uint64 value) {
  set_has_height();
  height_ = value;
}

// optional uint32 shard_id = 2;
inline bool GenesisInitBlsInfo::has_shard_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GenesisInitBlsInfo::set_has_shard_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GenesisInitBlsInfo::clear_has_shard_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GenesisInitBlsInfo::clear_shard_id() {
  shard_id_ = 0u;
  clear_has_shard_id();
}
inline ::google::protobuf::uint32 GenesisInitBlsInfo::shard_id() const {
  return shard_id_;
}
inline void GenesisInitBlsInfo::set_shard_id(::google::protobuf::uint32 value) {
  set_has_shard_id();
  shard_id_ = value;
}

// optional bytes id = 3;
inline bool GenesisInitBlsInfo::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GenesisInitBlsInfo::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GenesisInitBlsInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GenesisInitBlsInfo::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& GenesisInitBlsInfo::id() const {
  return *id_;
}
inline void GenesisInitBlsInfo::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void GenesisInitBlsInfo::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void GenesisInitBlsInfo::set_id(const void* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GenesisInitBlsInfo::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* GenesisInitBlsInfo::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GenesisInitBlsInfo::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes bls_enc_data = 4;
inline bool GenesisInitBlsInfo::has_bls_enc_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GenesisInitBlsInfo::set_has_bls_enc_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GenesisInitBlsInfo::clear_has_bls_enc_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GenesisInitBlsInfo::clear_bls_enc_data() {
  if (bls_enc_data_ != &::google::protobuf::internal::kEmptyString) {
    bls_enc_data_->clear();
  }
  clear_has_bls_enc_data();
}
inline const ::std::string& GenesisInitBlsInfo::bls_enc_data() const {
  return *bls_enc_data_;
}
inline void GenesisInitBlsInfo::set_bls_enc_data(const ::std::string& value) {
  set_has_bls_enc_data();
  if (bls_enc_data_ == &::google::protobuf::internal::kEmptyString) {
    bls_enc_data_ = new ::std::string;
  }
  bls_enc_data_->assign(value);
}
inline void GenesisInitBlsInfo::set_bls_enc_data(const char* value) {
  set_has_bls_enc_data();
  if (bls_enc_data_ == &::google::protobuf::internal::kEmptyString) {
    bls_enc_data_ = new ::std::string;
  }
  bls_enc_data_->assign(value);
}
inline void GenesisInitBlsInfo::set_bls_enc_data(const void* value, size_t size) {
  set_has_bls_enc_data();
  if (bls_enc_data_ == &::google::protobuf::internal::kEmptyString) {
    bls_enc_data_ = new ::std::string;
  }
  bls_enc_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GenesisInitBlsInfo::mutable_bls_enc_data() {
  set_has_bls_enc_data();
  if (bls_enc_data_ == &::google::protobuf::internal::kEmptyString) {
    bls_enc_data_ = new ::std::string;
  }
  return bls_enc_data_;
}
inline ::std::string* GenesisInitBlsInfo::release_bls_enc_data() {
  clear_has_bls_enc_data();
  if (bls_enc_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bls_enc_data_;
    bls_enc_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GenesisInitBlsInfo::set_allocated_bls_enc_data(::std::string* bls_enc_data) {
  if (bls_enc_data_ != &::google::protobuf::internal::kEmptyString) {
    delete bls_enc_data_;
  }
  if (bls_enc_data) {
    set_has_bls_enc_data();
    bls_enc_data_ = bls_enc_data;
  } else {
    clear_has_bls_enc_data();
    bls_enc_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes bls_hash = 5;
inline bool GenesisInitBlsInfo::has_bls_hash() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GenesisInitBlsInfo::set_has_bls_hash() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GenesisInitBlsInfo::clear_has_bls_hash() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GenesisInitBlsInfo::clear_bls_hash() {
  if (bls_hash_ != &::google::protobuf::internal::kEmptyString) {
    bls_hash_->clear();
  }
  clear_has_bls_hash();
}
inline const ::std::string& GenesisInitBlsInfo::bls_hash() const {
  return *bls_hash_;
}
inline void GenesisInitBlsInfo::set_bls_hash(const ::std::string& value) {
  set_has_bls_hash();
  if (bls_hash_ == &::google::protobuf::internal::kEmptyString) {
    bls_hash_ = new ::std::string;
  }
  bls_hash_->assign(value);
}
inline void GenesisInitBlsInfo::set_bls_hash(const char* value) {
  set_has_bls_hash();
  if (bls_hash_ == &::google::protobuf::internal::kEmptyString) {
    bls_hash_ = new ::std::string;
  }
  bls_hash_->assign(value);
}
inline void GenesisInitBlsInfo::set_bls_hash(const void* value, size_t size) {
  set_has_bls_hash();
  if (bls_hash_ == &::google::protobuf::internal::kEmptyString) {
    bls_hash_ = new ::std::string;
  }
  bls_hash_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GenesisInitBlsInfo::mutable_bls_hash() {
  set_has_bls_hash();
  if (bls_hash_ == &::google::protobuf::internal::kEmptyString) {
    bls_hash_ = new ::std::string;
  }
  return bls_hash_;
}
inline ::std::string* GenesisInitBlsInfo::release_bls_hash() {
  clear_has_bls_hash();
  if (bls_hash_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bls_hash_;
    bls_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GenesisInitBlsInfo::set_allocated_bls_hash(::std::string* bls_hash) {
  if (bls_hash_ != &::google::protobuf::internal::kEmptyString) {
    delete bls_hash_;
  }
  if (bls_hash) {
    set_has_bls_hash();
    bls_hash_ = bls_hash;
  } else {
    clear_has_bls_hash();
    bls_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .zjchain.bls.protobuf.JoinElectInfo join_info = 6;
inline bool GenesisInitBlsInfo::has_join_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GenesisInitBlsInfo::set_has_join_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GenesisInitBlsInfo::clear_has_join_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GenesisInitBlsInfo::clear_join_info() {
  if (join_info_ != NULL) join_info_->::zjchain::bls::protobuf::JoinElectInfo::Clear();
  clear_has_join_info();
}
inline const ::zjchain::bls::protobuf::JoinElectInfo& GenesisInitBlsInfo::join_info() const {
  return join_info_ != NULL ? *join_info_ : *default_instance_->join_info_;
}
inline ::zjchain::bls::protobuf::JoinElectInfo* GenesisInitBlsInfo::mutable_join_info() {
  set_has_join_info();
  if (join_info_ == NULL) join_info_ = new ::zjchain::bls::protobuf::JoinElectInfo;
  return join_info_;
}
inline ::zjchain::bls::protobuf::JoinElectInfo* GenesisInitBlsInfo::release_join_info() {
  clear_has_join_info();
  ::zjchain::bls::protobuf::JoinElectInfo* temp = join_info_;
  join_info_ = NULL;
  return temp;
}
inline void GenesisInitBlsInfo::set_allocated_join_info(::zjchain::bls::protobuf::JoinElectInfo* join_info) {
  delete join_info_;
  join_info_ = join_info;
  if (join_info) {
    set_has_join_info();
  } else {
    clear_has_join_info();
  }
}

// optional .zjchain.bls.protobuf.LocalPolynomial local_poly = 7;
inline bool GenesisInitBlsInfo::has_local_poly() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GenesisInitBlsInfo::set_has_local_poly() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GenesisInitBlsInfo::clear_has_local_poly() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GenesisInitBlsInfo::clear_local_poly() {
  if (local_poly_ != NULL) local_poly_->::zjchain::bls::protobuf::LocalPolynomial::Clear();
  clear_has_local_poly();
}
inline const ::zjchain::bls::protobuf::LocalPolynomial& GenesisInitBlsInfo::local_poly() const {
  return local_poly_ != NULL ? *local_poly_ : *default_instance_->local_poly_;
}
inline ::zjchain::bls::protobuf::LocalPolynomial* GenesisInitBlsInfo::mutable_local_poly() {
  set_has_local_poly();
  if (local_poly_ == NULL) local_poly_ = new ::zjchain::bls::protobuf::LocalPolynomial;
  return local_poly_;
}
inline ::zjchain::bls::protobuf::LocalPolynomial* GenesisInitBlsInfo::release_local_poly() {
  clear_has_local_poly();
  ::zjchain::bls::protobuf::LocalPolynomial* temp = local_poly_;
  local_poly_ = NULL;
  return temp;
}
inline void GenesisInitBlsInfo::set_allocated_local_poly(::zjchain::bls::protobuf::LocalPolynomial* local_poly) {
  delete local_poly_;
  local_poly_ = local_poly;
  if (local_poly) {
    set_has_local_poly();
  } else {
    clear_has_local_poly();
  }
}

// optional bytes prikey = 8;
inline bool GenesisInitBlsInfo::has_prikey() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GenesisInitBlsInfo::set_has_prikey() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GenesisInitBlsInfo::clear_has_prikey() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GenesisInitBlsInfo::clear_prikey() {
  if (prikey_ != &::google::protobuf::internal::kEmptyString) {
    prikey_->clear();
  }
  clear_has_prikey();
}
inline const ::std::string& GenesisInitBlsInfo::prikey() const {
  return *prikey_;
}
inline void GenesisInitBlsInfo::set_prikey(const ::std::string& value) {
  set_has_prikey();
  if (prikey_ == &::google::protobuf::internal::kEmptyString) {
    prikey_ = new ::std::string;
  }
  prikey_->assign(value);
}
inline void GenesisInitBlsInfo::set_prikey(const char* value) {
  set_has_prikey();
  if (prikey_ == &::google::protobuf::internal::kEmptyString) {
    prikey_ = new ::std::string;
  }
  prikey_->assign(value);
}
inline void GenesisInitBlsInfo::set_prikey(const void* value, size_t size) {
  set_has_prikey();
  if (prikey_ == &::google::protobuf::internal::kEmptyString) {
    prikey_ = new ::std::string;
  }
  prikey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GenesisInitBlsInfo::mutable_prikey() {
  set_has_prikey();
  if (prikey_ == &::google::protobuf::internal::kEmptyString) {
    prikey_ = new ::std::string;
  }
  return prikey_;
}
inline ::std::string* GenesisInitBlsInfo::release_prikey() {
  clear_has_prikey();
  if (prikey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = prikey_;
    prikey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GenesisInitBlsInfo::set_allocated_prikey(::std::string* prikey) {
  if (prikey_ != &::google::protobuf::internal::kEmptyString) {
    delete prikey_;
  }
  if (prikey) {
    set_has_prikey();
    prikey_ = prikey;
  } else {
    clear_has_prikey();
    prikey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// InitMessage

// optional .zjchain.init.protobuf.GetAddressInfoRequest addr_req = 1;
inline bool InitMessage::has_addr_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitMessage::set_has_addr_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitMessage::clear_has_addr_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitMessage::clear_addr_req() {
  if (addr_req_ != NULL) addr_req_->::zjchain::init::protobuf::GetAddressInfoRequest::Clear();
  clear_has_addr_req();
}
inline const ::zjchain::init::protobuf::GetAddressInfoRequest& InitMessage::addr_req() const {
  return addr_req_ != NULL ? *addr_req_ : *default_instance_->addr_req_;
}
inline ::zjchain::init::protobuf::GetAddressInfoRequest* InitMessage::mutable_addr_req() {
  set_has_addr_req();
  if (addr_req_ == NULL) addr_req_ = new ::zjchain::init::protobuf::GetAddressInfoRequest;
  return addr_req_;
}
inline ::zjchain::init::protobuf::GetAddressInfoRequest* InitMessage::release_addr_req() {
  clear_has_addr_req();
  ::zjchain::init::protobuf::GetAddressInfoRequest* temp = addr_req_;
  addr_req_ = NULL;
  return temp;
}
inline void InitMessage::set_allocated_addr_req(::zjchain::init::protobuf::GetAddressInfoRequest* addr_req) {
  delete addr_req_;
  addr_req_ = addr_req;
  if (addr_req) {
    set_has_addr_req();
  } else {
    clear_has_addr_req();
  }
}

// optional .zjchain.init.protobuf.GetAddressInfoResponse addr_res = 2;
inline bool InitMessage::has_addr_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitMessage::set_has_addr_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitMessage::clear_has_addr_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitMessage::clear_addr_res() {
  if (addr_res_ != NULL) addr_res_->::zjchain::init::protobuf::GetAddressInfoResponse::Clear();
  clear_has_addr_res();
}
inline const ::zjchain::init::protobuf::GetAddressInfoResponse& InitMessage::addr_res() const {
  return addr_res_ != NULL ? *addr_res_ : *default_instance_->addr_res_;
}
inline ::zjchain::init::protobuf::GetAddressInfoResponse* InitMessage::mutable_addr_res() {
  set_has_addr_res();
  if (addr_res_ == NULL) addr_res_ = new ::zjchain::init::protobuf::GetAddressInfoResponse;
  return addr_res_;
}
inline ::zjchain::init::protobuf::GetAddressInfoResponse* InitMessage::release_addr_res() {
  clear_has_addr_res();
  ::zjchain::init::protobuf::GetAddressInfoResponse* temp = addr_res_;
  addr_res_ = NULL;
  return temp;
}
inline void InitMessage::set_allocated_addr_res(::zjchain::init::protobuf::GetAddressInfoResponse* addr_res) {
  delete addr_res_;
  addr_res_ = addr_res;
  if (addr_res) {
    set_has_addr_res();
  } else {
    clear_has_addr_res();
  }
}

// optional .zjchain.init.protobuf.InvalidLeaderPools pools = 3;
inline bool InitMessage::has_pools() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InitMessage::set_has_pools() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InitMessage::clear_has_pools() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InitMessage::clear_pools() {
  if (pools_ != NULL) pools_->::zjchain::init::protobuf::InvalidLeaderPools::Clear();
  clear_has_pools();
}
inline const ::zjchain::init::protobuf::InvalidLeaderPools& InitMessage::pools() const {
  return pools_ != NULL ? *pools_ : *default_instance_->pools_;
}
inline ::zjchain::init::protobuf::InvalidLeaderPools* InitMessage::mutable_pools() {
  set_has_pools();
  if (pools_ == NULL) pools_ = new ::zjchain::init::protobuf::InvalidLeaderPools;
  return pools_;
}
inline ::zjchain::init::protobuf::InvalidLeaderPools* InitMessage::release_pools() {
  clear_has_pools();
  ::zjchain::init::protobuf::InvalidLeaderPools* temp = pools_;
  pools_ = NULL;
  return temp;
}
inline void InitMessage::set_allocated_pools(::zjchain::init::protobuf::InvalidLeaderPools* pools) {
  delete pools_;
  pools_ = pools;
  if (pools) {
    set_has_pools();
  } else {
    clear_has_pools();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace init
}  // namespace zjchain

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protos_2finit_2eproto__INCLUDED
