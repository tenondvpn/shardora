// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/transport.proto

#ifndef PROTOBUF_INCLUDED_protos_2ftransport_2eproto
#define PROTOBUF_INCLUDED_protos_2ftransport_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "protos/network.pb.h"
#include "protos/dht.pb.h"
#include "protos/block.pb.h"
#include "protos/bls.pb.h"
#include "protos/pools.pb.h"
#include "protos/contract.pb.h"
#include "protos/elect.pb.h"
#include "protos/zbft.pb.h"
#include "protos/sync.pb.h"
#include "protos/vss.pb.h"
#include "protos/init.pb.h"
#include "protos/c2c.pb.h"
#include "protos/view_block.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2ftransport_2eproto 

namespace protobuf_protos_2ftransport_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protos_2ftransport_2eproto
namespace shardora {
namespace transport {
namespace protobuf {
class BroadcastParam;
class BroadcastParamDefaultTypeInternal;
extern BroadcastParamDefaultTypeInternal _BroadcastParam_default_instance_;
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
}  // namespace protobuf
}  // namespace transport
}  // namespace shardora
namespace google {
namespace protobuf {
template<> ::shardora::transport::protobuf::BroadcastParam* Arena::CreateMaybeMessage<::shardora::transport::protobuf::BroadcastParam>(Arena*);
template<> ::shardora::transport::protobuf::Header* Arena::CreateMaybeMessage<::shardora::transport::protobuf::Header>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace shardora {
namespace transport {
namespace protobuf {

// ===================================================================

class BroadcastParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shardora.transport.protobuf.BroadcastParam) */ {
 public:
  BroadcastParam();
  virtual ~BroadcastParam();

  BroadcastParam(const BroadcastParam& from);

  inline BroadcastParam& operator=(const BroadcastParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BroadcastParam(BroadcastParam&& from) noexcept
    : BroadcastParam() {
    *this = ::std::move(from);
  }

  inline BroadcastParam& operator=(BroadcastParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BroadcastParam* internal_default_instance() {
    return reinterpret_cast<const BroadcastParam*>(
               &_BroadcastParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BroadcastParam* other);
  friend void swap(BroadcastParam& a, BroadcastParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BroadcastParam* New() const final {
    return CreateMaybeMessage<BroadcastParam>(NULL);
  }

  BroadcastParam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BroadcastParam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BroadcastParam& from);
  void MergeFrom(const BroadcastParam& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BroadcastParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 bloomfilter = 12;
  int bloomfilter_size() const;
  void clear_bloomfilter();
  static const int kBloomfilterFieldNumber = 12;
  ::google::protobuf::uint64 bloomfilter(int index) const;
  void set_bloomfilter(int index, ::google::protobuf::uint64 value);
  void add_bloomfilter(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      bloomfilter() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_bloomfilter();

  // optional bytes header = 9;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 9;
  const ::std::string& header() const;
  void set_header(const ::std::string& value);
  #if LANG_CXX11
  void set_header(::std::string&& value);
  #endif
  void set_header(const char* value);
  void set_header(const void* value, size_t size);
  ::std::string* mutable_header();
  ::std::string* release_header();
  void set_allocated_header(::std::string* header);

  // optional bytes body = 10;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 10;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // optional uint32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 stop_times = 3;
  bool has_stop_times() const;
  void clear_stop_times();
  static const int kStopTimesFieldNumber = 3;
  ::google::protobuf::uint32 stop_times() const;
  void set_stop_times(::google::protobuf::uint32 value);

  // optional uint64 layer_left = 5;
  bool has_layer_left() const;
  void clear_layer_left();
  static const int kLayerLeftFieldNumber = 5;
  ::google::protobuf::uint64 layer_left() const;
  void set_layer_left(::google::protobuf::uint64 value);

  // optional uint64 layer_right = 6;
  bool has_layer_right() const;
  void clear_layer_right();
  static const int kLayerRightFieldNumber = 6;
  ::google::protobuf::uint64 layer_right() const;
  void set_layer_right(::google::protobuf::uint64 value);

  // optional float overlap = 7;
  bool has_overlap() const;
  void clear_overlap();
  static const int kOverlapFieldNumber = 7;
  float overlap() const;
  void set_overlap(float value);

  // optional bool net_crossed = 11;
  bool has_net_crossed() const;
  void clear_net_crossed();
  static const int kNetCrossedFieldNumber = 11;
  bool net_crossed() const;
  void set_net_crossed(bool value);

  // optional float evil_rate = 13 [default = 0];
  bool has_evil_rate() const;
  void clear_evil_rate();
  static const int kEvilRateFieldNumber = 13;
  float evil_rate() const;
  void set_evil_rate(float value);

  // optional uint32 neighbor_count = 2 [default = 7];
  bool has_neighbor_count() const;
  void clear_neighbor_count();
  static const int kNeighborCountFieldNumber = 2;
  ::google::protobuf::uint32 neighbor_count() const;
  void set_neighbor_count(::google::protobuf::uint32 value);

  // optional uint32 hop_limit = 4 [default = 10];
  bool has_hop_limit() const;
  void clear_hop_limit();
  static const int kHopLimitFieldNumber = 4;
  ::google::protobuf::uint32 hop_limit() const;
  void set_hop_limit(::google::protobuf::uint32 value);

  // optional uint32 hop_to_layer = 8 [default = 1];
  bool has_hop_to_layer() const;
  void clear_hop_to_layer();
  static const int kHopToLayerFieldNumber = 8;
  ::google::protobuf::uint32 hop_to_layer() const;
  void set_hop_to_layer(::google::protobuf::uint32 value);

  // optional uint32 ign_bloomfilter_hop = 14 [default = 1];
  bool has_ign_bloomfilter_hop() const;
  void clear_ign_bloomfilter_hop();
  static const int kIgnBloomfilterHopFieldNumber = 14;
  ::google::protobuf::uint32 ign_bloomfilter_hop() const;
  void set_ign_bloomfilter_hop(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shardora.transport.protobuf.BroadcastParam)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_neighbor_count();
  void clear_has_neighbor_count();
  void set_has_stop_times();
  void clear_has_stop_times();
  void set_has_hop_limit();
  void clear_has_hop_limit();
  void set_has_layer_left();
  void clear_has_layer_left();
  void set_has_layer_right();
  void clear_has_layer_right();
  void set_has_overlap();
  void clear_has_overlap();
  void set_has_hop_to_layer();
  void clear_has_hop_to_layer();
  void set_has_header();
  void clear_has_header();
  void set_has_body();
  void clear_has_body();
  void set_has_net_crossed();
  void clear_has_net_crossed();
  void set_has_evil_rate();
  void clear_has_evil_rate();
  void set_has_ign_bloomfilter_hop();
  void clear_has_ign_bloomfilter_hop();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > bloomfilter_;
  ::google::protobuf::internal::ArenaStringPtr header_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 stop_times_;
  ::google::protobuf::uint64 layer_left_;
  ::google::protobuf::uint64 layer_right_;
  float overlap_;
  bool net_crossed_;
  float evil_rate_;
  ::google::protobuf::uint32 neighbor_count_;
  ::google::protobuf::uint32 hop_limit_;
  ::google::protobuf::uint32 hop_to_layer_;
  ::google::protobuf::uint32 ign_bloomfilter_hop_;
  friend struct ::protobuf_protos_2ftransport_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shardora.transport.protobuf.Header) */ {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Header(Header&& from) noexcept
    : Header() {
    *this = ::std::move(from);
  }

  inline Header& operator=(Header&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Header& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Header* internal_default_instance() {
    return reinterpret_cast<const Header*>(
               &_Header_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Header* other);
  friend void swap(Header& a, Header& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Header* New() const final {
    return CreateMaybeMessage<Header>(NULL);
  }

  Header* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Header>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes des_dht_key = 2;
  bool has_des_dht_key() const;
  void clear_des_dht_key();
  static const int kDesDhtKeyFieldNumber = 2;
  const ::std::string& des_dht_key() const;
  void set_des_dht_key(const ::std::string& value);
  #if LANG_CXX11
  void set_des_dht_key(::std::string&& value);
  #endif
  void set_des_dht_key(const char* value);
  void set_des_dht_key(const void* value, size_t size);
  ::std::string* mutable_des_dht_key();
  ::std::string* release_des_dht_key();
  void set_allocated_des_dht_key(::std::string* des_dht_key);

  // optional bytes debug = 4;
  bool has_debug() const;
  void clear_debug();
  static const int kDebugFieldNumber = 4;
  const ::std::string& debug() const;
  void set_debug(const ::std::string& value);
  #if LANG_CXX11
  void set_debug(::std::string&& value);
  #endif
  void set_debug(const char* value);
  void set_debug(const void* value, size_t size);
  ::std::string* mutable_debug();
  ::std::string* release_debug();
  void set_allocated_debug(::std::string* debug);

  // optional bytes sign = 8;
  bool has_sign() const;
  void clear_sign();
  static const int kSignFieldNumber = 8;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_sign(::std::string&& value);
  #endif
  void set_sign(const char* value);
  void set_sign(const void* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // optional bytes pubkey = 31;
  bool has_pubkey() const;
  void clear_pubkey();
  static const int kPubkeyFieldNumber = 31;
  const ::std::string& pubkey() const;
  void set_pubkey(const ::std::string& value);
  #if LANG_CXX11
  void set_pubkey(::std::string&& value);
  #endif
  void set_pubkey(const char* value);
  void set_pubkey(const void* value, size_t size);
  ::std::string* mutable_pubkey();
  ::std::string* release_pubkey();
  void set_allocated_pubkey(::std::string* pubkey);

  // optional .shardora.transport.protobuf.BroadcastParam broadcast = 7;
  bool has_broadcast() const;
  void clear_broadcast();
  static const int kBroadcastFieldNumber = 7;
  private:
  const ::shardora::transport::protobuf::BroadcastParam& _internal_broadcast() const;
  public:
  const ::shardora::transport::protobuf::BroadcastParam& broadcast() const;
  ::shardora::transport::protobuf::BroadcastParam* release_broadcast();
  ::shardora::transport::protobuf::BroadcastParam* mutable_broadcast();
  void set_allocated_broadcast(::shardora::transport::protobuf::BroadcastParam* broadcast);

  // optional .shardora.network.protobuf.NetworkMessage network_proto = 10;
  bool has_network_proto() const;
  void clear_network_proto();
  static const int kNetworkProtoFieldNumber = 10;
  private:
  const ::shardora::network::protobuf::NetworkMessage& _internal_network_proto() const;
  public:
  const ::shardora::network::protobuf::NetworkMessage& network_proto() const;
  ::shardora::network::protobuf::NetworkMessage* release_network_proto();
  ::shardora::network::protobuf::NetworkMessage* mutable_network_proto();
  void set_allocated_network_proto(::shardora::network::protobuf::NetworkMessage* network_proto);

  // optional .shardora.dht.protobuf.DhtMessage dht_proto = 11;
  bool has_dht_proto() const;
  void clear_dht_proto();
  static const int kDhtProtoFieldNumber = 11;
  private:
  const ::shardora::dht::protobuf::DhtMessage& _internal_dht_proto() const;
  public:
  const ::shardora::dht::protobuf::DhtMessage& dht_proto() const;
  ::shardora::dht::protobuf::DhtMessage* release_dht_proto();
  ::shardora::dht::protobuf::DhtMessage* mutable_dht_proto();
  void set_allocated_dht_proto(::shardora::dht::protobuf::DhtMessage* dht_proto);

  // optional .shardora.bls.protobuf.BlsMessage bls_proto = 12;
  bool has_bls_proto() const;
  void clear_bls_proto();
  static const int kBlsProtoFieldNumber = 12;
  private:
  const ::shardora::bls::protobuf::BlsMessage& _internal_bls_proto() const;
  public:
  const ::shardora::bls::protobuf::BlsMessage& bls_proto() const;
  ::shardora::bls::protobuf::BlsMessage* release_bls_proto();
  ::shardora::bls::protobuf::BlsMessage* mutable_bls_proto();
  void set_allocated_bls_proto(::shardora::bls::protobuf::BlsMessage* bls_proto);

  // optional .shardora.pools.protobuf.TxMessage tx_proto = 13;
  bool has_tx_proto() const;
  void clear_tx_proto();
  static const int kTxProtoFieldNumber = 13;
  private:
  const ::shardora::pools::protobuf::TxMessage& _internal_tx_proto() const;
  public:
  const ::shardora::pools::protobuf::TxMessage& tx_proto() const;
  ::shardora::pools::protobuf::TxMessage* release_tx_proto();
  ::shardora::pools::protobuf::TxMessage* mutable_tx_proto();
  void set_allocated_tx_proto(::shardora::pools::protobuf::TxMessage* tx_proto);

  // optional .shardora.contract.protobuf.ContractMessage contract_proto = 14;
  bool has_contract_proto() const;
  void clear_contract_proto();
  static const int kContractProtoFieldNumber = 14;
  private:
  const ::shardora::contract::protobuf::ContractMessage& _internal_contract_proto() const;
  public:
  const ::shardora::contract::protobuf::ContractMessage& contract_proto() const;
  ::shardora::contract::protobuf::ContractMessage* release_contract_proto();
  ::shardora::contract::protobuf::ContractMessage* mutable_contract_proto();
  void set_allocated_contract_proto(::shardora::contract::protobuf::ContractMessage* contract_proto);

  // optional .shardora.elect.protobuf.ElectMessage elect_proto = 15;
  bool has_elect_proto() const;
  void clear_elect_proto();
  static const int kElectProtoFieldNumber = 15;
  private:
  const ::shardora::elect::protobuf::ElectMessage& _internal_elect_proto() const;
  public:
  const ::shardora::elect::protobuf::ElectMessage& elect_proto() const;
  ::shardora::elect::protobuf::ElectMessage* release_elect_proto();
  ::shardora::elect::protobuf::ElectMessage* mutable_elect_proto();
  void set_allocated_elect_proto(::shardora::elect::protobuf::ElectMessage* elect_proto);

  // optional .shardora.zbft.protobuf.ZbftMessage zbft = 16;
  bool has_zbft() const;
  void clear_zbft();
  static const int kZbftFieldNumber = 16;
  private:
  const ::shardora::zbft::protobuf::ZbftMessage& _internal_zbft() const;
  public:
  const ::shardora::zbft::protobuf::ZbftMessage& zbft() const;
  ::shardora::zbft::protobuf::ZbftMessage* release_zbft();
  ::shardora::zbft::protobuf::ZbftMessage* mutable_zbft();
  void set_allocated_zbft(::shardora::zbft::protobuf::ZbftMessage* zbft);

  // optional .shardora.block.protobuf.BlockMessage block_proto = 17;
  bool has_block_proto() const;
  void clear_block_proto();
  static const int kBlockProtoFieldNumber = 17;
  private:
  const ::shardora::block::protobuf::BlockMessage& _internal_block_proto() const;
  public:
  const ::shardora::block::protobuf::BlockMessage& block_proto() const;
  ::shardora::block::protobuf::BlockMessage* release_block_proto();
  ::shardora::block::protobuf::BlockMessage* mutable_block_proto();
  void set_allocated_block_proto(::shardora::block::protobuf::BlockMessage* block_proto);

  // optional .shardora.pools.protobuf.ToTxHeights to_tx_heights = 18;
  bool has_to_tx_heights() const;
  void clear_to_tx_heights();
  static const int kToTxHeightsFieldNumber = 18;
  private:
  const ::shardora::pools::protobuf::ToTxHeights& _internal_to_tx_heights() const;
  public:
  const ::shardora::pools::protobuf::ToTxHeights& to_tx_heights() const;
  ::shardora::pools::protobuf::ToTxHeights* release_to_tx_heights();
  ::shardora::pools::protobuf::ToTxHeights* mutable_to_tx_heights();
  void set_allocated_to_tx_heights(::shardora::pools::protobuf::ToTxHeights* to_tx_heights);

  // optional .shardora.sync.protobuf.SyncInfo sync = 19;
  bool has_sync() const;
  void clear_sync();
  static const int kSyncFieldNumber = 19;
  private:
  const ::shardora::sync::protobuf::SyncInfo& _internal_sync() const;
  public:
  const ::shardora::sync::protobuf::SyncInfo& sync() const;
  ::shardora::sync::protobuf::SyncInfo* release_sync();
  ::shardora::sync::protobuf::SyncInfo* mutable_sync();
  void set_allocated_sync(::shardora::sync::protobuf::SyncInfo* sync);

  // optional .shardora.sync.protobuf.SyncMessage sync_proto = 20;
  bool has_sync_proto() const;
  void clear_sync_proto();
  static const int kSyncProtoFieldNumber = 20;
  private:
  const ::shardora::sync::protobuf::SyncMessage& _internal_sync_proto() const;
  public:
  const ::shardora::sync::protobuf::SyncMessage& sync_proto() const;
  ::shardora::sync::protobuf::SyncMessage* release_sync_proto();
  ::shardora::sync::protobuf::SyncMessage* mutable_sync_proto();
  void set_allocated_sync_proto(::shardora::sync::protobuf::SyncMessage* sync_proto);

  // optional .shardora.vss.protobuf.VssMessage vss_proto = 21;
  bool has_vss_proto() const;
  void clear_vss_proto();
  static const int kVssProtoFieldNumber = 21;
  private:
  const ::shardora::vss::protobuf::VssMessage& _internal_vss_proto() const;
  public:
  const ::shardora::vss::protobuf::VssMessage& vss_proto() const;
  ::shardora::vss::protobuf::VssMessage* release_vss_proto();
  ::shardora::vss::protobuf::VssMessage* mutable_vss_proto();
  void set_allocated_vss_proto(::shardora::vss::protobuf::VssMessage* vss_proto);

  // optional .shardora.block.protobuf.CrossShardingTosMessage cross_tos = 22;
  bool has_cross_tos() const;
  void clear_cross_tos();
  static const int kCrossTosFieldNumber = 22;
  private:
  const ::shardora::block::protobuf::CrossShardingTosMessage& _internal_cross_tos() const;
  public:
  const ::shardora::block::protobuf::CrossShardingTosMessage& cross_tos() const;
  ::shardora::block::protobuf::CrossShardingTosMessage* release_cross_tos();
  ::shardora::block::protobuf::CrossShardingTosMessage* mutable_cross_tos();
  void set_allocated_cross_tos(::shardora::block::protobuf::CrossShardingTosMessage* cross_tos);

  // optional .shardora.block.protobuf.CrossShardingStatisticMessage cross_statistic = 23;
  bool has_cross_statistic() const;
  void clear_cross_statistic();
  static const int kCrossStatisticFieldNumber = 23;
  private:
  const ::shardora::block::protobuf::CrossShardingStatisticMessage& _internal_cross_statistic() const;
  public:
  const ::shardora::block::protobuf::CrossShardingStatisticMessage& cross_statistic() const;
  ::shardora::block::protobuf::CrossShardingStatisticMessage* release_cross_statistic();
  ::shardora::block::protobuf::CrossShardingStatisticMessage* mutable_cross_statistic();
  void set_allocated_cross_statistic(::shardora::block::protobuf::CrossShardingStatisticMessage* cross_statistic);

  // optional .shardora.block.protobuf.ElectBlockMessage elect_block = 24;
  bool has_elect_block() const;
  void clear_elect_block();
  static const int kElectBlockFieldNumber = 24;
  private:
  const ::shardora::block::protobuf::ElectBlockMessage& _internal_elect_block() const;
  public:
  const ::shardora::block::protobuf::ElectBlockMessage& elect_block() const;
  ::shardora::block::protobuf::ElectBlockMessage* release_elect_block();
  ::shardora::block::protobuf::ElectBlockMessage* mutable_elect_block();
  void set_allocated_elect_block(::shardora::block::protobuf::ElectBlockMessage* elect_block);

  // optional .shardora.init.protobuf.InitMessage init_proto = 25;
  bool has_init_proto() const;
  void clear_init_proto();
  static const int kInitProtoFieldNumber = 25;
  private:
  const ::shardora::init::protobuf::InitMessage& _internal_init_proto() const;
  public:
  const ::shardora::init::protobuf::InitMessage& init_proto() const;
  ::shardora::init::protobuf::InitMessage* release_init_proto();
  ::shardora::init::protobuf::InitMessage* mutable_init_proto();
  void set_allocated_init_proto(::shardora::init::protobuf::InitMessage* init_proto);

  // optional .shardora.pools.protobuf.SyncPoolsMaxHeight sync_heights = 26;
  bool has_sync_heights() const;
  void clear_sync_heights();
  static const int kSyncHeightsFieldNumber = 26;
  private:
  const ::shardora::pools::protobuf::SyncPoolsMaxHeight& _internal_sync_heights() const;
  public:
  const ::shardora::pools::protobuf::SyncPoolsMaxHeight& sync_heights() const;
  ::shardora::pools::protobuf::SyncPoolsMaxHeight* release_sync_heights();
  ::shardora::pools::protobuf::SyncPoolsMaxHeight* mutable_sync_heights();
  void set_allocated_sync_heights(::shardora::pools::protobuf::SyncPoolsMaxHeight* sync_heights);

  // optional .shardora.block.protobuf.Block block = 27;
  bool has_block() const;
  void clear_block();
  static const int kBlockFieldNumber = 27;
  private:
  const ::shardora::block::protobuf::Block& _internal_block() const;
  public:
  const ::shardora::block::protobuf::Block& block() const;
  ::shardora::block::protobuf::Block* release_block();
  ::shardora::block::protobuf::Block* mutable_block();
  void set_allocated_block(::shardora::block::protobuf::Block* block);

  // optional .shardora.c2c.protobuf.C2cMessage c2c = 30;
  bool has_c2c() const;
  void clear_c2c();
  static const int kC2CFieldNumber = 30;
  private:
  const ::shardora::c2c::protobuf::C2cMessage& _internal_c2c() const;
  public:
  const ::shardora::c2c::protobuf::C2cMessage& c2c() const;
  ::shardora::c2c::protobuf::C2cMessage* release_c2c();
  ::shardora::c2c::protobuf::C2cMessage* mutable_c2c();
  void set_allocated_c2c(::shardora::c2c::protobuf::C2cMessage* c2c);

  // optional .shardora.view_block.protobuf.ViewBlockMessage view_block_proto = 32;
  bool has_view_block_proto() const;
  void clear_view_block_proto();
  static const int kViewBlockProtoFieldNumber = 32;
  private:
  const ::shardora::view_block::protobuf::ViewBlockMessage& _internal_view_block_proto() const;
  public:
  const ::shardora::view_block::protobuf::ViewBlockMessage& view_block_proto() const;
  ::shardora::view_block::protobuf::ViewBlockMessage* release_view_block_proto();
  ::shardora::view_block::protobuf::ViewBlockMessage* mutable_view_block_proto();
  void set_allocated_view_block_proto(::shardora::view_block::protobuf::ViewBlockMessage* view_block_proto);

  // optional int32 src_sharding_id = 1;
  bool has_src_sharding_id() const;
  void clear_src_sharding_id();
  static const int kSrcShardingIdFieldNumber = 1;
  ::google::protobuf::int32 src_sharding_id() const;
  void set_src_sharding_id(::google::protobuf::int32 value);

  // optional uint32 hop_count = 3 [default = 0];
  bool has_hop_count() const;
  void clear_hop_count();
  static const int kHopCountFieldNumber = 3;
  ::google::protobuf::uint32 hop_count() const;
  void set_hop_count(::google::protobuf::uint32 value);

  // optional uint64 hash64 = 5;
  bool has_hash64() const;
  void clear_hash64();
  static const int kHash64FieldNumber = 5;
  ::google::protobuf::uint64 hash64() const;
  void set_hash64(::google::protobuf::uint64 value);

  // optional uint32 type = 6;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional int32 version = 9 [default = 0];
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 9;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // optional uint32 from_public_port = 29;
  bool has_from_public_port() const;
  void clear_from_public_port();
  static const int kFromPublicPortFieldNumber = 29;
  ::google::protobuf::uint32 from_public_port() const;
  void set_from_public_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shardora.transport.protobuf.Header)
 private:
  void set_has_src_sharding_id();
  void clear_has_src_sharding_id();
  void set_has_des_dht_key();
  void clear_has_des_dht_key();
  void set_has_hop_count();
  void clear_has_hop_count();
  void set_has_debug();
  void clear_has_debug();
  void set_has_hash64();
  void clear_has_hash64();
  void set_has_type();
  void clear_has_type();
  void set_has_broadcast();
  void clear_has_broadcast();
  void set_has_sign();
  void clear_has_sign();
  void set_has_version();
  void clear_has_version();
  void set_has_network_proto();
  void clear_has_network_proto();
  void set_has_dht_proto();
  void clear_has_dht_proto();
  void set_has_bls_proto();
  void clear_has_bls_proto();
  void set_has_tx_proto();
  void clear_has_tx_proto();
  void set_has_contract_proto();
  void clear_has_contract_proto();
  void set_has_elect_proto();
  void clear_has_elect_proto();
  void set_has_zbft();
  void clear_has_zbft();
  void set_has_block_proto();
  void clear_has_block_proto();
  void set_has_to_tx_heights();
  void clear_has_to_tx_heights();
  void set_has_sync();
  void clear_has_sync();
  void set_has_sync_proto();
  void clear_has_sync_proto();
  void set_has_vss_proto();
  void clear_has_vss_proto();
  void set_has_cross_tos();
  void clear_has_cross_tos();
  void set_has_cross_statistic();
  void clear_has_cross_statistic();
  void set_has_elect_block();
  void clear_has_elect_block();
  void set_has_init_proto();
  void clear_has_init_proto();
  void set_has_sync_heights();
  void clear_has_sync_heights();
  void set_has_block();
  void clear_has_block();
  void set_has_from_public_port();
  void clear_has_from_public_port();
  void set_has_c2c();
  void clear_has_c2c();
  void set_has_pubkey();
  void clear_has_pubkey();
  void set_has_view_block_proto();
  void clear_has_view_block_proto();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr des_dht_key_;
  ::google::protobuf::internal::ArenaStringPtr debug_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  ::google::protobuf::internal::ArenaStringPtr pubkey_;
  ::shardora::transport::protobuf::BroadcastParam* broadcast_;
  ::shardora::network::protobuf::NetworkMessage* network_proto_;
  ::shardora::dht::protobuf::DhtMessage* dht_proto_;
  ::shardora::bls::protobuf::BlsMessage* bls_proto_;
  ::shardora::pools::protobuf::TxMessage* tx_proto_;
  ::shardora::contract::protobuf::ContractMessage* contract_proto_;
  ::shardora::elect::protobuf::ElectMessage* elect_proto_;
  ::shardora::zbft::protobuf::ZbftMessage* zbft_;
  ::shardora::block::protobuf::BlockMessage* block_proto_;
  ::shardora::pools::protobuf::ToTxHeights* to_tx_heights_;
  ::shardora::sync::protobuf::SyncInfo* sync_;
  ::shardora::sync::protobuf::SyncMessage* sync_proto_;
  ::shardora::vss::protobuf::VssMessage* vss_proto_;
  ::shardora::block::protobuf::CrossShardingTosMessage* cross_tos_;
  ::shardora::block::protobuf::CrossShardingStatisticMessage* cross_statistic_;
  ::shardora::block::protobuf::ElectBlockMessage* elect_block_;
  ::shardora::init::protobuf::InitMessage* init_proto_;
  ::shardora::pools::protobuf::SyncPoolsMaxHeight* sync_heights_;
  ::shardora::block::protobuf::Block* block_;
  ::shardora::c2c::protobuf::C2cMessage* c2c_;
  ::shardora::view_block::protobuf::ViewBlockMessage* view_block_proto_;
  ::google::protobuf::int32 src_sharding_id_;
  ::google::protobuf::uint32 hop_count_;
  ::google::protobuf::uint64 hash64_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::uint32 from_public_port_;
  friend struct ::protobuf_protos_2ftransport_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BroadcastParam

// optional uint32 type = 1;
inline bool BroadcastParam::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastParam::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastParam::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastParam::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BroadcastParam::type() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.type)
  return type_;
}
inline void BroadcastParam::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.type)
}

// optional uint32 neighbor_count = 2 [default = 7];
inline bool BroadcastParam::has_neighbor_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BroadcastParam::set_has_neighbor_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BroadcastParam::clear_has_neighbor_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BroadcastParam::clear_neighbor_count() {
  neighbor_count_ = 7u;
  clear_has_neighbor_count();
}
inline ::google::protobuf::uint32 BroadcastParam::neighbor_count() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.neighbor_count)
  return neighbor_count_;
}
inline void BroadcastParam::set_neighbor_count(::google::protobuf::uint32 value) {
  set_has_neighbor_count();
  neighbor_count_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.neighbor_count)
}

// optional uint32 stop_times = 3;
inline bool BroadcastParam::has_stop_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastParam::set_has_stop_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BroadcastParam::clear_has_stop_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BroadcastParam::clear_stop_times() {
  stop_times_ = 0u;
  clear_has_stop_times();
}
inline ::google::protobuf::uint32 BroadcastParam::stop_times() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.stop_times)
  return stop_times_;
}
inline void BroadcastParam::set_stop_times(::google::protobuf::uint32 value) {
  set_has_stop_times();
  stop_times_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.stop_times)
}

// optional uint32 hop_limit = 4 [default = 10];
inline bool BroadcastParam::has_hop_limit() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BroadcastParam::set_has_hop_limit() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BroadcastParam::clear_has_hop_limit() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BroadcastParam::clear_hop_limit() {
  hop_limit_ = 10u;
  clear_has_hop_limit();
}
inline ::google::protobuf::uint32 BroadcastParam::hop_limit() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.hop_limit)
  return hop_limit_;
}
inline void BroadcastParam::set_hop_limit(::google::protobuf::uint32 value) {
  set_has_hop_limit();
  hop_limit_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.hop_limit)
}

// optional uint64 layer_left = 5;
inline bool BroadcastParam::has_layer_left() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BroadcastParam::set_has_layer_left() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BroadcastParam::clear_has_layer_left() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BroadcastParam::clear_layer_left() {
  layer_left_ = GOOGLE_ULONGLONG(0);
  clear_has_layer_left();
}
inline ::google::protobuf::uint64 BroadcastParam::layer_left() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.layer_left)
  return layer_left_;
}
inline void BroadcastParam::set_layer_left(::google::protobuf::uint64 value) {
  set_has_layer_left();
  layer_left_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.layer_left)
}

// optional uint64 layer_right = 6;
inline bool BroadcastParam::has_layer_right() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BroadcastParam::set_has_layer_right() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BroadcastParam::clear_has_layer_right() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BroadcastParam::clear_layer_right() {
  layer_right_ = GOOGLE_ULONGLONG(0);
  clear_has_layer_right();
}
inline ::google::protobuf::uint64 BroadcastParam::layer_right() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.layer_right)
  return layer_right_;
}
inline void BroadcastParam::set_layer_right(::google::protobuf::uint64 value) {
  set_has_layer_right();
  layer_right_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.layer_right)
}

// optional float overlap = 7;
inline bool BroadcastParam::has_overlap() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BroadcastParam::set_has_overlap() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BroadcastParam::clear_has_overlap() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BroadcastParam::clear_overlap() {
  overlap_ = 0;
  clear_has_overlap();
}
inline float BroadcastParam::overlap() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.overlap)
  return overlap_;
}
inline void BroadcastParam::set_overlap(float value) {
  set_has_overlap();
  overlap_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.overlap)
}

// optional uint32 hop_to_layer = 8 [default = 1];
inline bool BroadcastParam::has_hop_to_layer() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BroadcastParam::set_has_hop_to_layer() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BroadcastParam::clear_has_hop_to_layer() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BroadcastParam::clear_hop_to_layer() {
  hop_to_layer_ = 1u;
  clear_has_hop_to_layer();
}
inline ::google::protobuf::uint32 BroadcastParam::hop_to_layer() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.hop_to_layer)
  return hop_to_layer_;
}
inline void BroadcastParam::set_hop_to_layer(::google::protobuf::uint32 value) {
  set_has_hop_to_layer();
  hop_to_layer_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.hop_to_layer)
}

// optional bytes header = 9;
inline bool BroadcastParam::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastParam::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastParam::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastParam::clear_header() {
  header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_header();
}
inline const ::std::string& BroadcastParam::header() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.header)
  return header_.GetNoArena();
}
inline void BroadcastParam::set_header(const ::std::string& value) {
  set_has_header();
  header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.header)
}
#if LANG_CXX11
inline void BroadcastParam::set_header(::std::string&& value) {
  set_has_header();
  header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shardora.transport.protobuf.BroadcastParam.header)
}
#endif
inline void BroadcastParam::set_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_header();
  header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shardora.transport.protobuf.BroadcastParam.header)
}
inline void BroadcastParam::set_header(const void* value, size_t size) {
  set_has_header();
  header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shardora.transport.protobuf.BroadcastParam.header)
}
inline ::std::string* BroadcastParam::mutable_header() {
  set_has_header();
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.BroadcastParam.header)
  return header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BroadcastParam::release_header() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.BroadcastParam.header)
  if (!has_header()) {
    return NULL;
  }
  clear_has_header();
  return header_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastParam::set_allocated_header(::std::string* header) {
  if (header != NULL) {
    set_has_header();
  } else {
    clear_has_header();
  }
  header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header);
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.BroadcastParam.header)
}

// optional bytes body = 10;
inline bool BroadcastParam::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastParam::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastParam::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastParam::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
inline const ::std::string& BroadcastParam::body() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.body)
  return body_.GetNoArena();
}
inline void BroadcastParam::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.body)
}
#if LANG_CXX11
inline void BroadcastParam::set_body(::std::string&& value) {
  set_has_body();
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shardora.transport.protobuf.BroadcastParam.body)
}
#endif
inline void BroadcastParam::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shardora.transport.protobuf.BroadcastParam.body)
}
inline void BroadcastParam::set_body(const void* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shardora.transport.protobuf.BroadcastParam.body)
}
inline ::std::string* BroadcastParam::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.BroadcastParam.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BroadcastParam::release_body() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.BroadcastParam.body)
  if (!has_body()) {
    return NULL;
  }
  clear_has_body();
  return body_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastParam::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.BroadcastParam.body)
}

// optional bool net_crossed = 11;
inline bool BroadcastParam::has_net_crossed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BroadcastParam::set_has_net_crossed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BroadcastParam::clear_has_net_crossed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BroadcastParam::clear_net_crossed() {
  net_crossed_ = false;
  clear_has_net_crossed();
}
inline bool BroadcastParam::net_crossed() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.net_crossed)
  return net_crossed_;
}
inline void BroadcastParam::set_net_crossed(bool value) {
  set_has_net_crossed();
  net_crossed_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.net_crossed)
}

// repeated uint64 bloomfilter = 12;
inline int BroadcastParam::bloomfilter_size() const {
  return bloomfilter_.size();
}
inline void BroadcastParam::clear_bloomfilter() {
  bloomfilter_.Clear();
}
inline ::google::protobuf::uint64 BroadcastParam::bloomfilter(int index) const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.bloomfilter)
  return bloomfilter_.Get(index);
}
inline void BroadcastParam::set_bloomfilter(int index, ::google::protobuf::uint64 value) {
  bloomfilter_.Set(index, value);
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.bloomfilter)
}
inline void BroadcastParam::add_bloomfilter(::google::protobuf::uint64 value) {
  bloomfilter_.Add(value);
  // @@protoc_insertion_point(field_add:shardora.transport.protobuf.BroadcastParam.bloomfilter)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BroadcastParam::bloomfilter() const {
  // @@protoc_insertion_point(field_list:shardora.transport.protobuf.BroadcastParam.bloomfilter)
  return bloomfilter_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BroadcastParam::mutable_bloomfilter() {
  // @@protoc_insertion_point(field_mutable_list:shardora.transport.protobuf.BroadcastParam.bloomfilter)
  return &bloomfilter_;
}

// optional float evil_rate = 13 [default = 0];
inline bool BroadcastParam::has_evil_rate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BroadcastParam::set_has_evil_rate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BroadcastParam::clear_has_evil_rate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BroadcastParam::clear_evil_rate() {
  evil_rate_ = 0;
  clear_has_evil_rate();
}
inline float BroadcastParam::evil_rate() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.evil_rate)
  return evil_rate_;
}
inline void BroadcastParam::set_evil_rate(float value) {
  set_has_evil_rate();
  evil_rate_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.evil_rate)
}

// optional uint32 ign_bloomfilter_hop = 14 [default = 1];
inline bool BroadcastParam::has_ign_bloomfilter_hop() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BroadcastParam::set_has_ign_bloomfilter_hop() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BroadcastParam::clear_has_ign_bloomfilter_hop() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BroadcastParam::clear_ign_bloomfilter_hop() {
  ign_bloomfilter_hop_ = 1u;
  clear_has_ign_bloomfilter_hop();
}
inline ::google::protobuf::uint32 BroadcastParam::ign_bloomfilter_hop() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.BroadcastParam.ign_bloomfilter_hop)
  return ign_bloomfilter_hop_;
}
inline void BroadcastParam::set_ign_bloomfilter_hop(::google::protobuf::uint32 value) {
  set_has_ign_bloomfilter_hop();
  ign_bloomfilter_hop_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.BroadcastParam.ign_bloomfilter_hop)
}

// -------------------------------------------------------------------

// Header

// optional int32 src_sharding_id = 1;
inline bool Header::has_src_sharding_id() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Header::set_has_src_sharding_id() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Header::clear_has_src_sharding_id() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Header::clear_src_sharding_id() {
  src_sharding_id_ = 0;
  clear_has_src_sharding_id();
}
inline ::google::protobuf::int32 Header::src_sharding_id() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.src_sharding_id)
  return src_sharding_id_;
}
inline void Header::set_src_sharding_id(::google::protobuf::int32 value) {
  set_has_src_sharding_id();
  src_sharding_id_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.Header.src_sharding_id)
}

// optional bytes des_dht_key = 2;
inline bool Header::has_des_dht_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Header::set_has_des_dht_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Header::clear_has_des_dht_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Header::clear_des_dht_key() {
  des_dht_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_des_dht_key();
}
inline const ::std::string& Header::des_dht_key() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.des_dht_key)
  return des_dht_key_.GetNoArena();
}
inline void Header::set_des_dht_key(const ::std::string& value) {
  set_has_des_dht_key();
  des_dht_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.Header.des_dht_key)
}
#if LANG_CXX11
inline void Header::set_des_dht_key(::std::string&& value) {
  set_has_des_dht_key();
  des_dht_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shardora.transport.protobuf.Header.des_dht_key)
}
#endif
inline void Header::set_des_dht_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_des_dht_key();
  des_dht_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shardora.transport.protobuf.Header.des_dht_key)
}
inline void Header::set_des_dht_key(const void* value, size_t size) {
  set_has_des_dht_key();
  des_dht_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shardora.transport.protobuf.Header.des_dht_key)
}
inline ::std::string* Header::mutable_des_dht_key() {
  set_has_des_dht_key();
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.des_dht_key)
  return des_dht_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Header::release_des_dht_key() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.des_dht_key)
  if (!has_des_dht_key()) {
    return NULL;
  }
  clear_has_des_dht_key();
  return des_dht_key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_allocated_des_dht_key(::std::string* des_dht_key) {
  if (des_dht_key != NULL) {
    set_has_des_dht_key();
  } else {
    clear_has_des_dht_key();
  }
  des_dht_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), des_dht_key);
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.des_dht_key)
}

// optional uint32 hop_count = 3 [default = 0];
inline bool Header::has_hop_count() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Header::set_has_hop_count() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Header::clear_has_hop_count() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Header::clear_hop_count() {
  hop_count_ = 0u;
  clear_has_hop_count();
}
inline ::google::protobuf::uint32 Header::hop_count() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.hop_count)
  return hop_count_;
}
inline void Header::set_hop_count(::google::protobuf::uint32 value) {
  set_has_hop_count();
  hop_count_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.Header.hop_count)
}

// optional bytes debug = 4;
inline bool Header::has_debug() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Header::set_has_debug() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Header::clear_has_debug() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Header::clear_debug() {
  debug_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_debug();
}
inline const ::std::string& Header::debug() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.debug)
  return debug_.GetNoArena();
}
inline void Header::set_debug(const ::std::string& value) {
  set_has_debug();
  debug_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.Header.debug)
}
#if LANG_CXX11
inline void Header::set_debug(::std::string&& value) {
  set_has_debug();
  debug_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shardora.transport.protobuf.Header.debug)
}
#endif
inline void Header::set_debug(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_debug();
  debug_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shardora.transport.protobuf.Header.debug)
}
inline void Header::set_debug(const void* value, size_t size) {
  set_has_debug();
  debug_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shardora.transport.protobuf.Header.debug)
}
inline ::std::string* Header::mutable_debug() {
  set_has_debug();
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.debug)
  return debug_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Header::release_debug() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.debug)
  if (!has_debug()) {
    return NULL;
  }
  clear_has_debug();
  return debug_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_allocated_debug(::std::string* debug) {
  if (debug != NULL) {
    set_has_debug();
  } else {
    clear_has_debug();
  }
  debug_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debug);
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.debug)
}

// optional uint64 hash64 = 5;
inline bool Header::has_hash64() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Header::set_has_hash64() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Header::clear_has_hash64() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Header::clear_hash64() {
  hash64_ = GOOGLE_ULONGLONG(0);
  clear_has_hash64();
}
inline ::google::protobuf::uint64 Header::hash64() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.hash64)
  return hash64_;
}
inline void Header::set_hash64(::google::protobuf::uint64 value) {
  set_has_hash64();
  hash64_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.Header.hash64)
}

// optional uint32 type = 6;
inline bool Header::has_type() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Header::set_has_type() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Header::clear_has_type() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Header::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Header::type() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.type)
  return type_;
}
inline void Header::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.Header.type)
}

// optional .shardora.transport.protobuf.BroadcastParam broadcast = 7;
inline bool Header::has_broadcast() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Header::set_has_broadcast() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Header::clear_has_broadcast() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Header::clear_broadcast() {
  if (broadcast_ != NULL) broadcast_->Clear();
  clear_has_broadcast();
}
inline const ::shardora::transport::protobuf::BroadcastParam& Header::_internal_broadcast() const {
  return *broadcast_;
}
inline const ::shardora::transport::protobuf::BroadcastParam& Header::broadcast() const {
  const ::shardora::transport::protobuf::BroadcastParam* p = broadcast_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.broadcast)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::transport::protobuf::BroadcastParam*>(
      &::shardora::transport::protobuf::_BroadcastParam_default_instance_);
}
inline ::shardora::transport::protobuf::BroadcastParam* Header::release_broadcast() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.broadcast)
  clear_has_broadcast();
  ::shardora::transport::protobuf::BroadcastParam* temp = broadcast_;
  broadcast_ = NULL;
  return temp;
}
inline ::shardora::transport::protobuf::BroadcastParam* Header::mutable_broadcast() {
  set_has_broadcast();
  if (broadcast_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::transport::protobuf::BroadcastParam>(GetArenaNoVirtual());
    broadcast_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.broadcast)
  return broadcast_;
}
inline void Header::set_allocated_broadcast(::shardora::transport::protobuf::BroadcastParam* broadcast) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete broadcast_;
  }
  if (broadcast) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      broadcast = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, broadcast, submessage_arena);
    }
    set_has_broadcast();
  } else {
    clear_has_broadcast();
  }
  broadcast_ = broadcast;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.broadcast)
}

// optional bytes sign = 8;
inline bool Header::has_sign() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Header::set_has_sign() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Header::clear_has_sign() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Header::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sign();
}
inline const ::std::string& Header::sign() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.sign)
  return sign_.GetNoArena();
}
inline void Header::set_sign(const ::std::string& value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.Header.sign)
}
#if LANG_CXX11
inline void Header::set_sign(::std::string&& value) {
  set_has_sign();
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shardora.transport.protobuf.Header.sign)
}
#endif
inline void Header::set_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shardora.transport.protobuf.Header.sign)
}
inline void Header::set_sign(const void* value, size_t size) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shardora.transport.protobuf.Header.sign)
}
inline ::std::string* Header::mutable_sign() {
  set_has_sign();
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Header::release_sign() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.sign)
  if (!has_sign()) {
    return NULL;
  }
  clear_has_sign();
  return sign_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    set_has_sign();
  } else {
    clear_has_sign();
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.sign)
}

// optional int32 version = 9 [default = 0];
inline bool Header::has_version() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Header::set_has_version() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Header::clear_has_version() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Header::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 Header::version() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.version)
  return version_;
}
inline void Header::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.Header.version)
}

// optional .shardora.network.protobuf.NetworkMessage network_proto = 10;
inline bool Header::has_network_proto() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Header::set_has_network_proto() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Header::clear_has_network_proto() {
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::shardora::network::protobuf::NetworkMessage& Header::_internal_network_proto() const {
  return *network_proto_;
}
inline const ::shardora::network::protobuf::NetworkMessage& Header::network_proto() const {
  const ::shardora::network::protobuf::NetworkMessage* p = network_proto_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.network_proto)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::network::protobuf::NetworkMessage*>(
      &::shardora::network::protobuf::_NetworkMessage_default_instance_);
}
inline ::shardora::network::protobuf::NetworkMessage* Header::release_network_proto() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.network_proto)
  clear_has_network_proto();
  ::shardora::network::protobuf::NetworkMessage* temp = network_proto_;
  network_proto_ = NULL;
  return temp;
}
inline ::shardora::network::protobuf::NetworkMessage* Header::mutable_network_proto() {
  set_has_network_proto();
  if (network_proto_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::network::protobuf::NetworkMessage>(GetArenaNoVirtual());
    network_proto_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.network_proto)
  return network_proto_;
}
inline void Header::set_allocated_network_proto(::shardora::network::protobuf::NetworkMessage* network_proto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(network_proto_);
  }
  if (network_proto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      network_proto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, network_proto, submessage_arena);
    }
    set_has_network_proto();
  } else {
    clear_has_network_proto();
  }
  network_proto_ = network_proto;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.network_proto)
}

// optional .shardora.dht.protobuf.DhtMessage dht_proto = 11;
inline bool Header::has_dht_proto() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Header::set_has_dht_proto() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Header::clear_has_dht_proto() {
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::shardora::dht::protobuf::DhtMessage& Header::_internal_dht_proto() const {
  return *dht_proto_;
}
inline const ::shardora::dht::protobuf::DhtMessage& Header::dht_proto() const {
  const ::shardora::dht::protobuf::DhtMessage* p = dht_proto_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.dht_proto)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::dht::protobuf::DhtMessage*>(
      &::shardora::dht::protobuf::_DhtMessage_default_instance_);
}
inline ::shardora::dht::protobuf::DhtMessage* Header::release_dht_proto() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.dht_proto)
  clear_has_dht_proto();
  ::shardora::dht::protobuf::DhtMessage* temp = dht_proto_;
  dht_proto_ = NULL;
  return temp;
}
inline ::shardora::dht::protobuf::DhtMessage* Header::mutable_dht_proto() {
  set_has_dht_proto();
  if (dht_proto_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::dht::protobuf::DhtMessage>(GetArenaNoVirtual());
    dht_proto_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.dht_proto)
  return dht_proto_;
}
inline void Header::set_allocated_dht_proto(::shardora::dht::protobuf::DhtMessage* dht_proto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dht_proto_);
  }
  if (dht_proto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dht_proto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dht_proto, submessage_arena);
    }
    set_has_dht_proto();
  } else {
    clear_has_dht_proto();
  }
  dht_proto_ = dht_proto;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.dht_proto)
}

// optional .shardora.bls.protobuf.BlsMessage bls_proto = 12;
inline bool Header::has_bls_proto() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Header::set_has_bls_proto() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Header::clear_has_bls_proto() {
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::shardora::bls::protobuf::BlsMessage& Header::_internal_bls_proto() const {
  return *bls_proto_;
}
inline const ::shardora::bls::protobuf::BlsMessage& Header::bls_proto() const {
  const ::shardora::bls::protobuf::BlsMessage* p = bls_proto_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.bls_proto)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::bls::protobuf::BlsMessage*>(
      &::shardora::bls::protobuf::_BlsMessage_default_instance_);
}
inline ::shardora::bls::protobuf::BlsMessage* Header::release_bls_proto() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.bls_proto)
  clear_has_bls_proto();
  ::shardora::bls::protobuf::BlsMessage* temp = bls_proto_;
  bls_proto_ = NULL;
  return temp;
}
inline ::shardora::bls::protobuf::BlsMessage* Header::mutable_bls_proto() {
  set_has_bls_proto();
  if (bls_proto_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::bls::protobuf::BlsMessage>(GetArenaNoVirtual());
    bls_proto_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.bls_proto)
  return bls_proto_;
}
inline void Header::set_allocated_bls_proto(::shardora::bls::protobuf::BlsMessage* bls_proto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bls_proto_);
  }
  if (bls_proto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bls_proto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bls_proto, submessage_arena);
    }
    set_has_bls_proto();
  } else {
    clear_has_bls_proto();
  }
  bls_proto_ = bls_proto;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.bls_proto)
}

// optional .shardora.pools.protobuf.TxMessage tx_proto = 13;
inline bool Header::has_tx_proto() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Header::set_has_tx_proto() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Header::clear_has_tx_proto() {
  _has_bits_[0] &= ~0x00000100u;
}
inline const ::shardora::pools::protobuf::TxMessage& Header::_internal_tx_proto() const {
  return *tx_proto_;
}
inline const ::shardora::pools::protobuf::TxMessage& Header::tx_proto() const {
  const ::shardora::pools::protobuf::TxMessage* p = tx_proto_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.tx_proto)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::pools::protobuf::TxMessage*>(
      &::shardora::pools::protobuf::_TxMessage_default_instance_);
}
inline ::shardora::pools::protobuf::TxMessage* Header::release_tx_proto() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.tx_proto)
  clear_has_tx_proto();
  ::shardora::pools::protobuf::TxMessage* temp = tx_proto_;
  tx_proto_ = NULL;
  return temp;
}
inline ::shardora::pools::protobuf::TxMessage* Header::mutable_tx_proto() {
  set_has_tx_proto();
  if (tx_proto_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::pools::protobuf::TxMessage>(GetArenaNoVirtual());
    tx_proto_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.tx_proto)
  return tx_proto_;
}
inline void Header::set_allocated_tx_proto(::shardora::pools::protobuf::TxMessage* tx_proto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_proto_);
  }
  if (tx_proto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_proto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_proto, submessage_arena);
    }
    set_has_tx_proto();
  } else {
    clear_has_tx_proto();
  }
  tx_proto_ = tx_proto;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.tx_proto)
}

// optional .shardora.contract.protobuf.ContractMessage contract_proto = 14;
inline bool Header::has_contract_proto() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Header::set_has_contract_proto() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Header::clear_has_contract_proto() {
  _has_bits_[0] &= ~0x00000200u;
}
inline const ::shardora::contract::protobuf::ContractMessage& Header::_internal_contract_proto() const {
  return *contract_proto_;
}
inline const ::shardora::contract::protobuf::ContractMessage& Header::contract_proto() const {
  const ::shardora::contract::protobuf::ContractMessage* p = contract_proto_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.contract_proto)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::contract::protobuf::ContractMessage*>(
      &::shardora::contract::protobuf::_ContractMessage_default_instance_);
}
inline ::shardora::contract::protobuf::ContractMessage* Header::release_contract_proto() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.contract_proto)
  clear_has_contract_proto();
  ::shardora::contract::protobuf::ContractMessage* temp = contract_proto_;
  contract_proto_ = NULL;
  return temp;
}
inline ::shardora::contract::protobuf::ContractMessage* Header::mutable_contract_proto() {
  set_has_contract_proto();
  if (contract_proto_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::contract::protobuf::ContractMessage>(GetArenaNoVirtual());
    contract_proto_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.contract_proto)
  return contract_proto_;
}
inline void Header::set_allocated_contract_proto(::shardora::contract::protobuf::ContractMessage* contract_proto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(contract_proto_);
  }
  if (contract_proto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      contract_proto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, contract_proto, submessage_arena);
    }
    set_has_contract_proto();
  } else {
    clear_has_contract_proto();
  }
  contract_proto_ = contract_proto;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.contract_proto)
}

// optional .shardora.elect.protobuf.ElectMessage elect_proto = 15;
inline bool Header::has_elect_proto() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Header::set_has_elect_proto() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Header::clear_has_elect_proto() {
  _has_bits_[0] &= ~0x00000400u;
}
inline const ::shardora::elect::protobuf::ElectMessage& Header::_internal_elect_proto() const {
  return *elect_proto_;
}
inline const ::shardora::elect::protobuf::ElectMessage& Header::elect_proto() const {
  const ::shardora::elect::protobuf::ElectMessage* p = elect_proto_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.elect_proto)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::elect::protobuf::ElectMessage*>(
      &::shardora::elect::protobuf::_ElectMessage_default_instance_);
}
inline ::shardora::elect::protobuf::ElectMessage* Header::release_elect_proto() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.elect_proto)
  clear_has_elect_proto();
  ::shardora::elect::protobuf::ElectMessage* temp = elect_proto_;
  elect_proto_ = NULL;
  return temp;
}
inline ::shardora::elect::protobuf::ElectMessage* Header::mutable_elect_proto() {
  set_has_elect_proto();
  if (elect_proto_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::elect::protobuf::ElectMessage>(GetArenaNoVirtual());
    elect_proto_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.elect_proto)
  return elect_proto_;
}
inline void Header::set_allocated_elect_proto(::shardora::elect::protobuf::ElectMessage* elect_proto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(elect_proto_);
  }
  if (elect_proto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      elect_proto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, elect_proto, submessage_arena);
    }
    set_has_elect_proto();
  } else {
    clear_has_elect_proto();
  }
  elect_proto_ = elect_proto;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.elect_proto)
}

// optional .shardora.zbft.protobuf.ZbftMessage zbft = 16;
inline bool Header::has_zbft() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Header::set_has_zbft() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Header::clear_has_zbft() {
  _has_bits_[0] &= ~0x00000800u;
}
inline const ::shardora::zbft::protobuf::ZbftMessage& Header::_internal_zbft() const {
  return *zbft_;
}
inline const ::shardora::zbft::protobuf::ZbftMessage& Header::zbft() const {
  const ::shardora::zbft::protobuf::ZbftMessage* p = zbft_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.zbft)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::zbft::protobuf::ZbftMessage*>(
      &::shardora::zbft::protobuf::_ZbftMessage_default_instance_);
}
inline ::shardora::zbft::protobuf::ZbftMessage* Header::release_zbft() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.zbft)
  clear_has_zbft();
  ::shardora::zbft::protobuf::ZbftMessage* temp = zbft_;
  zbft_ = NULL;
  return temp;
}
inline ::shardora::zbft::protobuf::ZbftMessage* Header::mutable_zbft() {
  set_has_zbft();
  if (zbft_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::zbft::protobuf::ZbftMessage>(GetArenaNoVirtual());
    zbft_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.zbft)
  return zbft_;
}
inline void Header::set_allocated_zbft(::shardora::zbft::protobuf::ZbftMessage* zbft) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(zbft_);
  }
  if (zbft) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      zbft = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, zbft, submessage_arena);
    }
    set_has_zbft();
  } else {
    clear_has_zbft();
  }
  zbft_ = zbft;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.zbft)
}

// optional .shardora.block.protobuf.BlockMessage block_proto = 17;
inline bool Header::has_block_proto() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Header::set_has_block_proto() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Header::clear_has_block_proto() {
  _has_bits_[0] &= ~0x00001000u;
}
inline const ::shardora::block::protobuf::BlockMessage& Header::_internal_block_proto() const {
  return *block_proto_;
}
inline const ::shardora::block::protobuf::BlockMessage& Header::block_proto() const {
  const ::shardora::block::protobuf::BlockMessage* p = block_proto_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.block_proto)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::block::protobuf::BlockMessage*>(
      &::shardora::block::protobuf::_BlockMessage_default_instance_);
}
inline ::shardora::block::protobuf::BlockMessage* Header::release_block_proto() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.block_proto)
  clear_has_block_proto();
  ::shardora::block::protobuf::BlockMessage* temp = block_proto_;
  block_proto_ = NULL;
  return temp;
}
inline ::shardora::block::protobuf::BlockMessage* Header::mutable_block_proto() {
  set_has_block_proto();
  if (block_proto_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::block::protobuf::BlockMessage>(GetArenaNoVirtual());
    block_proto_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.block_proto)
  return block_proto_;
}
inline void Header::set_allocated_block_proto(::shardora::block::protobuf::BlockMessage* block_proto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(block_proto_);
  }
  if (block_proto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      block_proto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, block_proto, submessage_arena);
    }
    set_has_block_proto();
  } else {
    clear_has_block_proto();
  }
  block_proto_ = block_proto;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.block_proto)
}

// optional .shardora.pools.protobuf.ToTxHeights to_tx_heights = 18;
inline bool Header::has_to_tx_heights() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Header::set_has_to_tx_heights() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Header::clear_has_to_tx_heights() {
  _has_bits_[0] &= ~0x00002000u;
}
inline const ::shardora::pools::protobuf::ToTxHeights& Header::_internal_to_tx_heights() const {
  return *to_tx_heights_;
}
inline const ::shardora::pools::protobuf::ToTxHeights& Header::to_tx_heights() const {
  const ::shardora::pools::protobuf::ToTxHeights* p = to_tx_heights_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.to_tx_heights)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::pools::protobuf::ToTxHeights*>(
      &::shardora::pools::protobuf::_ToTxHeights_default_instance_);
}
inline ::shardora::pools::protobuf::ToTxHeights* Header::release_to_tx_heights() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.to_tx_heights)
  clear_has_to_tx_heights();
  ::shardora::pools::protobuf::ToTxHeights* temp = to_tx_heights_;
  to_tx_heights_ = NULL;
  return temp;
}
inline ::shardora::pools::protobuf::ToTxHeights* Header::mutable_to_tx_heights() {
  set_has_to_tx_heights();
  if (to_tx_heights_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::pools::protobuf::ToTxHeights>(GetArenaNoVirtual());
    to_tx_heights_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.to_tx_heights)
  return to_tx_heights_;
}
inline void Header::set_allocated_to_tx_heights(::shardora::pools::protobuf::ToTxHeights* to_tx_heights) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(to_tx_heights_);
  }
  if (to_tx_heights) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      to_tx_heights = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, to_tx_heights, submessage_arena);
    }
    set_has_to_tx_heights();
  } else {
    clear_has_to_tx_heights();
  }
  to_tx_heights_ = to_tx_heights;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.to_tx_heights)
}

// optional .shardora.sync.protobuf.SyncInfo sync = 19;
inline bool Header::has_sync() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Header::set_has_sync() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Header::clear_has_sync() {
  _has_bits_[0] &= ~0x00004000u;
}
inline const ::shardora::sync::protobuf::SyncInfo& Header::_internal_sync() const {
  return *sync_;
}
inline const ::shardora::sync::protobuf::SyncInfo& Header::sync() const {
  const ::shardora::sync::protobuf::SyncInfo* p = sync_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.sync)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::sync::protobuf::SyncInfo*>(
      &::shardora::sync::protobuf::_SyncInfo_default_instance_);
}
inline ::shardora::sync::protobuf::SyncInfo* Header::release_sync() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.sync)
  clear_has_sync();
  ::shardora::sync::protobuf::SyncInfo* temp = sync_;
  sync_ = NULL;
  return temp;
}
inline ::shardora::sync::protobuf::SyncInfo* Header::mutable_sync() {
  set_has_sync();
  if (sync_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::sync::protobuf::SyncInfo>(GetArenaNoVirtual());
    sync_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.sync)
  return sync_;
}
inline void Header::set_allocated_sync(::shardora::sync::protobuf::SyncInfo* sync) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(sync_);
  }
  if (sync) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sync = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sync, submessage_arena);
    }
    set_has_sync();
  } else {
    clear_has_sync();
  }
  sync_ = sync;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.sync)
}

// optional .shardora.sync.protobuf.SyncMessage sync_proto = 20;
inline bool Header::has_sync_proto() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Header::set_has_sync_proto() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Header::clear_has_sync_proto() {
  _has_bits_[0] &= ~0x00008000u;
}
inline const ::shardora::sync::protobuf::SyncMessage& Header::_internal_sync_proto() const {
  return *sync_proto_;
}
inline const ::shardora::sync::protobuf::SyncMessage& Header::sync_proto() const {
  const ::shardora::sync::protobuf::SyncMessage* p = sync_proto_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.sync_proto)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::sync::protobuf::SyncMessage*>(
      &::shardora::sync::protobuf::_SyncMessage_default_instance_);
}
inline ::shardora::sync::protobuf::SyncMessage* Header::release_sync_proto() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.sync_proto)
  clear_has_sync_proto();
  ::shardora::sync::protobuf::SyncMessage* temp = sync_proto_;
  sync_proto_ = NULL;
  return temp;
}
inline ::shardora::sync::protobuf::SyncMessage* Header::mutable_sync_proto() {
  set_has_sync_proto();
  if (sync_proto_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::sync::protobuf::SyncMessage>(GetArenaNoVirtual());
    sync_proto_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.sync_proto)
  return sync_proto_;
}
inline void Header::set_allocated_sync_proto(::shardora::sync::protobuf::SyncMessage* sync_proto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(sync_proto_);
  }
  if (sync_proto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sync_proto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sync_proto, submessage_arena);
    }
    set_has_sync_proto();
  } else {
    clear_has_sync_proto();
  }
  sync_proto_ = sync_proto;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.sync_proto)
}

// optional .shardora.vss.protobuf.VssMessage vss_proto = 21;
inline bool Header::has_vss_proto() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Header::set_has_vss_proto() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Header::clear_has_vss_proto() {
  _has_bits_[0] &= ~0x00010000u;
}
inline const ::shardora::vss::protobuf::VssMessage& Header::_internal_vss_proto() const {
  return *vss_proto_;
}
inline const ::shardora::vss::protobuf::VssMessage& Header::vss_proto() const {
  const ::shardora::vss::protobuf::VssMessage* p = vss_proto_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.vss_proto)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::vss::protobuf::VssMessage*>(
      &::shardora::vss::protobuf::_VssMessage_default_instance_);
}
inline ::shardora::vss::protobuf::VssMessage* Header::release_vss_proto() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.vss_proto)
  clear_has_vss_proto();
  ::shardora::vss::protobuf::VssMessage* temp = vss_proto_;
  vss_proto_ = NULL;
  return temp;
}
inline ::shardora::vss::protobuf::VssMessage* Header::mutable_vss_proto() {
  set_has_vss_proto();
  if (vss_proto_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::vss::protobuf::VssMessage>(GetArenaNoVirtual());
    vss_proto_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.vss_proto)
  return vss_proto_;
}
inline void Header::set_allocated_vss_proto(::shardora::vss::protobuf::VssMessage* vss_proto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vss_proto_);
  }
  if (vss_proto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vss_proto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vss_proto, submessage_arena);
    }
    set_has_vss_proto();
  } else {
    clear_has_vss_proto();
  }
  vss_proto_ = vss_proto;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.vss_proto)
}

// optional .shardora.block.protobuf.CrossShardingTosMessage cross_tos = 22;
inline bool Header::has_cross_tos() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Header::set_has_cross_tos() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Header::clear_has_cross_tos() {
  _has_bits_[0] &= ~0x00020000u;
}
inline const ::shardora::block::protobuf::CrossShardingTosMessage& Header::_internal_cross_tos() const {
  return *cross_tos_;
}
inline const ::shardora::block::protobuf::CrossShardingTosMessage& Header::cross_tos() const {
  const ::shardora::block::protobuf::CrossShardingTosMessage* p = cross_tos_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.cross_tos)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::block::protobuf::CrossShardingTosMessage*>(
      &::shardora::block::protobuf::_CrossShardingTosMessage_default_instance_);
}
inline ::shardora::block::protobuf::CrossShardingTosMessage* Header::release_cross_tos() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.cross_tos)
  clear_has_cross_tos();
  ::shardora::block::protobuf::CrossShardingTosMessage* temp = cross_tos_;
  cross_tos_ = NULL;
  return temp;
}
inline ::shardora::block::protobuf::CrossShardingTosMessage* Header::mutable_cross_tos() {
  set_has_cross_tos();
  if (cross_tos_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::block::protobuf::CrossShardingTosMessage>(GetArenaNoVirtual());
    cross_tos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.cross_tos)
  return cross_tos_;
}
inline void Header::set_allocated_cross_tos(::shardora::block::protobuf::CrossShardingTosMessage* cross_tos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cross_tos_);
  }
  if (cross_tos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cross_tos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cross_tos, submessage_arena);
    }
    set_has_cross_tos();
  } else {
    clear_has_cross_tos();
  }
  cross_tos_ = cross_tos;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.cross_tos)
}

// optional .shardora.block.protobuf.CrossShardingStatisticMessage cross_statistic = 23;
inline bool Header::has_cross_statistic() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Header::set_has_cross_statistic() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Header::clear_has_cross_statistic() {
  _has_bits_[0] &= ~0x00040000u;
}
inline const ::shardora::block::protobuf::CrossShardingStatisticMessage& Header::_internal_cross_statistic() const {
  return *cross_statistic_;
}
inline const ::shardora::block::protobuf::CrossShardingStatisticMessage& Header::cross_statistic() const {
  const ::shardora::block::protobuf::CrossShardingStatisticMessage* p = cross_statistic_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.cross_statistic)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::block::protobuf::CrossShardingStatisticMessage*>(
      &::shardora::block::protobuf::_CrossShardingStatisticMessage_default_instance_);
}
inline ::shardora::block::protobuf::CrossShardingStatisticMessage* Header::release_cross_statistic() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.cross_statistic)
  clear_has_cross_statistic();
  ::shardora::block::protobuf::CrossShardingStatisticMessage* temp = cross_statistic_;
  cross_statistic_ = NULL;
  return temp;
}
inline ::shardora::block::protobuf::CrossShardingStatisticMessage* Header::mutable_cross_statistic() {
  set_has_cross_statistic();
  if (cross_statistic_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::block::protobuf::CrossShardingStatisticMessage>(GetArenaNoVirtual());
    cross_statistic_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.cross_statistic)
  return cross_statistic_;
}
inline void Header::set_allocated_cross_statistic(::shardora::block::protobuf::CrossShardingStatisticMessage* cross_statistic) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cross_statistic_);
  }
  if (cross_statistic) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cross_statistic = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cross_statistic, submessage_arena);
    }
    set_has_cross_statistic();
  } else {
    clear_has_cross_statistic();
  }
  cross_statistic_ = cross_statistic;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.cross_statistic)
}

// optional .shardora.block.protobuf.ElectBlockMessage elect_block = 24;
inline bool Header::has_elect_block() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Header::set_has_elect_block() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Header::clear_has_elect_block() {
  _has_bits_[0] &= ~0x00080000u;
}
inline const ::shardora::block::protobuf::ElectBlockMessage& Header::_internal_elect_block() const {
  return *elect_block_;
}
inline const ::shardora::block::protobuf::ElectBlockMessage& Header::elect_block() const {
  const ::shardora::block::protobuf::ElectBlockMessage* p = elect_block_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.elect_block)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::block::protobuf::ElectBlockMessage*>(
      &::shardora::block::protobuf::_ElectBlockMessage_default_instance_);
}
inline ::shardora::block::protobuf::ElectBlockMessage* Header::release_elect_block() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.elect_block)
  clear_has_elect_block();
  ::shardora::block::protobuf::ElectBlockMessage* temp = elect_block_;
  elect_block_ = NULL;
  return temp;
}
inline ::shardora::block::protobuf::ElectBlockMessage* Header::mutable_elect_block() {
  set_has_elect_block();
  if (elect_block_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::block::protobuf::ElectBlockMessage>(GetArenaNoVirtual());
    elect_block_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.elect_block)
  return elect_block_;
}
inline void Header::set_allocated_elect_block(::shardora::block::protobuf::ElectBlockMessage* elect_block) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(elect_block_);
  }
  if (elect_block) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      elect_block = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, elect_block, submessage_arena);
    }
    set_has_elect_block();
  } else {
    clear_has_elect_block();
  }
  elect_block_ = elect_block;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.elect_block)
}

// optional .shardora.init.protobuf.InitMessage init_proto = 25;
inline bool Header::has_init_proto() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Header::set_has_init_proto() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Header::clear_has_init_proto() {
  _has_bits_[0] &= ~0x00100000u;
}
inline const ::shardora::init::protobuf::InitMessage& Header::_internal_init_proto() const {
  return *init_proto_;
}
inline const ::shardora::init::protobuf::InitMessage& Header::init_proto() const {
  const ::shardora::init::protobuf::InitMessage* p = init_proto_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.init_proto)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::init::protobuf::InitMessage*>(
      &::shardora::init::protobuf::_InitMessage_default_instance_);
}
inline ::shardora::init::protobuf::InitMessage* Header::release_init_proto() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.init_proto)
  clear_has_init_proto();
  ::shardora::init::protobuf::InitMessage* temp = init_proto_;
  init_proto_ = NULL;
  return temp;
}
inline ::shardora::init::protobuf::InitMessage* Header::mutable_init_proto() {
  set_has_init_proto();
  if (init_proto_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::init::protobuf::InitMessage>(GetArenaNoVirtual());
    init_proto_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.init_proto)
  return init_proto_;
}
inline void Header::set_allocated_init_proto(::shardora::init::protobuf::InitMessage* init_proto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(init_proto_);
  }
  if (init_proto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      init_proto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, init_proto, submessage_arena);
    }
    set_has_init_proto();
  } else {
    clear_has_init_proto();
  }
  init_proto_ = init_proto;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.init_proto)
}

// optional .shardora.pools.protobuf.SyncPoolsMaxHeight sync_heights = 26;
inline bool Header::has_sync_heights() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Header::set_has_sync_heights() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Header::clear_has_sync_heights() {
  _has_bits_[0] &= ~0x00200000u;
}
inline const ::shardora::pools::protobuf::SyncPoolsMaxHeight& Header::_internal_sync_heights() const {
  return *sync_heights_;
}
inline const ::shardora::pools::protobuf::SyncPoolsMaxHeight& Header::sync_heights() const {
  const ::shardora::pools::protobuf::SyncPoolsMaxHeight* p = sync_heights_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.sync_heights)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::pools::protobuf::SyncPoolsMaxHeight*>(
      &::shardora::pools::protobuf::_SyncPoolsMaxHeight_default_instance_);
}
inline ::shardora::pools::protobuf::SyncPoolsMaxHeight* Header::release_sync_heights() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.sync_heights)
  clear_has_sync_heights();
  ::shardora::pools::protobuf::SyncPoolsMaxHeight* temp = sync_heights_;
  sync_heights_ = NULL;
  return temp;
}
inline ::shardora::pools::protobuf::SyncPoolsMaxHeight* Header::mutable_sync_heights() {
  set_has_sync_heights();
  if (sync_heights_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::pools::protobuf::SyncPoolsMaxHeight>(GetArenaNoVirtual());
    sync_heights_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.sync_heights)
  return sync_heights_;
}
inline void Header::set_allocated_sync_heights(::shardora::pools::protobuf::SyncPoolsMaxHeight* sync_heights) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(sync_heights_);
  }
  if (sync_heights) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sync_heights = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sync_heights, submessage_arena);
    }
    set_has_sync_heights();
  } else {
    clear_has_sync_heights();
  }
  sync_heights_ = sync_heights;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.sync_heights)
}

// optional .shardora.block.protobuf.Block block = 27;
inline bool Header::has_block() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Header::set_has_block() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Header::clear_has_block() {
  _has_bits_[0] &= ~0x00400000u;
}
inline const ::shardora::block::protobuf::Block& Header::_internal_block() const {
  return *block_;
}
inline const ::shardora::block::protobuf::Block& Header::block() const {
  const ::shardora::block::protobuf::Block* p = block_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.block)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::block::protobuf::Block*>(
      &::shardora::block::protobuf::_Block_default_instance_);
}
inline ::shardora::block::protobuf::Block* Header::release_block() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.block)
  clear_has_block();
  ::shardora::block::protobuf::Block* temp = block_;
  block_ = NULL;
  return temp;
}
inline ::shardora::block::protobuf::Block* Header::mutable_block() {
  set_has_block();
  if (block_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::block::protobuf::Block>(GetArenaNoVirtual());
    block_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.block)
  return block_;
}
inline void Header::set_allocated_block(::shardora::block::protobuf::Block* block) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(block_);
  }
  if (block) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      block = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, block, submessage_arena);
    }
    set_has_block();
  } else {
    clear_has_block();
  }
  block_ = block;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.block)
}

// optional uint32 from_public_port = 29;
inline bool Header::has_from_public_port() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Header::set_has_from_public_port() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Header::clear_has_from_public_port() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Header::clear_from_public_port() {
  from_public_port_ = 0u;
  clear_has_from_public_port();
}
inline ::google::protobuf::uint32 Header::from_public_port() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.from_public_port)
  return from_public_port_;
}
inline void Header::set_from_public_port(::google::protobuf::uint32 value) {
  set_has_from_public_port();
  from_public_port_ = value;
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.Header.from_public_port)
}

// optional .shardora.c2c.protobuf.C2cMessage c2c = 30;
inline bool Header::has_c2c() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Header::set_has_c2c() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Header::clear_has_c2c() {
  _has_bits_[0] &= ~0x00800000u;
}
inline const ::shardora::c2c::protobuf::C2cMessage& Header::_internal_c2c() const {
  return *c2c_;
}
inline const ::shardora::c2c::protobuf::C2cMessage& Header::c2c() const {
  const ::shardora::c2c::protobuf::C2cMessage* p = c2c_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.c2c)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::c2c::protobuf::C2cMessage*>(
      &::shardora::c2c::protobuf::_C2cMessage_default_instance_);
}
inline ::shardora::c2c::protobuf::C2cMessage* Header::release_c2c() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.c2c)
  clear_has_c2c();
  ::shardora::c2c::protobuf::C2cMessage* temp = c2c_;
  c2c_ = NULL;
  return temp;
}
inline ::shardora::c2c::protobuf::C2cMessage* Header::mutable_c2c() {
  set_has_c2c();
  if (c2c_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::c2c::protobuf::C2cMessage>(GetArenaNoVirtual());
    c2c_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.c2c)
  return c2c_;
}
inline void Header::set_allocated_c2c(::shardora::c2c::protobuf::C2cMessage* c2c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(c2c_);
  }
  if (c2c) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2c, submessage_arena);
    }
    set_has_c2c();
  } else {
    clear_has_c2c();
  }
  c2c_ = c2c;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.c2c)
}

// optional bytes pubkey = 31;
inline bool Header::has_pubkey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Header::set_has_pubkey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Header::clear_has_pubkey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Header::clear_pubkey() {
  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pubkey();
}
inline const ::std::string& Header::pubkey() const {
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.pubkey)
  return pubkey_.GetNoArena();
}
inline void Header::set_pubkey(const ::std::string& value) {
  set_has_pubkey();
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shardora.transport.protobuf.Header.pubkey)
}
#if LANG_CXX11
inline void Header::set_pubkey(::std::string&& value) {
  set_has_pubkey();
  pubkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shardora.transport.protobuf.Header.pubkey)
}
#endif
inline void Header::set_pubkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pubkey();
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shardora.transport.protobuf.Header.pubkey)
}
inline void Header::set_pubkey(const void* value, size_t size) {
  set_has_pubkey();
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shardora.transport.protobuf.Header.pubkey)
}
inline ::std::string* Header::mutable_pubkey() {
  set_has_pubkey();
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.pubkey)
  return pubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Header::release_pubkey() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.pubkey)
  if (!has_pubkey()) {
    return NULL;
  }
  clear_has_pubkey();
  return pubkey_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_allocated_pubkey(::std::string* pubkey) {
  if (pubkey != NULL) {
    set_has_pubkey();
  } else {
    clear_has_pubkey();
  }
  pubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubkey);
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.pubkey)
}

// optional .shardora.view_block.protobuf.ViewBlockMessage view_block_proto = 32;
inline bool Header::has_view_block_proto() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Header::set_has_view_block_proto() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Header::clear_has_view_block_proto() {
  _has_bits_[0] &= ~0x01000000u;
}
inline const ::shardora::view_block::protobuf::ViewBlockMessage& Header::_internal_view_block_proto() const {
  return *view_block_proto_;
}
inline const ::shardora::view_block::protobuf::ViewBlockMessage& Header::view_block_proto() const {
  const ::shardora::view_block::protobuf::ViewBlockMessage* p = view_block_proto_;
  // @@protoc_insertion_point(field_get:shardora.transport.protobuf.Header.view_block_proto)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::view_block::protobuf::ViewBlockMessage*>(
      &::shardora::view_block::protobuf::_ViewBlockMessage_default_instance_);
}
inline ::shardora::view_block::protobuf::ViewBlockMessage* Header::release_view_block_proto() {
  // @@protoc_insertion_point(field_release:shardora.transport.protobuf.Header.view_block_proto)
  clear_has_view_block_proto();
  ::shardora::view_block::protobuf::ViewBlockMessage* temp = view_block_proto_;
  view_block_proto_ = NULL;
  return temp;
}
inline ::shardora::view_block::protobuf::ViewBlockMessage* Header::mutable_view_block_proto() {
  set_has_view_block_proto();
  if (view_block_proto_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::view_block::protobuf::ViewBlockMessage>(GetArenaNoVirtual());
    view_block_proto_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.transport.protobuf.Header.view_block_proto)
  return view_block_proto_;
}
inline void Header::set_allocated_view_block_proto(::shardora::view_block::protobuf::ViewBlockMessage* view_block_proto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(view_block_proto_);
  }
  if (view_block_proto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      view_block_proto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, view_block_proto, submessage_arena);
    }
    set_has_view_block_proto();
  } else {
    clear_has_view_block_proto();
  }
  view_block_proto_ = view_block_proto;
  // @@protoc_insertion_point(field_set_allocated:shardora.transport.protobuf.Header.view_block_proto)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace transport
}  // namespace shardora

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protos_2ftransport_2eproto
