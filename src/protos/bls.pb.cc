// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/bls.proto

#include "protos/bls.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protos_2fbls_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fbls_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BlsPublicKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fbls_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CheckSwapKeyReq;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fbls_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CheckVerfiyReq;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fbls_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SwapSecKeyItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fbls_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VerifyVecItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fbls_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FinishBroadcast;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fbls_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SwapSecKeyReq;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fbls_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VerifyVecBrdReq;
}  // namespace protobuf_protos_2fbls_2eproto
namespace zjchain {
namespace bls {
namespace protobuf {
class VerifyVecItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyVecItem>
      _instance;
} _VerifyVecItem_default_instance_;
class BlsPublicKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlsPublicKey>
      _instance;
} _BlsPublicKey_default_instance_;
class VerifyVecBrdReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyVecBrdReq>
      _instance;
} _VerifyVecBrdReq_default_instance_;
class JoinElectBlsInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinElectBlsInfo>
      _instance;
} _JoinElectBlsInfo_default_instance_;
class LocalPolynomialDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalPolynomial>
      _instance;
} _LocalPolynomial_default_instance_;
class LocalBlsItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalBlsItem>
      _instance;
} _LocalBlsItem_default_instance_;
class BlsVerifyValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlsVerifyValue>
      _instance;
} _BlsVerifyValue_default_instance_;
class VerifyVecBrdResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyVecBrdRes>
      _instance;
} _VerifyVecBrdRes_default_instance_;
class SwapSecKeyItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SwapSecKeyItem>
      _instance;
} _SwapSecKeyItem_default_instance_;
class SwapSecKeyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SwapSecKeyReq>
      _instance;
} _SwapSecKeyReq_default_instance_;
class SwapSecKeyResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SwapSecKeyRes>
      _instance;
} _SwapSecKeyRes_default_instance_;
class AgainstParticipantDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AgainstParticipant>
      _instance;
} _AgainstParticipant_default_instance_;
class FinishBroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FinishBroadcast>
      _instance;
} _FinishBroadcast_default_instance_;
class CheckVerfiyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckVerfiyReq>
      _instance;
} _CheckVerfiyReq_default_instance_;
class CheckSwapKeyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckSwapKeyReq>
      _instance;
} _CheckSwapKeyReq_default_instance_;
class BlsMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlsMessage>
      _instance;
} _BlsMessage_default_instance_;
}  // namespace protobuf
}  // namespace bls
}  // namespace zjchain
namespace protobuf_protos_2fbls_2eproto {
static void InitDefaultsVerifyVecItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_VerifyVecItem_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::VerifyVecItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::VerifyVecItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyVecItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyVecItem}, {}};

static void InitDefaultsBlsPublicKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_BlsPublicKey_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::BlsPublicKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::BlsPublicKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BlsPublicKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBlsPublicKey}, {}};

static void InitDefaultsVerifyVecBrdReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_VerifyVecBrdReq_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::VerifyVecBrdReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::VerifyVecBrdReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VerifyVecBrdReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVerifyVecBrdReq}, {
      &protobuf_protos_2fbls_2eproto::scc_info_VerifyVecItem.base,}};

static void InitDefaultsJoinElectBlsInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_JoinElectBlsInfo_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::JoinElectBlsInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::JoinElectBlsInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JoinElectBlsInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJoinElectBlsInfo}, {
      &protobuf_protos_2fbls_2eproto::scc_info_VerifyVecBrdReq.base,}};

static void InitDefaultsLocalPolynomial() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_LocalPolynomial_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::LocalPolynomial();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::LocalPolynomial::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LocalPolynomial =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocalPolynomial}, {}};

static void InitDefaultsLocalBlsItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_LocalBlsItem_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::LocalBlsItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::LocalBlsItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LocalBlsItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocalBlsItem}, {
      &protobuf_protos_2fbls_2eproto::scc_info_VerifyVecItem.base,}};

static void InitDefaultsBlsVerifyValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_BlsVerifyValue_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::BlsVerifyValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::BlsVerifyValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BlsVerifyValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBlsVerifyValue}, {
      &protobuf_protos_2fbls_2eproto::scc_info_VerifyVecItem.base,}};

static void InitDefaultsVerifyVecBrdRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_VerifyVecBrdRes_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::VerifyVecBrdRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::VerifyVecBrdRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyVecBrdRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyVecBrdRes}, {}};

static void InitDefaultsSwapSecKeyItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_SwapSecKeyItem_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::SwapSecKeyItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::SwapSecKeyItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SwapSecKeyItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSwapSecKeyItem}, {}};

static void InitDefaultsSwapSecKeyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_SwapSecKeyReq_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::SwapSecKeyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::SwapSecKeyReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SwapSecKeyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSwapSecKeyReq}, {
      &protobuf_protos_2fbls_2eproto::scc_info_SwapSecKeyItem.base,}};

static void InitDefaultsSwapSecKeyRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_SwapSecKeyRes_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::SwapSecKeyRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::SwapSecKeyRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SwapSecKeyRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSwapSecKeyRes}, {}};

static void InitDefaultsAgainstParticipant() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_AgainstParticipant_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::AgainstParticipant();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::AgainstParticipant::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AgainstParticipant =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAgainstParticipant}, {}};

static void InitDefaultsFinishBroadcast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_FinishBroadcast_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::FinishBroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::FinishBroadcast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FinishBroadcast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFinishBroadcast}, {
      &protobuf_protos_2fbls_2eproto::scc_info_BlsPublicKey.base,}};

static void InitDefaultsCheckVerfiyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_CheckVerfiyReq_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::CheckVerfiyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::CheckVerfiyReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckVerfiyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckVerfiyReq}, {}};

static void InitDefaultsCheckSwapKeyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_CheckSwapKeyReq_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::CheckSwapKeyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::CheckSwapKeyReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckSwapKeyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckSwapKeyReq}, {}};

static void InitDefaultsBlsMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::bls::protobuf::_BlsMessage_default_instance_;
    new (ptr) ::zjchain::bls::protobuf::BlsMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::bls::protobuf::BlsMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_BlsMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsBlsMessage}, {
      &protobuf_protos_2fbls_2eproto::scc_info_VerifyVecBrdReq.base,
      &protobuf_protos_2fbls_2eproto::scc_info_SwapSecKeyReq.base,
      &protobuf_protos_2fbls_2eproto::scc_info_FinishBroadcast.base,
      &protobuf_protos_2fbls_2eproto::scc_info_CheckVerfiyReq.base,
      &protobuf_protos_2fbls_2eproto::scc_info_CheckSwapKeyReq.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyVecItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlsPublicKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyVecBrdReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JoinElectBlsInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocalPolynomial.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocalBlsItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlsVerifyValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyVecBrdRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SwapSecKeyItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SwapSecKeyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SwapSecKeyRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AgainstParticipant.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FinishBroadcast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckVerfiyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckSwapKeyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlsMessage.base);
}

::google::protobuf::Metadata file_level_metadata[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecItem, x_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecItem, x_c1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecItem, y_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecItem, y_c1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecItem, z_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecItem, z_c1_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsPublicKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsPublicKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsPublicKey, x_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsPublicKey, x_c1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsPublicKey, y_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsPublicKey, y_c1_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecBrdReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecBrdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecBrdReq, verify_vec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecBrdReq, change_idx_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::JoinElectBlsInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::JoinElectBlsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::JoinElectBlsInfo, src_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::JoinElectBlsInfo, verify_req_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::LocalPolynomial, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::LocalPolynomial, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::LocalPolynomial, polynomial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::LocalPolynomial, change_idx_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::LocalBlsItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::LocalBlsItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::LocalBlsItem, polynomial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::LocalBlsItem, verify_vec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::LocalBlsItem, valid_t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::LocalBlsItem, valid_n_),
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsVerifyValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsVerifyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsVerifyValue, verify_vec_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecBrdRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecBrdRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecBrdRes, public_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::VerifyVecBrdRes, public_port_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::SwapSecKeyItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::SwapSecKeyItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::SwapSecKeyItem, sec_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::SwapSecKeyItem, sec_key_len_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::SwapSecKeyReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::SwapSecKeyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::SwapSecKeyReq, keys_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::SwapSecKeyRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::SwapSecKeyRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::SwapSecKeyRes, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::SwapSecKeyRes, sec_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::SwapSecKeyRes, sec_key_len_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::AgainstParticipant, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::AgainstParticipant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::AgainstParticipant, against_index_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::FinishBroadcast, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::FinishBroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::FinishBroadcast, bitmap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::FinishBroadcast, pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::FinishBroadcast, common_pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::FinishBroadcast, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::FinishBroadcast, bls_sign_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::FinishBroadcast, bls_sign_y_),
  ~0u,
  2,
  3,
  4,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::CheckVerfiyReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::CheckVerfiyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::CheckVerfiyReq, index_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::CheckSwapKeyReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::CheckSwapKeyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::CheckSwapKeyReq, index_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsMessage, verify_brd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsMessage, swap_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsMessage, finish_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsMessage, check_verify_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsMessage, check_swapkey_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsMessage, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::bls::protobuf::BlsMessage, elect_height_),
  0,
  1,
  2,
  3,
  4,
  6,
  5,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::zjchain::bls::protobuf::VerifyVecItem)},
  { 17, 26, sizeof(::zjchain::bls::protobuf::BlsPublicKey)},
  { 30, 37, sizeof(::zjchain::bls::protobuf::VerifyVecBrdReq)},
  { 39, 46, sizeof(::zjchain::bls::protobuf::JoinElectBlsInfo)},
  { 48, 55, sizeof(::zjchain::bls::protobuf::LocalPolynomial)},
  { 57, 66, sizeof(::zjchain::bls::protobuf::LocalBlsItem)},
  { 70, 76, sizeof(::zjchain::bls::protobuf::BlsVerifyValue)},
  { 77, 84, sizeof(::zjchain::bls::protobuf::VerifyVecBrdRes)},
  { 86, 93, sizeof(::zjchain::bls::protobuf::SwapSecKeyItem)},
  { 95, 101, sizeof(::zjchain::bls::protobuf::SwapSecKeyReq)},
  { 102, 110, sizeof(::zjchain::bls::protobuf::SwapSecKeyRes)},
  { 113, 119, sizeof(::zjchain::bls::protobuf::AgainstParticipant)},
  { 120, 131, sizeof(::zjchain::bls::protobuf::FinishBroadcast)},
  { 137, 143, sizeof(::zjchain::bls::protobuf::CheckVerfiyReq)},
  { 144, 150, sizeof(::zjchain::bls::protobuf::CheckSwapKeyReq)},
  { 151, 163, sizeof(::zjchain::bls::protobuf::BlsMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_VerifyVecItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_BlsPublicKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_VerifyVecBrdReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_JoinElectBlsInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_LocalPolynomial_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_LocalBlsItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_BlsVerifyValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_VerifyVecBrdRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_SwapSecKeyItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_SwapSecKeyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_SwapSecKeyRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_AgainstParticipant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_FinishBroadcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_CheckVerfiyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_CheckSwapKeyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::bls::protobuf::_BlsMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protos/bls.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020protos/bls.proto\022\024zjchain.bls.protobuf"
      "\"c\n\rVerifyVecItem\022\014\n\004x_c0\030\001 \001(\014\022\014\n\004x_c1\030"
      "\002 \001(\014\022\014\n\004y_c0\030\003 \001(\014\022\014\n\004y_c1\030\004 \001(\014\022\014\n\004z_c"
      "0\030\005 \001(\014\022\014\n\004z_c1\030\006 \001(\014\"F\n\014BlsPublicKey\022\014\n"
      "\004x_c0\030\001 \001(\014\022\014\n\004x_c1\030\002 \001(\014\022\014\n\004y_c0\030\003 \001(\014\022"
      "\014\n\004y_c1\030\004 \001(\014\"^\n\017VerifyVecBrdReq\0227\n\nveri"
      "fy_vec\030\001 \003(\0132#.zjchain.bls.protobuf.Veri"
      "fyVecItem\022\022\n\nchange_idx\030\002 \001(\r\"_\n\020JoinEle"
      "ctBlsInfo\022\020\n\010src_hash\030\001 \001(\014\0229\n\nverify_re"
      "q\030\002 \001(\0132%.zjchain.bls.protobuf.VerifyVec"
      "BrdReq\"<\n\017LocalPolynomial\022\022\n\npolynomial\030"
      "\001 \003(\014\022\025\n\nchange_idx\030\002 \001(\r:\0010\"}\n\014LocalBls"
      "Item\022\022\n\npolynomial\030\001 \003(\014\0227\n\nverify_vec\030\002"
      " \003(\0132#.zjchain.bls.protobuf.VerifyVecIte"
      "m\022\017\n\007valid_t\030\003 \001(\r\022\017\n\007valid_n\030\004 \001(\r\"I\n\016B"
      "lsVerifyValue\0227\n\nverify_vec\030\001 \003(\0132#.zjch"
      "ain.bls.protobuf.VerifyVecItem\"9\n\017Verify"
      "VecBrdRes\022\021\n\tpublic_ip\030\001 \001(\014\022\023\n\013public_p"
      "ort\030\002 \001(\r\"6\n\016SwapSecKeyItem\022\017\n\007sec_key\030\001"
      " \001(\014\022\023\n\013sec_key_len\030\002 \001(\r\"C\n\rSwapSecKeyR"
      "eq\0222\n\004keys\030\001 \003(\0132$.zjchain.bls.protobuf."
      "SwapSecKeyItem\"D\n\rSwapSecKeyRes\022\r\n\005index"
      "\030\001 \001(\r\022\017\n\007sec_key\030\002 \001(\014\022\023\n\013sec_key_len\030\003"
      " \001(\r\"+\n\022AgainstParticipant\022\025\n\ragainst_in"
      "dex\030\001 \001(\r\"\314\001\n\017FinishBroadcast\022\016\n\006bitmap\030"
      "\001 \003(\004\0222\n\006pubkey\030\002 \001(\0132\".zjchain.bls.prot"
      "obuf.BlsPublicKey\0229\n\rcommon_pubkey\030\003 \001(\013"
      "2\".zjchain.bls.protobuf.BlsPublicKey\022\022\n\n"
      "network_id\030\004 \001(\r\022\022\n\nbls_sign_x\030\005 \001(\014\022\022\n\n"
      "bls_sign_y\030\006 \001(\014\"\037\n\016CheckVerfiyReq\022\r\n\005in"
      "dex\030\001 \001(\r\" \n\017CheckSwapKeyReq\022\r\n\005index\030\001 "
      "\001(\r\"\340\002\n\nBlsMessage\0229\n\nverify_brd\030\001 \001(\0132%"
      ".zjchain.bls.protobuf.VerifyVecBrdReq\0225\n"
      "\010swap_req\030\002 \001(\0132#.zjchain.bls.protobuf.S"
      "wapSecKeyReq\0229\n\nfinish_req\030\003 \001(\0132%.zjcha"
      "in.bls.protobuf.FinishBroadcast\022>\n\020check"
      "_verify_req\030\004 \001(\0132$.zjchain.bls.protobuf"
      ".CheckVerfiyReq\022@\n\021check_swapkey_req\030\005 \001"
      "(\0132%.zjchain.bls.protobuf.CheckSwapKeyRe"
      "q\022\r\n\005index\030\006 \001(\r\022\024\n\014elect_height\030\007 \001(\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1598);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protos/bls.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protos_2fbls_2eproto
namespace zjchain {
namespace bls {
namespace protobuf {

// ===================================================================

void VerifyVecItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyVecItem::kXC0FieldNumber;
const int VerifyVecItem::kXC1FieldNumber;
const int VerifyVecItem::kYC0FieldNumber;
const int VerifyVecItem::kYC1FieldNumber;
const int VerifyVecItem::kZC0FieldNumber;
const int VerifyVecItem::kZC1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyVecItem::VerifyVecItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_VerifyVecItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.VerifyVecItem)
}
VerifyVecItem::VerifyVecItem(const VerifyVecItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x_c0()) {
    x_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_);
  }
  x_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x_c1()) {
    x_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_);
  }
  y_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y_c0()) {
    y_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_);
  }
  y_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y_c1()) {
    y_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_);
  }
  z_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_z_c0()) {
    z_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_c0_);
  }
  z_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_z_c1()) {
    z_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_c1_);
  }
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.VerifyVecItem)
}

void VerifyVecItem::SharedCtor() {
  x_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VerifyVecItem::~VerifyVecItem() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.VerifyVecItem)
  SharedDtor();
}

void VerifyVecItem::SharedDtor() {
  x_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyVecItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VerifyVecItem::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyVecItem& VerifyVecItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_VerifyVecItem.base);
  return *internal_default_instance();
}


void VerifyVecItem::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.VerifyVecItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      x_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      x_c1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      y_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      y_c1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      z_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      z_c1_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyVecItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.VerifyVecItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes x_c0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes x_c1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y_c0 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y_c1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes z_c0 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_z_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes z_c1 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_z_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.VerifyVecItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.VerifyVecItem)
  return false;
#undef DO_
}

void VerifyVecItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.VerifyVecItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes x_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->x_c0(), output);
  }

  // optional bytes x_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->x_c1(), output);
  }

  // optional bytes y_c0 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->y_c0(), output);
  }

  // optional bytes y_c1 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->y_c1(), output);
  }

  // optional bytes z_c0 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->z_c0(), output);
  }

  // optional bytes z_c1 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->z_c1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.VerifyVecItem)
}

::google::protobuf::uint8* VerifyVecItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.VerifyVecItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes x_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->x_c0(), target);
  }

  // optional bytes x_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->x_c1(), target);
  }

  // optional bytes y_c0 = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->y_c0(), target);
  }

  // optional bytes y_c1 = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->y_c1(), target);
  }

  // optional bytes z_c0 = 5;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->z_c0(), target);
  }

  // optional bytes z_c1 = 6;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->z_c1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.VerifyVecItem)
  return target;
}

size_t VerifyVecItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.VerifyVecItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes x_c0 = 1;
    if (has_x_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x_c0());
    }

    // optional bytes x_c1 = 2;
    if (has_x_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x_c1());
    }

    // optional bytes y_c0 = 3;
    if (has_y_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y_c0());
    }

    // optional bytes y_c1 = 4;
    if (has_y_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y_c1());
    }

    // optional bytes z_c0 = 5;
    if (has_z_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->z_c0());
    }

    // optional bytes z_c1 = 6;
    if (has_z_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->z_c1());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyVecItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.VerifyVecItem)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyVecItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyVecItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.VerifyVecItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.VerifyVecItem)
    MergeFrom(*source);
  }
}

void VerifyVecItem::MergeFrom(const VerifyVecItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.VerifyVecItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_x_c0();
      x_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_x_c1();
      x_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_y_c0();
      y_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_y_c1();
      y_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_z_c0();
      z_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_c0_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_z_c1();
      z_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_c1_);
    }
  }
}

void VerifyVecItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.VerifyVecItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyVecItem::CopyFrom(const VerifyVecItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.VerifyVecItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyVecItem::IsInitialized() const {
  return true;
}

void VerifyVecItem::Swap(VerifyVecItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyVecItem::InternalSwap(VerifyVecItem* other) {
  using std::swap;
  x_c0_.Swap(&other->x_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  x_c1_.Swap(&other->x_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c0_.Swap(&other->y_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c1_.Swap(&other->y_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  z_c0_.Swap(&other->z_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  z_c1_.Swap(&other->z_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyVecItem::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlsPublicKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlsPublicKey::kXC0FieldNumber;
const int BlsPublicKey::kXC1FieldNumber;
const int BlsPublicKey::kYC0FieldNumber;
const int BlsPublicKey::kYC1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlsPublicKey::BlsPublicKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_BlsPublicKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.BlsPublicKey)
}
BlsPublicKey::BlsPublicKey(const BlsPublicKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x_c0()) {
    x_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_);
  }
  x_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x_c1()) {
    x_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_);
  }
  y_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y_c0()) {
    y_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_);
  }
  y_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y_c1()) {
    y_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_);
  }
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.BlsPublicKey)
}

void BlsPublicKey::SharedCtor() {
  x_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BlsPublicKey::~BlsPublicKey() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.BlsPublicKey)
  SharedDtor();
}

void BlsPublicKey::SharedDtor() {
  x_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlsPublicKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BlsPublicKey::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlsPublicKey& BlsPublicKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_BlsPublicKey.base);
  return *internal_default_instance();
}


void BlsPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.BlsPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      x_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      x_c1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      y_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      y_c1_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BlsPublicKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.BlsPublicKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes x_c0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes x_c1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y_c0 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y_c1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.BlsPublicKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.BlsPublicKey)
  return false;
#undef DO_
}

void BlsPublicKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.BlsPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes x_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->x_c0(), output);
  }

  // optional bytes x_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->x_c1(), output);
  }

  // optional bytes y_c0 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->y_c0(), output);
  }

  // optional bytes y_c1 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->y_c1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.BlsPublicKey)
}

::google::protobuf::uint8* BlsPublicKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.BlsPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes x_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->x_c0(), target);
  }

  // optional bytes x_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->x_c1(), target);
  }

  // optional bytes y_c0 = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->y_c0(), target);
  }

  // optional bytes y_c1 = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->y_c1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.BlsPublicKey)
  return target;
}

size_t BlsPublicKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.BlsPublicKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes x_c0 = 1;
    if (has_x_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x_c0());
    }

    // optional bytes x_c1 = 2;
    if (has_x_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x_c1());
    }

    // optional bytes y_c0 = 3;
    if (has_y_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y_c0());
    }

    // optional bytes y_c1 = 4;
    if (has_y_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y_c1());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlsPublicKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.BlsPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  const BlsPublicKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlsPublicKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.BlsPublicKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.BlsPublicKey)
    MergeFrom(*source);
  }
}

void BlsPublicKey::MergeFrom(const BlsPublicKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.BlsPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_x_c0();
      x_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_x_c1();
      x_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_y_c0();
      y_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_y_c1();
      y_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_);
    }
  }
}

void BlsPublicKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.BlsPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlsPublicKey::CopyFrom(const BlsPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.BlsPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlsPublicKey::IsInitialized() const {
  return true;
}

void BlsPublicKey::Swap(BlsPublicKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlsPublicKey::InternalSwap(BlsPublicKey* other) {
  using std::swap;
  x_c0_.Swap(&other->x_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  x_c1_.Swap(&other->x_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c0_.Swap(&other->y_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c1_.Swap(&other->y_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BlsPublicKey::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VerifyVecBrdReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyVecBrdReq::kVerifyVecFieldNumber;
const int VerifyVecBrdReq::kChangeIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyVecBrdReq::VerifyVecBrdReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_VerifyVecBrdReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.VerifyVecBrdReq)
}
VerifyVecBrdReq::VerifyVecBrdReq(const VerifyVecBrdReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      verify_vec_(from.verify_vec_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  change_idx_ = from.change_idx_;
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.VerifyVecBrdReq)
}

void VerifyVecBrdReq::SharedCtor() {
  change_idx_ = 0u;
}

VerifyVecBrdReq::~VerifyVecBrdReq() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.VerifyVecBrdReq)
  SharedDtor();
}

void VerifyVecBrdReq::SharedDtor() {
}

void VerifyVecBrdReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VerifyVecBrdReq::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyVecBrdReq& VerifyVecBrdReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_VerifyVecBrdReq.base);
  return *internal_default_instance();
}


void VerifyVecBrdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.VerifyVecBrdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  verify_vec_.Clear();
  change_idx_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyVecBrdReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.VerifyVecBrdReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .zjchain.bls.protobuf.VerifyVecItem verify_vec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_verify_vec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 change_idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_change_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &change_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.VerifyVecBrdReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.VerifyVecBrdReq)
  return false;
#undef DO_
}

void VerifyVecBrdReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.VerifyVecBrdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zjchain.bls.protobuf.VerifyVecItem verify_vec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->verify_vec_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->verify_vec(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 change_idx = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->change_idx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.VerifyVecBrdReq)
}

::google::protobuf::uint8* VerifyVecBrdReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.VerifyVecBrdReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zjchain.bls.protobuf.VerifyVecItem verify_vec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->verify_vec_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->verify_vec(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 change_idx = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->change_idx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.VerifyVecBrdReq)
  return target;
}

size_t VerifyVecBrdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.VerifyVecBrdReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zjchain.bls.protobuf.VerifyVecItem verify_vec = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->verify_vec_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->verify_vec(static_cast<int>(i)));
    }
  }

  // optional uint32 change_idx = 2;
  if (has_change_idx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->change_idx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyVecBrdReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.VerifyVecBrdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyVecBrdReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyVecBrdReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.VerifyVecBrdReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.VerifyVecBrdReq)
    MergeFrom(*source);
  }
}

void VerifyVecBrdReq::MergeFrom(const VerifyVecBrdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.VerifyVecBrdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  verify_vec_.MergeFrom(from.verify_vec_);
  if (from.has_change_idx()) {
    set_change_idx(from.change_idx());
  }
}

void VerifyVecBrdReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.VerifyVecBrdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyVecBrdReq::CopyFrom(const VerifyVecBrdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.VerifyVecBrdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyVecBrdReq::IsInitialized() const {
  return true;
}

void VerifyVecBrdReq::Swap(VerifyVecBrdReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyVecBrdReq::InternalSwap(VerifyVecBrdReq* other) {
  using std::swap;
  CastToBase(&verify_vec_)->InternalSwap(CastToBase(&other->verify_vec_));
  swap(change_idx_, other->change_idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyVecBrdReq::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JoinElectBlsInfo::InitAsDefaultInstance() {
  ::zjchain::bls::protobuf::_JoinElectBlsInfo_default_instance_._instance.get_mutable()->verify_req_ = const_cast< ::zjchain::bls::protobuf::VerifyVecBrdReq*>(
      ::zjchain::bls::protobuf::VerifyVecBrdReq::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinElectBlsInfo::kSrcHashFieldNumber;
const int JoinElectBlsInfo::kVerifyReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinElectBlsInfo::JoinElectBlsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_JoinElectBlsInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.JoinElectBlsInfo)
}
JoinElectBlsInfo::JoinElectBlsInfo(const JoinElectBlsInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  src_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_src_hash()) {
    src_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_hash_);
  }
  if (from.has_verify_req()) {
    verify_req_ = new ::zjchain::bls::protobuf::VerifyVecBrdReq(*from.verify_req_);
  } else {
    verify_req_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.JoinElectBlsInfo)
}

void JoinElectBlsInfo::SharedCtor() {
  src_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verify_req_ = NULL;
}

JoinElectBlsInfo::~JoinElectBlsInfo() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.JoinElectBlsInfo)
  SharedDtor();
}

void JoinElectBlsInfo::SharedDtor() {
  src_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete verify_req_;
}

void JoinElectBlsInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JoinElectBlsInfo::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinElectBlsInfo& JoinElectBlsInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_JoinElectBlsInfo.base);
  return *internal_default_instance();
}


void JoinElectBlsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.JoinElectBlsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      src_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(verify_req_ != NULL);
      verify_req_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JoinElectBlsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.JoinElectBlsInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes src_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_src_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zjchain.bls.protobuf.VerifyVecBrdReq verify_req = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_verify_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.JoinElectBlsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.JoinElectBlsInfo)
  return false;
#undef DO_
}

void JoinElectBlsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.JoinElectBlsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes src_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->src_hash(), output);
  }

  // optional .zjchain.bls.protobuf.VerifyVecBrdReq verify_req = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_verify_req(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.JoinElectBlsInfo)
}

::google::protobuf::uint8* JoinElectBlsInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.JoinElectBlsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes src_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->src_hash(), target);
  }

  // optional .zjchain.bls.protobuf.VerifyVecBrdReq verify_req = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_verify_req(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.JoinElectBlsInfo)
  return target;
}

size_t JoinElectBlsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.JoinElectBlsInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes src_hash = 1;
    if (has_src_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->src_hash());
    }

    // optional .zjchain.bls.protobuf.VerifyVecBrdReq verify_req = 2;
    if (has_verify_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *verify_req_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JoinElectBlsInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.JoinElectBlsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinElectBlsInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinElectBlsInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.JoinElectBlsInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.JoinElectBlsInfo)
    MergeFrom(*source);
  }
}

void JoinElectBlsInfo::MergeFrom(const JoinElectBlsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.JoinElectBlsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_src_hash();
      src_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_verify_req()->::zjchain::bls::protobuf::VerifyVecBrdReq::MergeFrom(from.verify_req());
    }
  }
}

void JoinElectBlsInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.JoinElectBlsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinElectBlsInfo::CopyFrom(const JoinElectBlsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.JoinElectBlsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinElectBlsInfo::IsInitialized() const {
  return true;
}

void JoinElectBlsInfo::Swap(JoinElectBlsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinElectBlsInfo::InternalSwap(JoinElectBlsInfo* other) {
  using std::swap;
  src_hash_.Swap(&other->src_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(verify_req_, other->verify_req_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JoinElectBlsInfo::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalPolynomial::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalPolynomial::kPolynomialFieldNumber;
const int LocalPolynomial::kChangeIdxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalPolynomial::LocalPolynomial()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_LocalPolynomial.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.LocalPolynomial)
}
LocalPolynomial::LocalPolynomial(const LocalPolynomial& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      polynomial_(from.polynomial_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  change_idx_ = from.change_idx_;
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.LocalPolynomial)
}

void LocalPolynomial::SharedCtor() {
  change_idx_ = 0u;
}

LocalPolynomial::~LocalPolynomial() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.LocalPolynomial)
  SharedDtor();
}

void LocalPolynomial::SharedDtor() {
}

void LocalPolynomial::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocalPolynomial::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalPolynomial& LocalPolynomial::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_LocalPolynomial.base);
  return *internal_default_instance();
}


void LocalPolynomial::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.LocalPolynomial)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polynomial_.Clear();
  change_idx_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LocalPolynomial::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.LocalPolynomial)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes polynomial = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_polynomial()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 change_idx = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_change_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &change_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.LocalPolynomial)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.LocalPolynomial)
  return false;
#undef DO_
}

void LocalPolynomial::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.LocalPolynomial)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes polynomial = 1;
  for (int i = 0, n = this->polynomial_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->polynomial(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 change_idx = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->change_idx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.LocalPolynomial)
}

::google::protobuf::uint8* LocalPolynomial::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.LocalPolynomial)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes polynomial = 1;
  for (int i = 0, n = this->polynomial_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->polynomial(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 change_idx = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->change_idx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.LocalPolynomial)
  return target;
}

size_t LocalPolynomial::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.LocalPolynomial)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes polynomial = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->polynomial_size());
  for (int i = 0, n = this->polynomial_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->polynomial(i));
  }

  // optional uint32 change_idx = 2 [default = 0];
  if (has_change_idx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->change_idx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalPolynomial::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.LocalPolynomial)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalPolynomial* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalPolynomial>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.LocalPolynomial)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.LocalPolynomial)
    MergeFrom(*source);
  }
}

void LocalPolynomial::MergeFrom(const LocalPolynomial& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.LocalPolynomial)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polynomial_.MergeFrom(from.polynomial_);
  if (from.has_change_idx()) {
    set_change_idx(from.change_idx());
  }
}

void LocalPolynomial::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.LocalPolynomial)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalPolynomial::CopyFrom(const LocalPolynomial& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.LocalPolynomial)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalPolynomial::IsInitialized() const {
  return true;
}

void LocalPolynomial::Swap(LocalPolynomial* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalPolynomial::InternalSwap(LocalPolynomial* other) {
  using std::swap;
  polynomial_.InternalSwap(CastToBase(&other->polynomial_));
  swap(change_idx_, other->change_idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocalPolynomial::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalBlsItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalBlsItem::kPolynomialFieldNumber;
const int LocalBlsItem::kVerifyVecFieldNumber;
const int LocalBlsItem::kValidTFieldNumber;
const int LocalBlsItem::kValidNFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalBlsItem::LocalBlsItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_LocalBlsItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.LocalBlsItem)
}
LocalBlsItem::LocalBlsItem(const LocalBlsItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      polynomial_(from.polynomial_),
      verify_vec_(from.verify_vec_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&valid_t_, &from.valid_t_,
    static_cast<size_t>(reinterpret_cast<char*>(&valid_n_) -
    reinterpret_cast<char*>(&valid_t_)) + sizeof(valid_n_));
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.LocalBlsItem)
}

void LocalBlsItem::SharedCtor() {
  ::memset(&valid_t_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&valid_n_) -
      reinterpret_cast<char*>(&valid_t_)) + sizeof(valid_n_));
}

LocalBlsItem::~LocalBlsItem() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.LocalBlsItem)
  SharedDtor();
}

void LocalBlsItem::SharedDtor() {
}

void LocalBlsItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocalBlsItem::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalBlsItem& LocalBlsItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_LocalBlsItem.base);
  return *internal_default_instance();
}


void LocalBlsItem::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.LocalBlsItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polynomial_.Clear();
  verify_vec_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&valid_t_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&valid_n_) -
        reinterpret_cast<char*>(&valid_t_)) + sizeof(valid_n_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LocalBlsItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.LocalBlsItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes polynomial = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_polynomial()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zjchain.bls.protobuf.VerifyVecItem verify_vec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_verify_vec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 valid_t = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_valid_t();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &valid_t_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 valid_n = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_valid_n();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &valid_n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.LocalBlsItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.LocalBlsItem)
  return false;
#undef DO_
}

void LocalBlsItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.LocalBlsItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes polynomial = 1;
  for (int i = 0, n = this->polynomial_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->polynomial(i), output);
  }

  // repeated .zjchain.bls.protobuf.VerifyVecItem verify_vec = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->verify_vec_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->verify_vec(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 valid_t = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->valid_t(), output);
  }

  // optional uint32 valid_n = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->valid_n(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.LocalBlsItem)
}

::google::protobuf::uint8* LocalBlsItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.LocalBlsItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes polynomial = 1;
  for (int i = 0, n = this->polynomial_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->polynomial(i), target);
  }

  // repeated .zjchain.bls.protobuf.VerifyVecItem verify_vec = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->verify_vec_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->verify_vec(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 valid_t = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->valid_t(), target);
  }

  // optional uint32 valid_n = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->valid_n(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.LocalBlsItem)
  return target;
}

size_t LocalBlsItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.LocalBlsItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes polynomial = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->polynomial_size());
  for (int i = 0, n = this->polynomial_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->polynomial(i));
  }

  // repeated .zjchain.bls.protobuf.VerifyVecItem verify_vec = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->verify_vec_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->verify_vec(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 valid_t = 3;
    if (has_valid_t()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->valid_t());
    }

    // optional uint32 valid_n = 4;
    if (has_valid_n()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->valid_n());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalBlsItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.LocalBlsItem)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalBlsItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalBlsItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.LocalBlsItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.LocalBlsItem)
    MergeFrom(*source);
  }
}

void LocalBlsItem::MergeFrom(const LocalBlsItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.LocalBlsItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polynomial_.MergeFrom(from.polynomial_);
  verify_vec_.MergeFrom(from.verify_vec_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      valid_t_ = from.valid_t_;
    }
    if (cached_has_bits & 0x00000002u) {
      valid_n_ = from.valid_n_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LocalBlsItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.LocalBlsItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalBlsItem::CopyFrom(const LocalBlsItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.LocalBlsItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalBlsItem::IsInitialized() const {
  return true;
}

void LocalBlsItem::Swap(LocalBlsItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalBlsItem::InternalSwap(LocalBlsItem* other) {
  using std::swap;
  polynomial_.InternalSwap(CastToBase(&other->polynomial_));
  CastToBase(&verify_vec_)->InternalSwap(CastToBase(&other->verify_vec_));
  swap(valid_t_, other->valid_t_);
  swap(valid_n_, other->valid_n_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocalBlsItem::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlsVerifyValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlsVerifyValue::kVerifyVecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlsVerifyValue::BlsVerifyValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_BlsVerifyValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.BlsVerifyValue)
}
BlsVerifyValue::BlsVerifyValue(const BlsVerifyValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      verify_vec_(from.verify_vec_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.BlsVerifyValue)
}

void BlsVerifyValue::SharedCtor() {
}

BlsVerifyValue::~BlsVerifyValue() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.BlsVerifyValue)
  SharedDtor();
}

void BlsVerifyValue::SharedDtor() {
}

void BlsVerifyValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BlsVerifyValue::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlsVerifyValue& BlsVerifyValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_BlsVerifyValue.base);
  return *internal_default_instance();
}


void BlsVerifyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.BlsVerifyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  verify_vec_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BlsVerifyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.BlsVerifyValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .zjchain.bls.protobuf.VerifyVecItem verify_vec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_verify_vec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.BlsVerifyValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.BlsVerifyValue)
  return false;
#undef DO_
}

void BlsVerifyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.BlsVerifyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zjchain.bls.protobuf.VerifyVecItem verify_vec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->verify_vec_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->verify_vec(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.BlsVerifyValue)
}

::google::protobuf::uint8* BlsVerifyValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.BlsVerifyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zjchain.bls.protobuf.VerifyVecItem verify_vec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->verify_vec_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->verify_vec(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.BlsVerifyValue)
  return target;
}

size_t BlsVerifyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.BlsVerifyValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zjchain.bls.protobuf.VerifyVecItem verify_vec = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->verify_vec_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->verify_vec(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlsVerifyValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.BlsVerifyValue)
  GOOGLE_DCHECK_NE(&from, this);
  const BlsVerifyValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlsVerifyValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.BlsVerifyValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.BlsVerifyValue)
    MergeFrom(*source);
  }
}

void BlsVerifyValue::MergeFrom(const BlsVerifyValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.BlsVerifyValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  verify_vec_.MergeFrom(from.verify_vec_);
}

void BlsVerifyValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.BlsVerifyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlsVerifyValue::CopyFrom(const BlsVerifyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.BlsVerifyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlsVerifyValue::IsInitialized() const {
  return true;
}

void BlsVerifyValue::Swap(BlsVerifyValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlsVerifyValue::InternalSwap(BlsVerifyValue* other) {
  using std::swap;
  CastToBase(&verify_vec_)->InternalSwap(CastToBase(&other->verify_vec_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BlsVerifyValue::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VerifyVecBrdRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyVecBrdRes::kPublicIpFieldNumber;
const int VerifyVecBrdRes::kPublicPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyVecBrdRes::VerifyVecBrdRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_VerifyVecBrdRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.VerifyVecBrdRes)
}
VerifyVecBrdRes::VerifyVecBrdRes(const VerifyVecBrdRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_ip()) {
    public_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_ip_);
  }
  public_port_ = from.public_port_;
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.VerifyVecBrdRes)
}

void VerifyVecBrdRes::SharedCtor() {
  public_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_port_ = 0u;
}

VerifyVecBrdRes::~VerifyVecBrdRes() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.VerifyVecBrdRes)
  SharedDtor();
}

void VerifyVecBrdRes::SharedDtor() {
  public_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyVecBrdRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VerifyVecBrdRes::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyVecBrdRes& VerifyVecBrdRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_VerifyVecBrdRes.base);
  return *internal_default_instance();
}


void VerifyVecBrdRes::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.VerifyVecBrdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    public_ip_.ClearNonDefaultToEmptyNoArena();
  }
  public_port_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyVecBrdRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.VerifyVecBrdRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes public_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_public_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 public_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_public_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &public_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.VerifyVecBrdRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.VerifyVecBrdRes)
  return false;
#undef DO_
}

void VerifyVecBrdRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.VerifyVecBrdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes public_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->public_ip(), output);
  }

  // optional uint32 public_port = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->public_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.VerifyVecBrdRes)
}

::google::protobuf::uint8* VerifyVecBrdRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.VerifyVecBrdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes public_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->public_ip(), target);
  }

  // optional uint32 public_port = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->public_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.VerifyVecBrdRes)
  return target;
}

size_t VerifyVecBrdRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.VerifyVecBrdRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes public_ip = 1;
    if (has_public_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->public_ip());
    }

    // optional uint32 public_port = 2;
    if (has_public_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->public_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyVecBrdRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.VerifyVecBrdRes)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyVecBrdRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyVecBrdRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.VerifyVecBrdRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.VerifyVecBrdRes)
    MergeFrom(*source);
  }
}

void VerifyVecBrdRes::MergeFrom(const VerifyVecBrdRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.VerifyVecBrdRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_public_ip();
      public_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      public_port_ = from.public_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerifyVecBrdRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.VerifyVecBrdRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyVecBrdRes::CopyFrom(const VerifyVecBrdRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.VerifyVecBrdRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyVecBrdRes::IsInitialized() const {
  return true;
}

void VerifyVecBrdRes::Swap(VerifyVecBrdRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyVecBrdRes::InternalSwap(VerifyVecBrdRes* other) {
  using std::swap;
  public_ip_.Swap(&other->public_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(public_port_, other->public_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyVecBrdRes::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SwapSecKeyItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwapSecKeyItem::kSecKeyFieldNumber;
const int SwapSecKeyItem::kSecKeyLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwapSecKeyItem::SwapSecKeyItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_SwapSecKeyItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.SwapSecKeyItem)
}
SwapSecKeyItem::SwapSecKeyItem(const SwapSecKeyItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sec_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sec_key()) {
    sec_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sec_key_);
  }
  sec_key_len_ = from.sec_key_len_;
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.SwapSecKeyItem)
}

void SwapSecKeyItem::SharedCtor() {
  sec_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sec_key_len_ = 0u;
}

SwapSecKeyItem::~SwapSecKeyItem() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.SwapSecKeyItem)
  SharedDtor();
}

void SwapSecKeyItem::SharedDtor() {
  sec_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SwapSecKeyItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SwapSecKeyItem::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SwapSecKeyItem& SwapSecKeyItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_SwapSecKeyItem.base);
  return *internal_default_instance();
}


void SwapSecKeyItem::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.SwapSecKeyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    sec_key_.ClearNonDefaultToEmptyNoArena();
  }
  sec_key_len_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SwapSecKeyItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.SwapSecKeyItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sec_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sec_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sec_key_len = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sec_key_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sec_key_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.SwapSecKeyItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.SwapSecKeyItem)
  return false;
#undef DO_
}

void SwapSecKeyItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.SwapSecKeyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sec_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sec_key(), output);
  }

  // optional uint32 sec_key_len = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sec_key_len(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.SwapSecKeyItem)
}

::google::protobuf::uint8* SwapSecKeyItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.SwapSecKeyItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sec_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sec_key(), target);
  }

  // optional uint32 sec_key_len = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sec_key_len(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.SwapSecKeyItem)
  return target;
}

size_t SwapSecKeyItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.SwapSecKeyItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes sec_key = 1;
    if (has_sec_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sec_key());
    }

    // optional uint32 sec_key_len = 2;
    if (has_sec_key_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sec_key_len());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwapSecKeyItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.SwapSecKeyItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SwapSecKeyItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwapSecKeyItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.SwapSecKeyItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.SwapSecKeyItem)
    MergeFrom(*source);
  }
}

void SwapSecKeyItem::MergeFrom(const SwapSecKeyItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.SwapSecKeyItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sec_key();
      sec_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sec_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      sec_key_len_ = from.sec_key_len_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SwapSecKeyItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.SwapSecKeyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwapSecKeyItem::CopyFrom(const SwapSecKeyItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.SwapSecKeyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwapSecKeyItem::IsInitialized() const {
  return true;
}

void SwapSecKeyItem::Swap(SwapSecKeyItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwapSecKeyItem::InternalSwap(SwapSecKeyItem* other) {
  using std::swap;
  sec_key_.Swap(&other->sec_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sec_key_len_, other->sec_key_len_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SwapSecKeyItem::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SwapSecKeyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwapSecKeyReq::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwapSecKeyReq::SwapSecKeyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_SwapSecKeyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.SwapSecKeyReq)
}
SwapSecKeyReq::SwapSecKeyReq(const SwapSecKeyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.SwapSecKeyReq)
}

void SwapSecKeyReq::SharedCtor() {
}

SwapSecKeyReq::~SwapSecKeyReq() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.SwapSecKeyReq)
  SharedDtor();
}

void SwapSecKeyReq::SharedDtor() {
}

void SwapSecKeyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SwapSecKeyReq::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SwapSecKeyReq& SwapSecKeyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_SwapSecKeyReq.base);
  return *internal_default_instance();
}


void SwapSecKeyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.SwapSecKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SwapSecKeyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.SwapSecKeyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .zjchain.bls.protobuf.SwapSecKeyItem keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.SwapSecKeyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.SwapSecKeyReq)
  return false;
#undef DO_
}

void SwapSecKeyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.SwapSecKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zjchain.bls.protobuf.SwapSecKeyItem keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.SwapSecKeyReq)
}

::google::protobuf::uint8* SwapSecKeyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.SwapSecKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zjchain.bls.protobuf.SwapSecKeyItem keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.SwapSecKeyReq)
  return target;
}

size_t SwapSecKeyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.SwapSecKeyReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zjchain.bls.protobuf.SwapSecKeyItem keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwapSecKeyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.SwapSecKeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SwapSecKeyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwapSecKeyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.SwapSecKeyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.SwapSecKeyReq)
    MergeFrom(*source);
  }
}

void SwapSecKeyReq::MergeFrom(const SwapSecKeyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.SwapSecKeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void SwapSecKeyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.SwapSecKeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwapSecKeyReq::CopyFrom(const SwapSecKeyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.SwapSecKeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwapSecKeyReq::IsInitialized() const {
  return true;
}

void SwapSecKeyReq::Swap(SwapSecKeyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwapSecKeyReq::InternalSwap(SwapSecKeyReq* other) {
  using std::swap;
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SwapSecKeyReq::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SwapSecKeyRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwapSecKeyRes::kIndexFieldNumber;
const int SwapSecKeyRes::kSecKeyFieldNumber;
const int SwapSecKeyRes::kSecKeyLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwapSecKeyRes::SwapSecKeyRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_SwapSecKeyRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.SwapSecKeyRes)
}
SwapSecKeyRes::SwapSecKeyRes(const SwapSecKeyRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sec_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sec_key()) {
    sec_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sec_key_);
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&sec_key_len_) -
    reinterpret_cast<char*>(&index_)) + sizeof(sec_key_len_));
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.SwapSecKeyRes)
}

void SwapSecKeyRes::SharedCtor() {
  sec_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sec_key_len_) -
      reinterpret_cast<char*>(&index_)) + sizeof(sec_key_len_));
}

SwapSecKeyRes::~SwapSecKeyRes() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.SwapSecKeyRes)
  SharedDtor();
}

void SwapSecKeyRes::SharedDtor() {
  sec_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SwapSecKeyRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SwapSecKeyRes::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SwapSecKeyRes& SwapSecKeyRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_SwapSecKeyRes.base);
  return *internal_default_instance();
}


void SwapSecKeyRes::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.SwapSecKeyRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    sec_key_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sec_key_len_) -
        reinterpret_cast<char*>(&index_)) + sizeof(sec_key_len_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SwapSecKeyRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.SwapSecKeyRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sec_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sec_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sec_key_len = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sec_key_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sec_key_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.SwapSecKeyRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.SwapSecKeyRes)
  return false;
#undef DO_
}

void SwapSecKeyRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.SwapSecKeyRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 index = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // optional bytes sec_key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sec_key(), output);
  }

  // optional uint32 sec_key_len = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sec_key_len(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.SwapSecKeyRes)
}

::google::protobuf::uint8* SwapSecKeyRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.SwapSecKeyRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // optional bytes sec_key = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->sec_key(), target);
  }

  // optional uint32 sec_key_len = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sec_key_len(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.SwapSecKeyRes)
  return target;
}

size_t SwapSecKeyRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.SwapSecKeyRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes sec_key = 2;
    if (has_sec_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sec_key());
    }

    // optional uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

    // optional uint32 sec_key_len = 3;
    if (has_sec_key_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sec_key_len());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwapSecKeyRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.SwapSecKeyRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SwapSecKeyRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwapSecKeyRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.SwapSecKeyRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.SwapSecKeyRes)
    MergeFrom(*source);
  }
}

void SwapSecKeyRes::MergeFrom(const SwapSecKeyRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.SwapSecKeyRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sec_key();
      sec_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sec_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000004u) {
      sec_key_len_ = from.sec_key_len_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SwapSecKeyRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.SwapSecKeyRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwapSecKeyRes::CopyFrom(const SwapSecKeyRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.SwapSecKeyRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwapSecKeyRes::IsInitialized() const {
  return true;
}

void SwapSecKeyRes::Swap(SwapSecKeyRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwapSecKeyRes::InternalSwap(SwapSecKeyRes* other) {
  using std::swap;
  sec_key_.Swap(&other->sec_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  swap(sec_key_len_, other->sec_key_len_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SwapSecKeyRes::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AgainstParticipant::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AgainstParticipant::kAgainstIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AgainstParticipant::AgainstParticipant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_AgainstParticipant.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.AgainstParticipant)
}
AgainstParticipant::AgainstParticipant(const AgainstParticipant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  against_index_ = from.against_index_;
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.AgainstParticipant)
}

void AgainstParticipant::SharedCtor() {
  against_index_ = 0u;
}

AgainstParticipant::~AgainstParticipant() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.AgainstParticipant)
  SharedDtor();
}

void AgainstParticipant::SharedDtor() {
}

void AgainstParticipant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AgainstParticipant::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AgainstParticipant& AgainstParticipant::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_AgainstParticipant.base);
  return *internal_default_instance();
}


void AgainstParticipant::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.AgainstParticipant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  against_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AgainstParticipant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.AgainstParticipant)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 against_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_against_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &against_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.AgainstParticipant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.AgainstParticipant)
  return false;
#undef DO_
}

void AgainstParticipant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.AgainstParticipant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 against_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->against_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.AgainstParticipant)
}

::google::protobuf::uint8* AgainstParticipant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.AgainstParticipant)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 against_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->against_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.AgainstParticipant)
  return target;
}

size_t AgainstParticipant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.AgainstParticipant)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 against_index = 1;
  if (has_against_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->against_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgainstParticipant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.AgainstParticipant)
  GOOGLE_DCHECK_NE(&from, this);
  const AgainstParticipant* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AgainstParticipant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.AgainstParticipant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.AgainstParticipant)
    MergeFrom(*source);
  }
}

void AgainstParticipant::MergeFrom(const AgainstParticipant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.AgainstParticipant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_against_index()) {
    set_against_index(from.against_index());
  }
}

void AgainstParticipant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.AgainstParticipant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgainstParticipant::CopyFrom(const AgainstParticipant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.AgainstParticipant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgainstParticipant::IsInitialized() const {
  return true;
}

void AgainstParticipant::Swap(AgainstParticipant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AgainstParticipant::InternalSwap(AgainstParticipant* other) {
  using std::swap;
  swap(against_index_, other->against_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AgainstParticipant::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FinishBroadcast::InitAsDefaultInstance() {
  ::zjchain::bls::protobuf::_FinishBroadcast_default_instance_._instance.get_mutable()->pubkey_ = const_cast< ::zjchain::bls::protobuf::BlsPublicKey*>(
      ::zjchain::bls::protobuf::BlsPublicKey::internal_default_instance());
  ::zjchain::bls::protobuf::_FinishBroadcast_default_instance_._instance.get_mutable()->common_pubkey_ = const_cast< ::zjchain::bls::protobuf::BlsPublicKey*>(
      ::zjchain::bls::protobuf::BlsPublicKey::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinishBroadcast::kBitmapFieldNumber;
const int FinishBroadcast::kPubkeyFieldNumber;
const int FinishBroadcast::kCommonPubkeyFieldNumber;
const int FinishBroadcast::kNetworkIdFieldNumber;
const int FinishBroadcast::kBlsSignXFieldNumber;
const int FinishBroadcast::kBlsSignYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinishBroadcast::FinishBroadcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_FinishBroadcast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.FinishBroadcast)
}
FinishBroadcast::FinishBroadcast(const FinishBroadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      bitmap_(from.bitmap_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bls_sign_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bls_sign_x()) {
    bls_sign_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bls_sign_x_);
  }
  bls_sign_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bls_sign_y()) {
    bls_sign_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bls_sign_y_);
  }
  if (from.has_pubkey()) {
    pubkey_ = new ::zjchain::bls::protobuf::BlsPublicKey(*from.pubkey_);
  } else {
    pubkey_ = NULL;
  }
  if (from.has_common_pubkey()) {
    common_pubkey_ = new ::zjchain::bls::protobuf::BlsPublicKey(*from.common_pubkey_);
  } else {
    common_pubkey_ = NULL;
  }
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.FinishBroadcast)
}

void FinishBroadcast::SharedCtor() {
  bls_sign_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bls_sign_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pubkey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&network_id_) -
      reinterpret_cast<char*>(&pubkey_)) + sizeof(network_id_));
}

FinishBroadcast::~FinishBroadcast() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.FinishBroadcast)
  SharedDtor();
}

void FinishBroadcast::SharedDtor() {
  bls_sign_x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bls_sign_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pubkey_;
  if (this != internal_default_instance()) delete common_pubkey_;
}

void FinishBroadcast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FinishBroadcast::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FinishBroadcast& FinishBroadcast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_FinishBroadcast.base);
  return *internal_default_instance();
}


void FinishBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.FinishBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bitmap_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      bls_sign_x_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      bls_sign_y_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(pubkey_ != NULL);
      pubkey_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(common_pubkey_ != NULL);
      common_pubkey_->Clear();
    }
  }
  network_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FinishBroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.FinishBroadcast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 bitmap = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_bitmap())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_bitmap())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zjchain.bls.protobuf.BlsPublicKey pubkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zjchain.bls.protobuf.BlsPublicKey common_pubkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 network_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_network_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bls_sign_x = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bls_sign_x()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bls_sign_y = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bls_sign_y()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.FinishBroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.FinishBroadcast)
  return false;
#undef DO_
}

void FinishBroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.FinishBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 bitmap = 1;
  for (int i = 0, n = this->bitmap_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->bitmap(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .zjchain.bls.protobuf.BlsPublicKey pubkey = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pubkey(), output);
  }

  // optional .zjchain.bls.protobuf.BlsPublicKey common_pubkey = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_common_pubkey(), output);
  }

  // optional uint32 network_id = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->network_id(), output);
  }

  // optional bytes bls_sign_x = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->bls_sign_x(), output);
  }

  // optional bytes bls_sign_y = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->bls_sign_y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.FinishBroadcast)
}

::google::protobuf::uint8* FinishBroadcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.FinishBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 bitmap = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->bitmap_, target);

  cached_has_bits = _has_bits_[0];
  // optional .zjchain.bls.protobuf.BlsPublicKey pubkey = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pubkey(), deterministic, target);
  }

  // optional .zjchain.bls.protobuf.BlsPublicKey common_pubkey = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_common_pubkey(), deterministic, target);
  }

  // optional uint32 network_id = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->network_id(), target);
  }

  // optional bytes bls_sign_x = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->bls_sign_x(), target);
  }

  // optional bytes bls_sign_y = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->bls_sign_y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.FinishBroadcast)
  return target;
}

size_t FinishBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.FinishBroadcast)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 bitmap = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->bitmap_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->bitmap_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes bls_sign_x = 5;
    if (has_bls_sign_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bls_sign_x());
    }

    // optional bytes bls_sign_y = 6;
    if (has_bls_sign_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bls_sign_y());
    }

    // optional .zjchain.bls.protobuf.BlsPublicKey pubkey = 2;
    if (has_pubkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pubkey_);
    }

    // optional .zjchain.bls.protobuf.BlsPublicKey common_pubkey = 3;
    if (has_common_pubkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *common_pubkey_);
    }

    // optional uint32 network_id = 4;
    if (has_network_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FinishBroadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.FinishBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const FinishBroadcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FinishBroadcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.FinishBroadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.FinishBroadcast)
    MergeFrom(*source);
  }
}

void FinishBroadcast::MergeFrom(const FinishBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.FinishBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bitmap_.MergeFrom(from.bitmap_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bls_sign_x();
      bls_sign_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bls_sign_x_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bls_sign_y();
      bls_sign_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bls_sign_y_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_pubkey()->::zjchain::bls::protobuf::BlsPublicKey::MergeFrom(from.pubkey());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_common_pubkey()->::zjchain::bls::protobuf::BlsPublicKey::MergeFrom(from.common_pubkey());
    }
    if (cached_has_bits & 0x00000010u) {
      network_id_ = from.network_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FinishBroadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.FinishBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishBroadcast::CopyFrom(const FinishBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.FinishBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishBroadcast::IsInitialized() const {
  return true;
}

void FinishBroadcast::Swap(FinishBroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinishBroadcast::InternalSwap(FinishBroadcast* other) {
  using std::swap;
  bitmap_.InternalSwap(&other->bitmap_);
  bls_sign_x_.Swap(&other->bls_sign_x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bls_sign_y_.Swap(&other->bls_sign_y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pubkey_, other->pubkey_);
  swap(common_pubkey_, other->common_pubkey_);
  swap(network_id_, other->network_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FinishBroadcast::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckVerfiyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckVerfiyReq::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckVerfiyReq::CheckVerfiyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_CheckVerfiyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.CheckVerfiyReq)
}
CheckVerfiyReq::CheckVerfiyReq(const CheckVerfiyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.CheckVerfiyReq)
}

void CheckVerfiyReq::SharedCtor() {
  index_ = 0u;
}

CheckVerfiyReq::~CheckVerfiyReq() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.CheckVerfiyReq)
  SharedDtor();
}

void CheckVerfiyReq::SharedDtor() {
}

void CheckVerfiyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckVerfiyReq::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckVerfiyReq& CheckVerfiyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_CheckVerfiyReq.base);
  return *internal_default_instance();
}


void CheckVerfiyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.CheckVerfiyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckVerfiyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.CheckVerfiyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.CheckVerfiyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.CheckVerfiyReq)
  return false;
#undef DO_
}

void CheckVerfiyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.CheckVerfiyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.CheckVerfiyReq)
}

::google::protobuf::uint8* CheckVerfiyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.CheckVerfiyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.CheckVerfiyReq)
  return target;
}

size_t CheckVerfiyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.CheckVerfiyReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 index = 1;
  if (has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckVerfiyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.CheckVerfiyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckVerfiyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckVerfiyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.CheckVerfiyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.CheckVerfiyReq)
    MergeFrom(*source);
  }
}

void CheckVerfiyReq::MergeFrom(const CheckVerfiyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.CheckVerfiyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    set_index(from.index());
  }
}

void CheckVerfiyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.CheckVerfiyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckVerfiyReq::CopyFrom(const CheckVerfiyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.CheckVerfiyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckVerfiyReq::IsInitialized() const {
  return true;
}

void CheckVerfiyReq::Swap(CheckVerfiyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckVerfiyReq::InternalSwap(CheckVerfiyReq* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckVerfiyReq::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckSwapKeyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckSwapKeyReq::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckSwapKeyReq::CheckSwapKeyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_CheckSwapKeyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.CheckSwapKeyReq)
}
CheckSwapKeyReq::CheckSwapKeyReq(const CheckSwapKeyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.CheckSwapKeyReq)
}

void CheckSwapKeyReq::SharedCtor() {
  index_ = 0u;
}

CheckSwapKeyReq::~CheckSwapKeyReq() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.CheckSwapKeyReq)
  SharedDtor();
}

void CheckSwapKeyReq::SharedDtor() {
}

void CheckSwapKeyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckSwapKeyReq::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckSwapKeyReq& CheckSwapKeyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_CheckSwapKeyReq.base);
  return *internal_default_instance();
}


void CheckSwapKeyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.CheckSwapKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckSwapKeyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.CheckSwapKeyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.CheckSwapKeyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.CheckSwapKeyReq)
  return false;
#undef DO_
}

void CheckSwapKeyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.CheckSwapKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.CheckSwapKeyReq)
}

::google::protobuf::uint8* CheckSwapKeyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.CheckSwapKeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.CheckSwapKeyReq)
  return target;
}

size_t CheckSwapKeyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.CheckSwapKeyReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 index = 1;
  if (has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckSwapKeyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.CheckSwapKeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckSwapKeyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckSwapKeyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.CheckSwapKeyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.CheckSwapKeyReq)
    MergeFrom(*source);
  }
}

void CheckSwapKeyReq::MergeFrom(const CheckSwapKeyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.CheckSwapKeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    set_index(from.index());
  }
}

void CheckSwapKeyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.CheckSwapKeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckSwapKeyReq::CopyFrom(const CheckSwapKeyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.CheckSwapKeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckSwapKeyReq::IsInitialized() const {
  return true;
}

void CheckSwapKeyReq::Swap(CheckSwapKeyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckSwapKeyReq::InternalSwap(CheckSwapKeyReq* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckSwapKeyReq::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlsMessage::InitAsDefaultInstance() {
  ::zjchain::bls::protobuf::_BlsMessage_default_instance_._instance.get_mutable()->verify_brd_ = const_cast< ::zjchain::bls::protobuf::VerifyVecBrdReq*>(
      ::zjchain::bls::protobuf::VerifyVecBrdReq::internal_default_instance());
  ::zjchain::bls::protobuf::_BlsMessage_default_instance_._instance.get_mutable()->swap_req_ = const_cast< ::zjchain::bls::protobuf::SwapSecKeyReq*>(
      ::zjchain::bls::protobuf::SwapSecKeyReq::internal_default_instance());
  ::zjchain::bls::protobuf::_BlsMessage_default_instance_._instance.get_mutable()->finish_req_ = const_cast< ::zjchain::bls::protobuf::FinishBroadcast*>(
      ::zjchain::bls::protobuf::FinishBroadcast::internal_default_instance());
  ::zjchain::bls::protobuf::_BlsMessage_default_instance_._instance.get_mutable()->check_verify_req_ = const_cast< ::zjchain::bls::protobuf::CheckVerfiyReq*>(
      ::zjchain::bls::protobuf::CheckVerfiyReq::internal_default_instance());
  ::zjchain::bls::protobuf::_BlsMessage_default_instance_._instance.get_mutable()->check_swapkey_req_ = const_cast< ::zjchain::bls::protobuf::CheckSwapKeyReq*>(
      ::zjchain::bls::protobuf::CheckSwapKeyReq::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlsMessage::kVerifyBrdFieldNumber;
const int BlsMessage::kSwapReqFieldNumber;
const int BlsMessage::kFinishReqFieldNumber;
const int BlsMessage::kCheckVerifyReqFieldNumber;
const int BlsMessage::kCheckSwapkeyReqFieldNumber;
const int BlsMessage::kIndexFieldNumber;
const int BlsMessage::kElectHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlsMessage::BlsMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fbls_2eproto::scc_info_BlsMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.bls.protobuf.BlsMessage)
}
BlsMessage::BlsMessage(const BlsMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_verify_brd()) {
    verify_brd_ = new ::zjchain::bls::protobuf::VerifyVecBrdReq(*from.verify_brd_);
  } else {
    verify_brd_ = NULL;
  }
  if (from.has_swap_req()) {
    swap_req_ = new ::zjchain::bls::protobuf::SwapSecKeyReq(*from.swap_req_);
  } else {
    swap_req_ = NULL;
  }
  if (from.has_finish_req()) {
    finish_req_ = new ::zjchain::bls::protobuf::FinishBroadcast(*from.finish_req_);
  } else {
    finish_req_ = NULL;
  }
  if (from.has_check_verify_req()) {
    check_verify_req_ = new ::zjchain::bls::protobuf::CheckVerfiyReq(*from.check_verify_req_);
  } else {
    check_verify_req_ = NULL;
  }
  if (from.has_check_swapkey_req()) {
    check_swapkey_req_ = new ::zjchain::bls::protobuf::CheckSwapKeyReq(*from.check_swapkey_req_);
  } else {
    check_swapkey_req_ = NULL;
  }
  ::memcpy(&elect_height_, &from.elect_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&elect_height_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:zjchain.bls.protobuf.BlsMessage)
}

void BlsMessage::SharedCtor() {
  ::memset(&verify_brd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&verify_brd_)) + sizeof(index_));
}

BlsMessage::~BlsMessage() {
  // @@protoc_insertion_point(destructor:zjchain.bls.protobuf.BlsMessage)
  SharedDtor();
}

void BlsMessage::SharedDtor() {
  if (this != internal_default_instance()) delete verify_brd_;
  if (this != internal_default_instance()) delete swap_req_;
  if (this != internal_default_instance()) delete finish_req_;
  if (this != internal_default_instance()) delete check_verify_req_;
  if (this != internal_default_instance()) delete check_swapkey_req_;
}

void BlsMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BlsMessage::descriptor() {
  ::protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlsMessage& BlsMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fbls_2eproto::scc_info_BlsMessage.base);
  return *internal_default_instance();
}


void BlsMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.bls.protobuf.BlsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(verify_brd_ != NULL);
      verify_brd_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(swap_req_ != NULL);
      swap_req_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(finish_req_ != NULL);
      finish_req_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(check_verify_req_ != NULL);
      check_verify_req_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(check_swapkey_req_ != NULL);
      check_swapkey_req_->Clear();
    }
  }
  if (cached_has_bits & 96u) {
    ::memset(&elect_height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&index_) -
        reinterpret_cast<char*>(&elect_height_)) + sizeof(index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BlsMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.bls.protobuf.BlsMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .zjchain.bls.protobuf.VerifyVecBrdReq verify_brd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_verify_brd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zjchain.bls.protobuf.SwapSecKeyReq swap_req = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_swap_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zjchain.bls.protobuf.FinishBroadcast finish_req = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_finish_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zjchain.bls.protobuf.CheckVerfiyReq check_verify_req = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_check_verify_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zjchain.bls.protobuf.CheckSwapKeyReq check_swapkey_req = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_check_swapkey_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 index = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 elect_height = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_elect_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elect_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.bls.protobuf.BlsMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.bls.protobuf.BlsMessage)
  return false;
#undef DO_
}

void BlsMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.bls.protobuf.BlsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zjchain.bls.protobuf.VerifyVecBrdReq verify_brd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_verify_brd(), output);
  }

  // optional .zjchain.bls.protobuf.SwapSecKeyReq swap_req = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_swap_req(), output);
  }

  // optional .zjchain.bls.protobuf.FinishBroadcast finish_req = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_finish_req(), output);
  }

  // optional .zjchain.bls.protobuf.CheckVerfiyReq check_verify_req = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_check_verify_req(), output);
  }

  // optional .zjchain.bls.protobuf.CheckSwapKeyReq check_swapkey_req = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_check_swapkey_req(), output);
  }

  // optional uint32 index = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->index(), output);
  }

  // optional uint64 elect_height = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->elect_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.bls.protobuf.BlsMessage)
}

::google::protobuf::uint8* BlsMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.bls.protobuf.BlsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zjchain.bls.protobuf.VerifyVecBrdReq verify_brd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_verify_brd(), deterministic, target);
  }

  // optional .zjchain.bls.protobuf.SwapSecKeyReq swap_req = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_swap_req(), deterministic, target);
  }

  // optional .zjchain.bls.protobuf.FinishBroadcast finish_req = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_finish_req(), deterministic, target);
  }

  // optional .zjchain.bls.protobuf.CheckVerfiyReq check_verify_req = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_check_verify_req(), deterministic, target);
  }

  // optional .zjchain.bls.protobuf.CheckSwapKeyReq check_swapkey_req = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_check_swapkey_req(), deterministic, target);
  }

  // optional uint32 index = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->index(), target);
  }

  // optional uint64 elect_height = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->elect_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.bls.protobuf.BlsMessage)
  return target;
}

size_t BlsMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.bls.protobuf.BlsMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional .zjchain.bls.protobuf.VerifyVecBrdReq verify_brd = 1;
    if (has_verify_brd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *verify_brd_);
    }

    // optional .zjchain.bls.protobuf.SwapSecKeyReq swap_req = 2;
    if (has_swap_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *swap_req_);
    }

    // optional .zjchain.bls.protobuf.FinishBroadcast finish_req = 3;
    if (has_finish_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *finish_req_);
    }

    // optional .zjchain.bls.protobuf.CheckVerfiyReq check_verify_req = 4;
    if (has_check_verify_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *check_verify_req_);
    }

    // optional .zjchain.bls.protobuf.CheckSwapKeyReq check_swapkey_req = 5;
    if (has_check_swapkey_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *check_swapkey_req_);
    }

    // optional uint64 elect_height = 7;
    if (has_elect_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->elect_height());
    }

    // optional uint32 index = 6;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlsMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.bls.protobuf.BlsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BlsMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlsMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.bls.protobuf.BlsMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.bls.protobuf.BlsMessage)
    MergeFrom(*source);
  }
}

void BlsMessage::MergeFrom(const BlsMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.bls.protobuf.BlsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_verify_brd()->::zjchain::bls::protobuf::VerifyVecBrdReq::MergeFrom(from.verify_brd());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_swap_req()->::zjchain::bls::protobuf::SwapSecKeyReq::MergeFrom(from.swap_req());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_finish_req()->::zjchain::bls::protobuf::FinishBroadcast::MergeFrom(from.finish_req());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_check_verify_req()->::zjchain::bls::protobuf::CheckVerfiyReq::MergeFrom(from.check_verify_req());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_check_swapkey_req()->::zjchain::bls::protobuf::CheckSwapKeyReq::MergeFrom(from.check_swapkey_req());
    }
    if (cached_has_bits & 0x00000020u) {
      elect_height_ = from.elect_height_;
    }
    if (cached_has_bits & 0x00000040u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BlsMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.bls.protobuf.BlsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlsMessage::CopyFrom(const BlsMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.bls.protobuf.BlsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlsMessage::IsInitialized() const {
  return true;
}

void BlsMessage::Swap(BlsMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlsMessage::InternalSwap(BlsMessage* other) {
  using std::swap;
  swap(verify_brd_, other->verify_brd_);
  swap(swap_req_, other->swap_req_);
  swap(finish_req_, other->finish_req_);
  swap(check_verify_req_, other->check_verify_req_);
  swap(check_swapkey_req_, other->check_swapkey_req_);
  swap(elect_height_, other->elect_height_);
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BlsMessage::GetMetadata() const {
  protobuf_protos_2fbls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fbls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace bls
}  // namespace zjchain
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::VerifyVecItem* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::VerifyVecItem >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::VerifyVecItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::BlsPublicKey* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::BlsPublicKey >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::BlsPublicKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::VerifyVecBrdReq* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::VerifyVecBrdReq >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::VerifyVecBrdReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::JoinElectBlsInfo* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::JoinElectBlsInfo >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::JoinElectBlsInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::LocalPolynomial* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::LocalPolynomial >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::LocalPolynomial >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::LocalBlsItem* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::LocalBlsItem >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::LocalBlsItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::BlsVerifyValue* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::BlsVerifyValue >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::BlsVerifyValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::VerifyVecBrdRes* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::VerifyVecBrdRes >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::VerifyVecBrdRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::SwapSecKeyItem* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::SwapSecKeyItem >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::SwapSecKeyItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::SwapSecKeyReq* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::SwapSecKeyReq >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::SwapSecKeyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::SwapSecKeyRes* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::SwapSecKeyRes >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::SwapSecKeyRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::AgainstParticipant* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::AgainstParticipant >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::AgainstParticipant >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::FinishBroadcast* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::FinishBroadcast >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::FinishBroadcast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::CheckVerfiyReq* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::CheckVerfiyReq >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::CheckVerfiyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::CheckSwapKeyReq* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::CheckSwapKeyReq >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::CheckSwapKeyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::bls::protobuf::BlsMessage* Arena::CreateMaybeMessage< ::zjchain::bls::protobuf::BlsMessage >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::bls::protobuf::BlsMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
