// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/pools.proto

#ifndef PROTOBUF_INCLUDED_protos_2fpools_2eproto
#define PROTOBUF_INCLUDED_protos_2fpools_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fpools_2eproto 

namespace protobuf_protos_2fpools_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protos_2fpools_2eproto
namespace zjchain {
namespace pools {
namespace protobuf {
class AreaInfo;
class AreaInfoDefaultTypeInternal;
extern AreaInfoDefaultTypeInternal _AreaInfo_default_instance_;
class CrossShardStatistic;
class CrossShardStatisticDefaultTypeInternal;
extern CrossShardStatisticDefaultTypeInternal _CrossShardStatistic_default_instance_;
class CrossShardStatisticItem;
class CrossShardStatisticItemDefaultTypeInternal;
extern CrossShardStatisticItemDefaultTypeInternal _CrossShardStatisticItem_default_instance_;
class ElectStatistic;
class ElectStatisticDefaultTypeInternal;
extern ElectStatisticDefaultTypeInternal _ElectStatistic_default_instance_;
class JoinElectNode;
class JoinElectNodeDefaultTypeInternal;
extern JoinElectNodeDefaultTypeInternal _JoinElectNode_default_instance_;
class PoolLatestInfo;
class PoolLatestInfoDefaultTypeInternal;
extern PoolLatestInfoDefaultTypeInternal _PoolLatestInfo_default_instance_;
class PoolStatisticItem;
class PoolStatisticItemDefaultTypeInternal;
extern PoolStatisticItemDefaultTypeInternal _PoolStatisticItem_default_instance_;
class SyncPoolsMaxHeight;
class SyncPoolsMaxHeightDefaultTypeInternal;
extern SyncPoolsMaxHeightDefaultTypeInternal _SyncPoolsMaxHeight_default_instance_;
class ToTxHeights;
class ToTxHeightsDefaultTypeInternal;
extern ToTxHeightsDefaultTypeInternal _ToTxHeights_default_instance_;
class ToTxMessage;
class ToTxMessageDefaultTypeInternal;
extern ToTxMessageDefaultTypeInternal _ToTxMessage_default_instance_;
class ToTxMessageItem;
class ToTxMessageItemDefaultTypeInternal;
extern ToTxMessageItemDefaultTypeInternal _ToTxMessageItem_default_instance_;
class TxMessage;
class TxMessageDefaultTypeInternal;
extern TxMessageDefaultTypeInternal _TxMessage_default_instance_;
}  // namespace protobuf
}  // namespace pools
}  // namespace zjchain
namespace google {
namespace protobuf {
template<> ::zjchain::pools::protobuf::AreaInfo* Arena::CreateMaybeMessage<::zjchain::pools::protobuf::AreaInfo>(Arena*);
template<> ::zjchain::pools::protobuf::CrossShardStatistic* Arena::CreateMaybeMessage<::zjchain::pools::protobuf::CrossShardStatistic>(Arena*);
template<> ::zjchain::pools::protobuf::CrossShardStatisticItem* Arena::CreateMaybeMessage<::zjchain::pools::protobuf::CrossShardStatisticItem>(Arena*);
template<> ::zjchain::pools::protobuf::ElectStatistic* Arena::CreateMaybeMessage<::zjchain::pools::protobuf::ElectStatistic>(Arena*);
template<> ::zjchain::pools::protobuf::JoinElectNode* Arena::CreateMaybeMessage<::zjchain::pools::protobuf::JoinElectNode>(Arena*);
template<> ::zjchain::pools::protobuf::PoolLatestInfo* Arena::CreateMaybeMessage<::zjchain::pools::protobuf::PoolLatestInfo>(Arena*);
template<> ::zjchain::pools::protobuf::PoolStatisticItem* Arena::CreateMaybeMessage<::zjchain::pools::protobuf::PoolStatisticItem>(Arena*);
template<> ::zjchain::pools::protobuf::SyncPoolsMaxHeight* Arena::CreateMaybeMessage<::zjchain::pools::protobuf::SyncPoolsMaxHeight>(Arena*);
template<> ::zjchain::pools::protobuf::ToTxHeights* Arena::CreateMaybeMessage<::zjchain::pools::protobuf::ToTxHeights>(Arena*);
template<> ::zjchain::pools::protobuf::ToTxMessage* Arena::CreateMaybeMessage<::zjchain::pools::protobuf::ToTxMessage>(Arena*);
template<> ::zjchain::pools::protobuf::ToTxMessageItem* Arena::CreateMaybeMessage<::zjchain::pools::protobuf::ToTxMessageItem>(Arena*);
template<> ::zjchain::pools::protobuf::TxMessage* Arena::CreateMaybeMessage<::zjchain::pools::protobuf::TxMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zjchain {
namespace pools {
namespace protobuf {

enum StepType {
  kNormalFrom = 0,
  kNormalTo = 1,
  kConsensusRootElectShard = 2,
  kConsensusRootTimeBlock = 3,
  kConsensusCreateGenesisAcount = 4,
  kConsensusLocalTos = 5,
  kContractUserCreateCall = 6,
  kContractUserCall = 7,
  kContractExcute = 8,
  kRootCreateAddress = 9,
  kRootCreateAddressCrossSharding = 11,
  kContractGasPrepayment = 12,
  kStatistic = 13,
  kJoinElect = 14,
  kCreateLibrary = 15,
  kCross = 16
};
bool StepType_IsValid(int value);
const StepType StepType_MIN = kNormalFrom;
const StepType StepType_MAX = kCross;
const int StepType_ARRAYSIZE = StepType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StepType_descriptor();
inline const ::std::string& StepType_Name(StepType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StepType_descriptor(), value);
}
inline bool StepType_Parse(
    const ::std::string& name, StepType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StepType>(
    StepType_descriptor(), name, value);
}
// ===================================================================

class ToTxHeights : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.pools.protobuf.ToTxHeights) */ {
 public:
  ToTxHeights();
  virtual ~ToTxHeights();

  ToTxHeights(const ToTxHeights& from);

  inline ToTxHeights& operator=(const ToTxHeights& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTxHeights(ToTxHeights&& from) noexcept
    : ToTxHeights() {
    *this = ::std::move(from);
  }

  inline ToTxHeights& operator=(ToTxHeights&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTxHeights& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToTxHeights* internal_default_instance() {
    return reinterpret_cast<const ToTxHeights*>(
               &_ToTxHeights_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ToTxHeights* other);
  friend void swap(ToTxHeights& a, ToTxHeights& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTxHeights* New() const final {
    return CreateMaybeMessage<ToTxHeights>(NULL);
  }

  ToTxHeights* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToTxHeights>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToTxHeights& from);
  void MergeFrom(const ToTxHeights& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToTxHeights* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 heights = 2;
  int heights_size() const;
  void clear_heights();
  static const int kHeightsFieldNumber = 2;
  ::google::protobuf::uint64 heights(int index) const;
  void set_heights(int index, ::google::protobuf::uint64 value);
  void add_heights(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      heights() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_heights();

  // optional bytes tos_hash = 4;
  bool has_tos_hash() const;
  void clear_tos_hash();
  static const int kTosHashFieldNumber = 4;
  const ::std::string& tos_hash() const;
  void set_tos_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_tos_hash(::std::string&& value);
  #endif
  void set_tos_hash(const char* value);
  void set_tos_hash(const void* value, size_t size);
  ::std::string* mutable_tos_hash();
  ::std::string* release_tos_hash();
  void set_allocated_tos_hash(::std::string* tos_hash);

  // optional bytes leader_id = 5;
  bool has_leader_id() const;
  void clear_leader_id();
  static const int kLeaderIdFieldNumber = 5;
  const ::std::string& leader_id() const;
  void set_leader_id(const ::std::string& value);
  #if LANG_CXX11
  void set_leader_id(::std::string&& value);
  #endif
  void set_leader_id(const char* value);
  void set_leader_id(const void* value, size_t size);
  ::std::string* mutable_leader_id();
  ::std::string* release_leader_id();
  void set_allocated_leader_id(::std::string* leader_id);

  // optional uint64 block_height = 3;
  bool has_block_height() const;
  void clear_block_height();
  static const int kBlockHeightFieldNumber = 3;
  ::google::protobuf::uint64 block_height() const;
  void set_block_height(::google::protobuf::uint64 value);

  // optional uint32 sharding_id = 1;
  bool has_sharding_id() const;
  void clear_sharding_id();
  static const int kShardingIdFieldNumber = 1;
  ::google::protobuf::uint32 sharding_id() const;
  void set_sharding_id(::google::protobuf::uint32 value);

  // optional uint32 tx_count = 7;
  bool has_tx_count() const;
  void clear_tx_count();
  static const int kTxCountFieldNumber = 7;
  ::google::protobuf::uint32 tx_count() const;
  void set_tx_count(::google::protobuf::uint32 value);

  // optional uint64 elelct_height = 6;
  bool has_elelct_height() const;
  void clear_elelct_height();
  static const int kElelctHeightFieldNumber = 6;
  ::google::protobuf::uint64 elelct_height() const;
  void set_elelct_height(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zjchain.pools.protobuf.ToTxHeights)
 private:
  void set_has_sharding_id();
  void clear_has_sharding_id();
  void set_has_block_height();
  void clear_has_block_height();
  void set_has_tos_hash();
  void clear_has_tos_hash();
  void set_has_leader_id();
  void clear_has_leader_id();
  void set_has_elelct_height();
  void clear_has_elelct_height();
  void set_has_tx_count();
  void clear_has_tx_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > heights_;
  ::google::protobuf::internal::ArenaStringPtr tos_hash_;
  ::google::protobuf::internal::ArenaStringPtr leader_id_;
  ::google::protobuf::uint64 block_height_;
  ::google::protobuf::uint32 sharding_id_;
  ::google::protobuf::uint32 tx_count_;
  ::google::protobuf::uint64 elelct_height_;
  friend struct ::protobuf_protos_2fpools_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToTxMessageItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.pools.protobuf.ToTxMessageItem) */ {
 public:
  ToTxMessageItem();
  virtual ~ToTxMessageItem();

  ToTxMessageItem(const ToTxMessageItem& from);

  inline ToTxMessageItem& operator=(const ToTxMessageItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTxMessageItem(ToTxMessageItem&& from) noexcept
    : ToTxMessageItem() {
    *this = ::std::move(from);
  }

  inline ToTxMessageItem& operator=(ToTxMessageItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTxMessageItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToTxMessageItem* internal_default_instance() {
    return reinterpret_cast<const ToTxMessageItem*>(
               &_ToTxMessageItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ToTxMessageItem* other);
  friend void swap(ToTxMessageItem& a, ToTxMessageItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTxMessageItem* New() const final {
    return CreateMaybeMessage<ToTxMessageItem>(NULL);
  }

  ToTxMessageItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToTxMessageItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToTxMessageItem& from);
  void MergeFrom(const ToTxMessageItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToTxMessageItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes des = 1;
  bool has_des() const;
  void clear_des();
  static const int kDesFieldNumber = 1;
  const ::std::string& des() const;
  void set_des(const ::std::string& value);
  #if LANG_CXX11
  void set_des(::std::string&& value);
  #endif
  void set_des(const char* value);
  void set_des(const void* value, size_t size);
  ::std::string* mutable_des();
  ::std::string* release_des();
  void set_allocated_des(::std::string* des);

  // optional bytes library_bytes = 6;
  bool has_library_bytes() const;
  void clear_library_bytes();
  static const int kLibraryBytesFieldNumber = 6;
  const ::std::string& library_bytes() const;
  void set_library_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_library_bytes(::std::string&& value);
  #endif
  void set_library_bytes(const char* value);
  void set_library_bytes(const void* value, size_t size);
  ::std::string* mutable_library_bytes();
  ::std::string* release_library_bytes();
  void set_allocated_library_bytes(::std::string* library_bytes);

  // optional uint64 amount = 2;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 2;
  ::google::protobuf::uint64 amount() const;
  void set_amount(::google::protobuf::uint64 value);

  // optional uint32 sharding_id = 3;
  bool has_sharding_id() const;
  void clear_sharding_id();
  static const int kShardingIdFieldNumber = 3;
  ::google::protobuf::uint32 sharding_id() const;
  void set_sharding_id(::google::protobuf::uint32 value);

  // optional uint32 pool_index = 4;
  bool has_pool_index() const;
  void clear_pool_index();
  static const int kPoolIndexFieldNumber = 4;
  ::google::protobuf::uint32 pool_index() const;
  void set_pool_index(::google::protobuf::uint32 value);

  // optional int32 step = 5;
  bool has_step() const;
  void clear_step();
  static const int kStepFieldNumber = 5;
  ::google::protobuf::int32 step() const;
  void set_step(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zjchain.pools.protobuf.ToTxMessageItem)
 private:
  void set_has_des();
  void clear_has_des();
  void set_has_amount();
  void clear_has_amount();
  void set_has_sharding_id();
  void clear_has_sharding_id();
  void set_has_pool_index();
  void clear_has_pool_index();
  void set_has_step();
  void clear_has_step();
  void set_has_library_bytes();
  void clear_has_library_bytes();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr des_;
  ::google::protobuf::internal::ArenaStringPtr library_bytes_;
  ::google::protobuf::uint64 amount_;
  ::google::protobuf::uint32 sharding_id_;
  ::google::protobuf::uint32 pool_index_;
  ::google::protobuf::int32 step_;
  friend struct ::protobuf_protos_2fpools_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ToTxMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.pools.protobuf.ToTxMessage) */ {
 public:
  ToTxMessage();
  virtual ~ToTxMessage();

  ToTxMessage(const ToTxMessage& from);

  inline ToTxMessage& operator=(const ToTxMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ToTxMessage(ToTxMessage&& from) noexcept
    : ToTxMessage() {
    *this = ::std::move(from);
  }

  inline ToTxMessage& operator=(ToTxMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ToTxMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ToTxMessage* internal_default_instance() {
    return reinterpret_cast<const ToTxMessage*>(
               &_ToTxMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ToTxMessage* other);
  friend void swap(ToTxMessage& a, ToTxMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ToTxMessage* New() const final {
    return CreateMaybeMessage<ToTxMessage>(NULL);
  }

  ToTxMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ToTxMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ToTxMessage& from);
  void MergeFrom(const ToTxMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ToTxMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zjchain.pools.protobuf.ToTxMessageItem tos = 2;
  int tos_size() const;
  void clear_tos();
  static const int kTosFieldNumber = 2;
  ::zjchain::pools::protobuf::ToTxMessageItem* mutable_tos(int index);
  ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::ToTxMessageItem >*
      mutable_tos();
  const ::zjchain::pools::protobuf::ToTxMessageItem& tos(int index) const;
  ::zjchain::pools::protobuf::ToTxMessageItem* add_tos();
  const ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::ToTxMessageItem >&
      tos() const;

  // optional bytes heights_hash = 1;
  bool has_heights_hash() const;
  void clear_heights_hash();
  static const int kHeightsHashFieldNumber = 1;
  const ::std::string& heights_hash() const;
  void set_heights_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_heights_hash(::std::string&& value);
  #endif
  void set_heights_hash(const char* value);
  void set_heights_hash(const void* value, size_t size);
  ::std::string* mutable_heights_hash();
  ::std::string* release_heights_hash();
  void set_allocated_heights_hash(::std::string* heights_hash);

  // optional .zjchain.pools.protobuf.ToTxHeights to_heights = 3;
  bool has_to_heights() const;
  void clear_to_heights();
  static const int kToHeightsFieldNumber = 3;
  private:
  const ::zjchain::pools::protobuf::ToTxHeights& _internal_to_heights() const;
  public:
  const ::zjchain::pools::protobuf::ToTxHeights& to_heights() const;
  ::zjchain::pools::protobuf::ToTxHeights* release_to_heights();
  ::zjchain::pools::protobuf::ToTxHeights* mutable_to_heights();
  void set_allocated_to_heights(::zjchain::pools::protobuf::ToTxHeights* to_heights);

  // @@protoc_insertion_point(class_scope:zjchain.pools.protobuf.ToTxMessage)
 private:
  void set_has_heights_hash();
  void clear_has_heights_hash();
  void set_has_to_heights();
  void clear_has_to_heights();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::ToTxMessageItem > tos_;
  ::google::protobuf::internal::ArenaStringPtr heights_hash_;
  ::zjchain::pools::protobuf::ToTxHeights* to_heights_;
  friend struct ::protobuf_protos_2fpools_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PoolLatestInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.pools.protobuf.PoolLatestInfo) */ {
 public:
  PoolLatestInfo();
  virtual ~PoolLatestInfo();

  PoolLatestInfo(const PoolLatestInfo& from);

  inline PoolLatestInfo& operator=(const PoolLatestInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PoolLatestInfo(PoolLatestInfo&& from) noexcept
    : PoolLatestInfo() {
    *this = ::std::move(from);
  }

  inline PoolLatestInfo& operator=(PoolLatestInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PoolLatestInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PoolLatestInfo* internal_default_instance() {
    return reinterpret_cast<const PoolLatestInfo*>(
               &_PoolLatestInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PoolLatestInfo* other);
  friend void swap(PoolLatestInfo& a, PoolLatestInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PoolLatestInfo* New() const final {
    return CreateMaybeMessage<PoolLatestInfo>(NULL);
  }

  PoolLatestInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PoolLatestInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PoolLatestInfo& from);
  void MergeFrom(const PoolLatestInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PoolLatestInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes hash = 2;
  bool has_hash() const;
  void clear_hash();
  static const int kHashFieldNumber = 2;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_hash(::std::string&& value);
  #endif
  void set_hash(const char* value);
  void set_hash(const void* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // optional uint64 height = 1;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 1;
  ::google::protobuf::uint64 height() const;
  void set_height(::google::protobuf::uint64 value);

  // optional uint64 synced_height = 3;
  bool has_synced_height() const;
  void clear_synced_height();
  static const int kSyncedHeightFieldNumber = 3;
  ::google::protobuf::uint64 synced_height() const;
  void set_synced_height(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zjchain.pools.protobuf.PoolLatestInfo)
 private:
  void set_has_height();
  void clear_has_height();
  void set_has_hash();
  void clear_has_hash();
  void set_has_synced_height();
  void clear_has_synced_height();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::uint64 height_;
  ::google::protobuf::uint64 synced_height_;
  friend struct ::protobuf_protos_2fpools_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AreaInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.pools.protobuf.AreaInfo) */ {
 public:
  AreaInfo();
  virtual ~AreaInfo();

  AreaInfo(const AreaInfo& from);

  inline AreaInfo& operator=(const AreaInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AreaInfo(AreaInfo&& from) noexcept
    : AreaInfo() {
    *this = ::std::move(from);
  }

  inline AreaInfo& operator=(AreaInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AreaInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AreaInfo* internal_default_instance() {
    return reinterpret_cast<const AreaInfo*>(
               &_AreaInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AreaInfo* other);
  friend void swap(AreaInfo& a, AreaInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AreaInfo* New() const final {
    return CreateMaybeMessage<AreaInfo>(NULL);
  }

  AreaInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AreaInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AreaInfo& from);
  void MergeFrom(const AreaInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AreaInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zjchain.pools.protobuf.AreaInfo)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_protos_2fpools_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PoolStatisticItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.pools.protobuf.PoolStatisticItem) */ {
 public:
  PoolStatisticItem();
  virtual ~PoolStatisticItem();

  PoolStatisticItem(const PoolStatisticItem& from);

  inline PoolStatisticItem& operator=(const PoolStatisticItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PoolStatisticItem(PoolStatisticItem&& from) noexcept
    : PoolStatisticItem() {
    *this = ::std::move(from);
  }

  inline PoolStatisticItem& operator=(PoolStatisticItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PoolStatisticItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PoolStatisticItem* internal_default_instance() {
    return reinterpret_cast<const PoolStatisticItem*>(
               &_PoolStatisticItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PoolStatisticItem* other);
  friend void swap(PoolStatisticItem& a, PoolStatisticItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PoolStatisticItem* New() const final {
    return CreateMaybeMessage<PoolStatisticItem>(NULL);
  }

  PoolStatisticItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PoolStatisticItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PoolStatisticItem& from);
  void MergeFrom(const PoolStatisticItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PoolStatisticItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 tx_count = 1;
  int tx_count_size() const;
  void clear_tx_count();
  static const int kTxCountFieldNumber = 1;
  ::google::protobuf::uint32 tx_count(int index) const;
  void set_tx_count(int index, ::google::protobuf::uint32 value);
  void add_tx_count(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tx_count() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tx_count();

  // repeated uint64 stokes = 2;
  int stokes_size() const;
  void clear_stokes();
  static const int kStokesFieldNumber = 2;
  ::google::protobuf::uint64 stokes(int index) const;
  void set_stokes(int index, ::google::protobuf::uint64 value);
  void add_stokes(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      stokes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_stokes();

  // repeated .zjchain.pools.protobuf.AreaInfo area_point = 4;
  int area_point_size() const;
  void clear_area_point();
  static const int kAreaPointFieldNumber = 4;
  ::zjchain::pools::protobuf::AreaInfo* mutable_area_point(int index);
  ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::AreaInfo >*
      mutable_area_point();
  const ::zjchain::pools::protobuf::AreaInfo& area_point(int index) const;
  ::zjchain::pools::protobuf::AreaInfo* add_area_point();
  const ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::AreaInfo >&
      area_point() const;

  // optional uint64 elect_height = 3;
  bool has_elect_height() const;
  void clear_elect_height();
  static const int kElectHeightFieldNumber = 3;
  ::google::protobuf::uint64 elect_height() const;
  void set_elect_height(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zjchain.pools.protobuf.PoolStatisticItem)
 private:
  void set_has_elect_height();
  void clear_has_elect_height();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tx_count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > stokes_;
  ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::AreaInfo > area_point_;
  ::google::protobuf::uint64 elect_height_;
  friend struct ::protobuf_protos_2fpools_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinElectNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.pools.protobuf.JoinElectNode) */ {
 public:
  JoinElectNode();
  virtual ~JoinElectNode();

  JoinElectNode(const JoinElectNode& from);

  inline JoinElectNode& operator=(const JoinElectNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinElectNode(JoinElectNode&& from) noexcept
    : JoinElectNode() {
    *this = ::std::move(from);
  }

  inline JoinElectNode& operator=(JoinElectNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinElectNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinElectNode* internal_default_instance() {
    return reinterpret_cast<const JoinElectNode*>(
               &_JoinElectNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(JoinElectNode* other);
  friend void swap(JoinElectNode& a, JoinElectNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinElectNode* New() const final {
    return CreateMaybeMessage<JoinElectNode>(NULL);
  }

  JoinElectNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JoinElectNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JoinElectNode& from);
  void MergeFrom(const JoinElectNode& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JoinElectNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const void* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional uint64 stoke = 2;
  bool has_stoke() const;
  void clear_stoke();
  static const int kStokeFieldNumber = 2;
  ::google::protobuf::uint64 stoke() const;
  void set_stoke(::google::protobuf::uint64 value);

  // optional uint32 shard = 3;
  bool has_shard() const;
  void clear_shard();
  static const int kShardFieldNumber = 3;
  ::google::protobuf::uint32 shard() const;
  void set_shard(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zjchain.pools.protobuf.JoinElectNode)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_stoke();
  void clear_has_stoke();
  void set_has_shard();
  void clear_has_shard();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::uint64 stoke_;
  ::google::protobuf::uint32 shard_;
  friend struct ::protobuf_protos_2fpools_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CrossShardStatisticItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.pools.protobuf.CrossShardStatisticItem) */ {
 public:
  CrossShardStatisticItem();
  virtual ~CrossShardStatisticItem();

  CrossShardStatisticItem(const CrossShardStatisticItem& from);

  inline CrossShardStatisticItem& operator=(const CrossShardStatisticItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CrossShardStatisticItem(CrossShardStatisticItem&& from) noexcept
    : CrossShardStatisticItem() {
    *this = ::std::move(from);
  }

  inline CrossShardStatisticItem& operator=(CrossShardStatisticItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CrossShardStatisticItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CrossShardStatisticItem* internal_default_instance() {
    return reinterpret_cast<const CrossShardStatisticItem*>(
               &_CrossShardStatisticItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CrossShardStatisticItem* other);
  friend void swap(CrossShardStatisticItem& a, CrossShardStatisticItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CrossShardStatisticItem* New() const final {
    return CreateMaybeMessage<CrossShardStatisticItem>(NULL);
  }

  CrossShardStatisticItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CrossShardStatisticItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CrossShardStatisticItem& from);
  void MergeFrom(const CrossShardStatisticItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CrossShardStatisticItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 src_shard = 1;
  bool has_src_shard() const;
  void clear_src_shard();
  static const int kSrcShardFieldNumber = 1;
  ::google::protobuf::uint32 src_shard() const;
  void set_src_shard(::google::protobuf::uint32 value);

  // optional uint32 src_pool = 2;
  bool has_src_pool() const;
  void clear_src_pool();
  static const int kSrcPoolFieldNumber = 2;
  ::google::protobuf::uint32 src_pool() const;
  void set_src_pool(::google::protobuf::uint32 value);

  // optional uint64 height = 3;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::uint64 height() const;
  void set_height(::google::protobuf::uint64 value);

  // optional uint32 des_shard = 4;
  bool has_des_shard() const;
  void clear_des_shard();
  static const int kDesShardFieldNumber = 4;
  ::google::protobuf::uint32 des_shard() const;
  void set_des_shard(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zjchain.pools.protobuf.CrossShardStatisticItem)
 private:
  void set_has_src_shard();
  void clear_has_src_shard();
  void set_has_src_pool();
  void clear_has_src_pool();
  void set_has_height();
  void clear_has_height();
  void set_has_des_shard();
  void clear_has_des_shard();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 src_shard_;
  ::google::protobuf::uint32 src_pool_;
  ::google::protobuf::uint64 height_;
  ::google::protobuf::uint32 des_shard_;
  friend struct ::protobuf_protos_2fpools_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CrossShardStatistic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.pools.protobuf.CrossShardStatistic) */ {
 public:
  CrossShardStatistic();
  virtual ~CrossShardStatistic();

  CrossShardStatistic(const CrossShardStatistic& from);

  inline CrossShardStatistic& operator=(const CrossShardStatistic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CrossShardStatistic(CrossShardStatistic&& from) noexcept
    : CrossShardStatistic() {
    *this = ::std::move(from);
  }

  inline CrossShardStatistic& operator=(CrossShardStatistic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CrossShardStatistic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CrossShardStatistic* internal_default_instance() {
    return reinterpret_cast<const CrossShardStatistic*>(
               &_CrossShardStatistic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CrossShardStatistic* other);
  friend void swap(CrossShardStatistic& a, CrossShardStatistic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CrossShardStatistic* New() const final {
    return CreateMaybeMessage<CrossShardStatistic>(NULL);
  }

  CrossShardStatistic* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CrossShardStatistic>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CrossShardStatistic& from);
  void MergeFrom(const CrossShardStatistic& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CrossShardStatistic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zjchain.pools.protobuf.CrossShardStatisticItem crosses = 1;
  int crosses_size() const;
  void clear_crosses();
  static const int kCrossesFieldNumber = 1;
  ::zjchain::pools::protobuf::CrossShardStatisticItem* mutable_crosses(int index);
  ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::CrossShardStatisticItem >*
      mutable_crosses();
  const ::zjchain::pools::protobuf::CrossShardStatisticItem& crosses(int index) const;
  ::zjchain::pools::protobuf::CrossShardStatisticItem* add_crosses();
  const ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::CrossShardStatisticItem >&
      crosses() const;

  // @@protoc_insertion_point(class_scope:zjchain.pools.protobuf.CrossShardStatistic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::CrossShardStatisticItem > crosses_;
  friend struct ::protobuf_protos_2fpools_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElectStatistic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.pools.protobuf.ElectStatistic) */ {
 public:
  ElectStatistic();
  virtual ~ElectStatistic();

  ElectStatistic(const ElectStatistic& from);

  inline ElectStatistic& operator=(const ElectStatistic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElectStatistic(ElectStatistic&& from) noexcept
    : ElectStatistic() {
    *this = ::std::move(from);
  }

  inline ElectStatistic& operator=(ElectStatistic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ElectStatistic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ElectStatistic* internal_default_instance() {
    return reinterpret_cast<const ElectStatistic*>(
               &_ElectStatistic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ElectStatistic* other);
  friend void swap(ElectStatistic& a, ElectStatistic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElectStatistic* New() const final {
    return CreateMaybeMessage<ElectStatistic>(NULL);
  }

  ElectStatistic* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ElectStatistic>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ElectStatistic& from);
  void MergeFrom(const ElectStatistic& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ElectStatistic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zjchain.pools.protobuf.PoolStatisticItem statistics = 1;
  int statistics_size() const;
  void clear_statistics();
  static const int kStatisticsFieldNumber = 1;
  ::zjchain::pools::protobuf::PoolStatisticItem* mutable_statistics(int index);
  ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::PoolStatisticItem >*
      mutable_statistics();
  const ::zjchain::pools::protobuf::PoolStatisticItem& statistics(int index) const;
  ::zjchain::pools::protobuf::PoolStatisticItem* add_statistics();
  const ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::PoolStatisticItem >&
      statistics() const;

  // repeated .zjchain.pools.protobuf.JoinElectNode join_elect_nodes = 3;
  int join_elect_nodes_size() const;
  void clear_join_elect_nodes();
  static const int kJoinElectNodesFieldNumber = 3;
  ::zjchain::pools::protobuf::JoinElectNode* mutable_join_elect_nodes(int index);
  ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::JoinElectNode >*
      mutable_join_elect_nodes();
  const ::zjchain::pools::protobuf::JoinElectNode& join_elect_nodes(int index) const;
  ::zjchain::pools::protobuf::JoinElectNode* add_join_elect_nodes();
  const ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::JoinElectNode >&
      join_elect_nodes() const;

  // repeated uint32 lof_leaders = 6;
  int lof_leaders_size() const;
  void clear_lof_leaders();
  static const int kLofLeadersFieldNumber = 6;
  ::google::protobuf::uint32 lof_leaders(int index) const;
  void set_lof_leaders(int index, ::google::protobuf::uint32 value);
  void add_lof_leaders(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      lof_leaders() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_lof_leaders();

  // optional .zjchain.pools.protobuf.ToTxHeights heights = 2;
  bool has_heights() const;
  void clear_heights();
  static const int kHeightsFieldNumber = 2;
  private:
  const ::zjchain::pools::protobuf::ToTxHeights& _internal_heights() const;
  public:
  const ::zjchain::pools::protobuf::ToTxHeights& heights() const;
  ::zjchain::pools::protobuf::ToTxHeights* release_heights();
  ::zjchain::pools::protobuf::ToTxHeights* mutable_heights();
  void set_allocated_heights(::zjchain::pools::protobuf::ToTxHeights* heights);

  // optional uint64 gas_amount = 5;
  bool has_gas_amount() const;
  void clear_gas_amount();
  static const int kGasAmountFieldNumber = 5;
  ::google::protobuf::uint64 gas_amount() const;
  void set_gas_amount(::google::protobuf::uint64 value);

  // optional uint32 sharding_id = 4;
  bool has_sharding_id() const;
  void clear_sharding_id();
  static const int kShardingIdFieldNumber = 4;
  ::google::protobuf::uint32 sharding_id() const;
  void set_sharding_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zjchain.pools.protobuf.ElectStatistic)
 private:
  void set_has_heights();
  void clear_has_heights();
  void set_has_sharding_id();
  void clear_has_sharding_id();
  void set_has_gas_amount();
  void clear_has_gas_amount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::PoolStatisticItem > statistics_;
  ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::JoinElectNode > join_elect_nodes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lof_leaders_;
  ::zjchain::pools::protobuf::ToTxHeights* heights_;
  ::google::protobuf::uint64 gas_amount_;
  ::google::protobuf::uint32 sharding_id_;
  friend struct ::protobuf_protos_2fpools_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncPoolsMaxHeight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.pools.protobuf.SyncPoolsMaxHeight) */ {
 public:
  SyncPoolsMaxHeight();
  virtual ~SyncPoolsMaxHeight();

  SyncPoolsMaxHeight(const SyncPoolsMaxHeight& from);

  inline SyncPoolsMaxHeight& operator=(const SyncPoolsMaxHeight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncPoolsMaxHeight(SyncPoolsMaxHeight&& from) noexcept
    : SyncPoolsMaxHeight() {
    *this = ::std::move(from);
  }

  inline SyncPoolsMaxHeight& operator=(SyncPoolsMaxHeight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncPoolsMaxHeight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncPoolsMaxHeight* internal_default_instance() {
    return reinterpret_cast<const SyncPoolsMaxHeight*>(
               &_SyncPoolsMaxHeight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(SyncPoolsMaxHeight* other);
  friend void swap(SyncPoolsMaxHeight& a, SyncPoolsMaxHeight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncPoolsMaxHeight* New() const final {
    return CreateMaybeMessage<SyncPoolsMaxHeight>(NULL);
  }

  SyncPoolsMaxHeight* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SyncPoolsMaxHeight>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SyncPoolsMaxHeight& from);
  void MergeFrom(const SyncPoolsMaxHeight& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncPoolsMaxHeight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 heights = 2;
  int heights_size() const;
  void clear_heights();
  static const int kHeightsFieldNumber = 2;
  ::google::protobuf::uint64 heights(int index) const;
  void set_heights(int index, ::google::protobuf::uint64 value);
  void add_heights(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      heights() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_heights();

  // optional bool req = 1 [default = false];
  bool has_req() const;
  void clear_req();
  static const int kReqFieldNumber = 1;
  bool req() const;
  void set_req(bool value);

  // @@protoc_insertion_point(class_scope:zjchain.pools.protobuf.SyncPoolsMaxHeight)
 private:
  void set_has_req();
  void clear_has_req();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > heights_;
  bool req_;
  friend struct ::protobuf_protos_2fpools_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TxMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.pools.protobuf.TxMessage) */ {
 public:
  TxMessage();
  virtual ~TxMessage();

  TxMessage(const TxMessage& from);

  inline TxMessage& operator=(const TxMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TxMessage(TxMessage&& from) noexcept
    : TxMessage() {
    *this = ::std::move(from);
  }

  inline TxMessage& operator=(TxMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TxMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TxMessage* internal_default_instance() {
    return reinterpret_cast<const TxMessage*>(
               &_TxMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(TxMessage* other);
  friend void swap(TxMessage& a, TxMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TxMessage* New() const final {
    return CreateMaybeMessage<TxMessage>(NULL);
  }

  TxMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TxMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TxMessage& from);
  void MergeFrom(const TxMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TxMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes gid = 2;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 2;
  const ::std::string& gid() const;
  void set_gid(const ::std::string& value);
  #if LANG_CXX11
  void set_gid(::std::string&& value);
  #endif
  void set_gid(const char* value);
  void set_gid(const void* value, size_t size);
  ::std::string* mutable_gid();
  ::std::string* release_gid();
  void set_allocated_gid(::std::string* gid);

  // optional bytes pubkey = 3;
  bool has_pubkey() const;
  void clear_pubkey();
  static const int kPubkeyFieldNumber = 3;
  const ::std::string& pubkey() const;
  void set_pubkey(const ::std::string& value);
  #if LANG_CXX11
  void set_pubkey(::std::string&& value);
  #endif
  void set_pubkey(const char* value);
  void set_pubkey(const void* value, size_t size);
  ::std::string* mutable_pubkey();
  ::std::string* release_pubkey();
  void set_allocated_pubkey(::std::string* pubkey);

  // optional bytes key = 6;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 6;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes value = 7;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 7;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional bytes to = 8;
  bool has_to() const;
  void clear_to();
  static const int kToFieldNumber = 8;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  #if LANG_CXX11
  void set_to(::std::string&& value);
  #endif
  void set_to(const char* value);
  void set_to(const void* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // optional bytes contract_code = 12;
  bool has_contract_code() const;
  void clear_contract_code();
  static const int kContractCodeFieldNumber = 12;
  const ::std::string& contract_code() const;
  void set_contract_code(const ::std::string& value);
  #if LANG_CXX11
  void set_contract_code(::std::string&& value);
  #endif
  void set_contract_code(const char* value);
  void set_contract_code(const void* value, size_t size);
  ::std::string* mutable_contract_code();
  ::std::string* release_contract_code();
  void set_allocated_contract_code(::std::string* contract_code);

  // optional bytes contract_input = 13;
  bool has_contract_input() const;
  void clear_contract_input();
  static const int kContractInputFieldNumber = 13;
  const ::std::string& contract_input() const;
  void set_contract_input(const ::std::string& value);
  #if LANG_CXX11
  void set_contract_input(::std::string&& value);
  #endif
  void set_contract_input(const char* value);
  void set_contract_input(const void* value, size_t size);
  ::std::string* mutable_contract_input();
  ::std::string* release_contract_input();
  void set_allocated_contract_input(::std::string* contract_input);

  // optional uint64 gas_limit = 4;
  bool has_gas_limit() const;
  void clear_gas_limit();
  static const int kGasLimitFieldNumber = 4;
  ::google::protobuf::uint64 gas_limit() const;
  void set_gas_limit(::google::protobuf::uint64 value);

  // optional uint64 gas_price = 5;
  bool has_gas_price() const;
  void clear_gas_price();
  static const int kGasPriceFieldNumber = 5;
  ::google::protobuf::uint64 gas_price() const;
  void set_gas_price(::google::protobuf::uint64 value);

  // optional uint32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional .zjchain.pools.protobuf.StepType step = 10 [default = kNormalFrom];
  bool has_step() const;
  void clear_step();
  static const int kStepFieldNumber = 10;
  ::zjchain::pools::protobuf::StepType step() const;
  void set_step(::zjchain::pools::protobuf::StepType value);

  // optional uint64 amount = 9;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 9;
  ::google::protobuf::uint64 amount() const;
  void set_amount(::google::protobuf::uint64 value);

  // optional uint64 contract_prepayment = 11;
  bool has_contract_prepayment() const;
  void clear_contract_prepayment();
  static const int kContractPrepaymentFieldNumber = 11;
  ::google::protobuf::uint64 contract_prepayment() const;
  void set_contract_prepayment(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zjchain.pools.protobuf.TxMessage)
 private:
  void set_has_version();
  void clear_has_version();
  void set_has_gid();
  void clear_has_gid();
  void set_has_pubkey();
  void clear_has_pubkey();
  void set_has_gas_limit();
  void clear_has_gas_limit();
  void set_has_gas_price();
  void clear_has_gas_price();
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();
  void set_has_to();
  void clear_has_to();
  void set_has_amount();
  void clear_has_amount();
  void set_has_step();
  void clear_has_step();
  void set_has_contract_prepayment();
  void clear_has_contract_prepayment();
  void set_has_contract_code();
  void clear_has_contract_code();
  void set_has_contract_input();
  void clear_has_contract_input();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gid_;
  ::google::protobuf::internal::ArenaStringPtr pubkey_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  ::google::protobuf::internal::ArenaStringPtr contract_code_;
  ::google::protobuf::internal::ArenaStringPtr contract_input_;
  ::google::protobuf::uint64 gas_limit_;
  ::google::protobuf::uint64 gas_price_;
  ::google::protobuf::uint32 version_;
  int step_;
  ::google::protobuf::uint64 amount_;
  ::google::protobuf::uint64 contract_prepayment_;
  friend struct ::protobuf_protos_2fpools_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ToTxHeights

// optional uint32 sharding_id = 1;
inline bool ToTxHeights::has_sharding_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ToTxHeights::set_has_sharding_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ToTxHeights::clear_has_sharding_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ToTxHeights::clear_sharding_id() {
  sharding_id_ = 0u;
  clear_has_sharding_id();
}
inline ::google::protobuf::uint32 ToTxHeights::sharding_id() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxHeights.sharding_id)
  return sharding_id_;
}
inline void ToTxHeights::set_sharding_id(::google::protobuf::uint32 value) {
  set_has_sharding_id();
  sharding_id_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxHeights.sharding_id)
}

// repeated uint64 heights = 2;
inline int ToTxHeights::heights_size() const {
  return heights_.size();
}
inline void ToTxHeights::clear_heights() {
  heights_.Clear();
}
inline ::google::protobuf::uint64 ToTxHeights::heights(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxHeights.heights)
  return heights_.Get(index);
}
inline void ToTxHeights::set_heights(int index, ::google::protobuf::uint64 value) {
  heights_.Set(index, value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxHeights.heights)
}
inline void ToTxHeights::add_heights(::google::protobuf::uint64 value) {
  heights_.Add(value);
  // @@protoc_insertion_point(field_add:zjchain.pools.protobuf.ToTxHeights.heights)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ToTxHeights::heights() const {
  // @@protoc_insertion_point(field_list:zjchain.pools.protobuf.ToTxHeights.heights)
  return heights_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ToTxHeights::mutable_heights() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.pools.protobuf.ToTxHeights.heights)
  return &heights_;
}

// optional uint64 block_height = 3;
inline bool ToTxHeights::has_block_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ToTxHeights::set_has_block_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ToTxHeights::clear_has_block_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ToTxHeights::clear_block_height() {
  block_height_ = GOOGLE_ULONGLONG(0);
  clear_has_block_height();
}
inline ::google::protobuf::uint64 ToTxHeights::block_height() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxHeights.block_height)
  return block_height_;
}
inline void ToTxHeights::set_block_height(::google::protobuf::uint64 value) {
  set_has_block_height();
  block_height_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxHeights.block_height)
}

// optional bytes tos_hash = 4;
inline bool ToTxHeights::has_tos_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToTxHeights::set_has_tos_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToTxHeights::clear_has_tos_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToTxHeights::clear_tos_hash() {
  tos_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tos_hash();
}
inline const ::std::string& ToTxHeights::tos_hash() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxHeights.tos_hash)
  return tos_hash_.GetNoArena();
}
inline void ToTxHeights::set_tos_hash(const ::std::string& value) {
  set_has_tos_hash();
  tos_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxHeights.tos_hash)
}
#if LANG_CXX11
inline void ToTxHeights::set_tos_hash(::std::string&& value) {
  set_has_tos_hash();
  tos_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.ToTxHeights.tos_hash)
}
#endif
inline void ToTxHeights::set_tos_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tos_hash();
  tos_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.ToTxHeights.tos_hash)
}
inline void ToTxHeights::set_tos_hash(const void* value, size_t size) {
  set_has_tos_hash();
  tos_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.ToTxHeights.tos_hash)
}
inline ::std::string* ToTxHeights::mutable_tos_hash() {
  set_has_tos_hash();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.ToTxHeights.tos_hash)
  return tos_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ToTxHeights::release_tos_hash() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.ToTxHeights.tos_hash)
  if (!has_tos_hash()) {
    return NULL;
  }
  clear_has_tos_hash();
  return tos_hash_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToTxHeights::set_allocated_tos_hash(::std::string* tos_hash) {
  if (tos_hash != NULL) {
    set_has_tos_hash();
  } else {
    clear_has_tos_hash();
  }
  tos_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tos_hash);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.ToTxHeights.tos_hash)
}

// optional bytes leader_id = 5;
inline bool ToTxHeights::has_leader_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToTxHeights::set_has_leader_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToTxHeights::clear_has_leader_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToTxHeights::clear_leader_id() {
  leader_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_leader_id();
}
inline const ::std::string& ToTxHeights::leader_id() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxHeights.leader_id)
  return leader_id_.GetNoArena();
}
inline void ToTxHeights::set_leader_id(const ::std::string& value) {
  set_has_leader_id();
  leader_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxHeights.leader_id)
}
#if LANG_CXX11
inline void ToTxHeights::set_leader_id(::std::string&& value) {
  set_has_leader_id();
  leader_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.ToTxHeights.leader_id)
}
#endif
inline void ToTxHeights::set_leader_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_leader_id();
  leader_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.ToTxHeights.leader_id)
}
inline void ToTxHeights::set_leader_id(const void* value, size_t size) {
  set_has_leader_id();
  leader_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.ToTxHeights.leader_id)
}
inline ::std::string* ToTxHeights::mutable_leader_id() {
  set_has_leader_id();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.ToTxHeights.leader_id)
  return leader_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ToTxHeights::release_leader_id() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.ToTxHeights.leader_id)
  if (!has_leader_id()) {
    return NULL;
  }
  clear_has_leader_id();
  return leader_id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToTxHeights::set_allocated_leader_id(::std::string* leader_id) {
  if (leader_id != NULL) {
    set_has_leader_id();
  } else {
    clear_has_leader_id();
  }
  leader_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leader_id);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.ToTxHeights.leader_id)
}

// optional uint64 elelct_height = 6;
inline bool ToTxHeights::has_elelct_height() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ToTxHeights::set_has_elelct_height() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ToTxHeights::clear_has_elelct_height() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ToTxHeights::clear_elelct_height() {
  elelct_height_ = GOOGLE_ULONGLONG(0);
  clear_has_elelct_height();
}
inline ::google::protobuf::uint64 ToTxHeights::elelct_height() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxHeights.elelct_height)
  return elelct_height_;
}
inline void ToTxHeights::set_elelct_height(::google::protobuf::uint64 value) {
  set_has_elelct_height();
  elelct_height_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxHeights.elelct_height)
}

// optional uint32 tx_count = 7;
inline bool ToTxHeights::has_tx_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ToTxHeights::set_has_tx_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ToTxHeights::clear_has_tx_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ToTxHeights::clear_tx_count() {
  tx_count_ = 0u;
  clear_has_tx_count();
}
inline ::google::protobuf::uint32 ToTxHeights::tx_count() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxHeights.tx_count)
  return tx_count_;
}
inline void ToTxHeights::set_tx_count(::google::protobuf::uint32 value) {
  set_has_tx_count();
  tx_count_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxHeights.tx_count)
}

// -------------------------------------------------------------------

// ToTxMessageItem

// optional bytes des = 1;
inline bool ToTxMessageItem::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToTxMessageItem::set_has_des() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToTxMessageItem::clear_has_des() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToTxMessageItem::clear_des() {
  des_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_des();
}
inline const ::std::string& ToTxMessageItem::des() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxMessageItem.des)
  return des_.GetNoArena();
}
inline void ToTxMessageItem::set_des(const ::std::string& value) {
  set_has_des();
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxMessageItem.des)
}
#if LANG_CXX11
inline void ToTxMessageItem::set_des(::std::string&& value) {
  set_has_des();
  des_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.ToTxMessageItem.des)
}
#endif
inline void ToTxMessageItem::set_des(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_des();
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.ToTxMessageItem.des)
}
inline void ToTxMessageItem::set_des(const void* value, size_t size) {
  set_has_des();
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.ToTxMessageItem.des)
}
inline ::std::string* ToTxMessageItem::mutable_des() {
  set_has_des();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.ToTxMessageItem.des)
  return des_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ToTxMessageItem::release_des() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.ToTxMessageItem.des)
  if (!has_des()) {
    return NULL;
  }
  clear_has_des();
  return des_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToTxMessageItem::set_allocated_des(::std::string* des) {
  if (des != NULL) {
    set_has_des();
  } else {
    clear_has_des();
  }
  des_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), des);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.ToTxMessageItem.des)
}

// optional uint64 amount = 2;
inline bool ToTxMessageItem::has_amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ToTxMessageItem::set_has_amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ToTxMessageItem::clear_has_amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ToTxMessageItem::clear_amount() {
  amount_ = GOOGLE_ULONGLONG(0);
  clear_has_amount();
}
inline ::google::protobuf::uint64 ToTxMessageItem::amount() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxMessageItem.amount)
  return amount_;
}
inline void ToTxMessageItem::set_amount(::google::protobuf::uint64 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxMessageItem.amount)
}

// optional uint32 sharding_id = 3;
inline bool ToTxMessageItem::has_sharding_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ToTxMessageItem::set_has_sharding_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ToTxMessageItem::clear_has_sharding_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ToTxMessageItem::clear_sharding_id() {
  sharding_id_ = 0u;
  clear_has_sharding_id();
}
inline ::google::protobuf::uint32 ToTxMessageItem::sharding_id() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxMessageItem.sharding_id)
  return sharding_id_;
}
inline void ToTxMessageItem::set_sharding_id(::google::protobuf::uint32 value) {
  set_has_sharding_id();
  sharding_id_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxMessageItem.sharding_id)
}

// optional uint32 pool_index = 4;
inline bool ToTxMessageItem::has_pool_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ToTxMessageItem::set_has_pool_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ToTxMessageItem::clear_has_pool_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ToTxMessageItem::clear_pool_index() {
  pool_index_ = 0u;
  clear_has_pool_index();
}
inline ::google::protobuf::uint32 ToTxMessageItem::pool_index() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxMessageItem.pool_index)
  return pool_index_;
}
inline void ToTxMessageItem::set_pool_index(::google::protobuf::uint32 value) {
  set_has_pool_index();
  pool_index_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxMessageItem.pool_index)
}

// optional int32 step = 5;
inline bool ToTxMessageItem::has_step() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ToTxMessageItem::set_has_step() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ToTxMessageItem::clear_has_step() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ToTxMessageItem::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 ToTxMessageItem::step() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxMessageItem.step)
  return step_;
}
inline void ToTxMessageItem::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxMessageItem.step)
}

// optional bytes library_bytes = 6;
inline bool ToTxMessageItem::has_library_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToTxMessageItem::set_has_library_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToTxMessageItem::clear_has_library_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToTxMessageItem::clear_library_bytes() {
  library_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_library_bytes();
}
inline const ::std::string& ToTxMessageItem::library_bytes() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxMessageItem.library_bytes)
  return library_bytes_.GetNoArena();
}
inline void ToTxMessageItem::set_library_bytes(const ::std::string& value) {
  set_has_library_bytes();
  library_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxMessageItem.library_bytes)
}
#if LANG_CXX11
inline void ToTxMessageItem::set_library_bytes(::std::string&& value) {
  set_has_library_bytes();
  library_bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.ToTxMessageItem.library_bytes)
}
#endif
inline void ToTxMessageItem::set_library_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_library_bytes();
  library_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.ToTxMessageItem.library_bytes)
}
inline void ToTxMessageItem::set_library_bytes(const void* value, size_t size) {
  set_has_library_bytes();
  library_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.ToTxMessageItem.library_bytes)
}
inline ::std::string* ToTxMessageItem::mutable_library_bytes() {
  set_has_library_bytes();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.ToTxMessageItem.library_bytes)
  return library_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ToTxMessageItem::release_library_bytes() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.ToTxMessageItem.library_bytes)
  if (!has_library_bytes()) {
    return NULL;
  }
  clear_has_library_bytes();
  return library_bytes_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToTxMessageItem::set_allocated_library_bytes(::std::string* library_bytes) {
  if (library_bytes != NULL) {
    set_has_library_bytes();
  } else {
    clear_has_library_bytes();
  }
  library_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), library_bytes);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.ToTxMessageItem.library_bytes)
}

// -------------------------------------------------------------------

// ToTxMessage

// optional bytes heights_hash = 1;
inline bool ToTxMessage::has_heights_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ToTxMessage::set_has_heights_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ToTxMessage::clear_has_heights_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ToTxMessage::clear_heights_hash() {
  heights_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_heights_hash();
}
inline const ::std::string& ToTxMessage::heights_hash() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxMessage.heights_hash)
  return heights_hash_.GetNoArena();
}
inline void ToTxMessage::set_heights_hash(const ::std::string& value) {
  set_has_heights_hash();
  heights_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ToTxMessage.heights_hash)
}
#if LANG_CXX11
inline void ToTxMessage::set_heights_hash(::std::string&& value) {
  set_has_heights_hash();
  heights_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.ToTxMessage.heights_hash)
}
#endif
inline void ToTxMessage::set_heights_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_heights_hash();
  heights_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.ToTxMessage.heights_hash)
}
inline void ToTxMessage::set_heights_hash(const void* value, size_t size) {
  set_has_heights_hash();
  heights_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.ToTxMessage.heights_hash)
}
inline ::std::string* ToTxMessage::mutable_heights_hash() {
  set_has_heights_hash();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.ToTxMessage.heights_hash)
  return heights_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ToTxMessage::release_heights_hash() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.ToTxMessage.heights_hash)
  if (!has_heights_hash()) {
    return NULL;
  }
  clear_has_heights_hash();
  return heights_hash_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ToTxMessage::set_allocated_heights_hash(::std::string* heights_hash) {
  if (heights_hash != NULL) {
    set_has_heights_hash();
  } else {
    clear_has_heights_hash();
  }
  heights_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), heights_hash);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.ToTxMessage.heights_hash)
}

// repeated .zjchain.pools.protobuf.ToTxMessageItem tos = 2;
inline int ToTxMessage::tos_size() const {
  return tos_.size();
}
inline void ToTxMessage::clear_tos() {
  tos_.Clear();
}
inline ::zjchain::pools::protobuf::ToTxMessageItem* ToTxMessage::mutable_tos(int index) {
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.ToTxMessage.tos)
  return tos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::ToTxMessageItem >*
ToTxMessage::mutable_tos() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.pools.protobuf.ToTxMessage.tos)
  return &tos_;
}
inline const ::zjchain::pools::protobuf::ToTxMessageItem& ToTxMessage::tos(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxMessage.tos)
  return tos_.Get(index);
}
inline ::zjchain::pools::protobuf::ToTxMessageItem* ToTxMessage::add_tos() {
  // @@protoc_insertion_point(field_add:zjchain.pools.protobuf.ToTxMessage.tos)
  return tos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::ToTxMessageItem >&
ToTxMessage::tos() const {
  // @@protoc_insertion_point(field_list:zjchain.pools.protobuf.ToTxMessage.tos)
  return tos_;
}

// optional .zjchain.pools.protobuf.ToTxHeights to_heights = 3;
inline bool ToTxMessage::has_to_heights() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ToTxMessage::set_has_to_heights() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ToTxMessage::clear_has_to_heights() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ToTxMessage::clear_to_heights() {
  if (to_heights_ != NULL) to_heights_->Clear();
  clear_has_to_heights();
}
inline const ::zjchain::pools::protobuf::ToTxHeights& ToTxMessage::_internal_to_heights() const {
  return *to_heights_;
}
inline const ::zjchain::pools::protobuf::ToTxHeights& ToTxMessage::to_heights() const {
  const ::zjchain::pools::protobuf::ToTxHeights* p = to_heights_;
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ToTxMessage.to_heights)
  return p != NULL ? *p : *reinterpret_cast<const ::zjchain::pools::protobuf::ToTxHeights*>(
      &::zjchain::pools::protobuf::_ToTxHeights_default_instance_);
}
inline ::zjchain::pools::protobuf::ToTxHeights* ToTxMessage::release_to_heights() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.ToTxMessage.to_heights)
  clear_has_to_heights();
  ::zjchain::pools::protobuf::ToTxHeights* temp = to_heights_;
  to_heights_ = NULL;
  return temp;
}
inline ::zjchain::pools::protobuf::ToTxHeights* ToTxMessage::mutable_to_heights() {
  set_has_to_heights();
  if (to_heights_ == NULL) {
    auto* p = CreateMaybeMessage<::zjchain::pools::protobuf::ToTxHeights>(GetArenaNoVirtual());
    to_heights_ = p;
  }
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.ToTxMessage.to_heights)
  return to_heights_;
}
inline void ToTxMessage::set_allocated_to_heights(::zjchain::pools::protobuf::ToTxHeights* to_heights) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete to_heights_;
  }
  if (to_heights) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      to_heights = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, to_heights, submessage_arena);
    }
    set_has_to_heights();
  } else {
    clear_has_to_heights();
  }
  to_heights_ = to_heights;
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.ToTxMessage.to_heights)
}

// -------------------------------------------------------------------

// PoolLatestInfo

// optional uint64 height = 1;
inline bool PoolLatestInfo::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PoolLatestInfo::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PoolLatestInfo::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PoolLatestInfo::clear_height() {
  height_ = GOOGLE_ULONGLONG(0);
  clear_has_height();
}
inline ::google::protobuf::uint64 PoolLatestInfo::height() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.PoolLatestInfo.height)
  return height_;
}
inline void PoolLatestInfo::set_height(::google::protobuf::uint64 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.PoolLatestInfo.height)
}

// optional bytes hash = 2;
inline bool PoolLatestInfo::has_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PoolLatestInfo::set_has_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PoolLatestInfo::clear_has_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PoolLatestInfo::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hash();
}
inline const ::std::string& PoolLatestInfo::hash() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.PoolLatestInfo.hash)
  return hash_.GetNoArena();
}
inline void PoolLatestInfo::set_hash(const ::std::string& value) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.PoolLatestInfo.hash)
}
#if LANG_CXX11
inline void PoolLatestInfo::set_hash(::std::string&& value) {
  set_has_hash();
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.PoolLatestInfo.hash)
}
#endif
inline void PoolLatestInfo::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.PoolLatestInfo.hash)
}
inline void PoolLatestInfo::set_hash(const void* value, size_t size) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.PoolLatestInfo.hash)
}
inline ::std::string* PoolLatestInfo::mutable_hash() {
  set_has_hash();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.PoolLatestInfo.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoolLatestInfo::release_hash() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.PoolLatestInfo.hash)
  if (!has_hash()) {
    return NULL;
  }
  clear_has_hash();
  return hash_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoolLatestInfo::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    set_has_hash();
  } else {
    clear_has_hash();
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.PoolLatestInfo.hash)
}

// optional uint64 synced_height = 3;
inline bool PoolLatestInfo::has_synced_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PoolLatestInfo::set_has_synced_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PoolLatestInfo::clear_has_synced_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PoolLatestInfo::clear_synced_height() {
  synced_height_ = GOOGLE_ULONGLONG(0);
  clear_has_synced_height();
}
inline ::google::protobuf::uint64 PoolLatestInfo::synced_height() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.PoolLatestInfo.synced_height)
  return synced_height_;
}
inline void PoolLatestInfo::set_synced_height(::google::protobuf::uint64 value) {
  set_has_synced_height();
  synced_height_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.PoolLatestInfo.synced_height)
}

// -------------------------------------------------------------------

// AreaInfo

// optional int32 x = 1;
inline bool AreaInfo::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AreaInfo::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AreaInfo::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AreaInfo::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 AreaInfo::x() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.AreaInfo.x)
  return x_;
}
inline void AreaInfo::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.AreaInfo.x)
}

// optional int32 y = 2;
inline bool AreaInfo::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AreaInfo::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AreaInfo::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AreaInfo::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 AreaInfo::y() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.AreaInfo.y)
  return y_;
}
inline void AreaInfo::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.AreaInfo.y)
}

// -------------------------------------------------------------------

// PoolStatisticItem

// repeated uint32 tx_count = 1;
inline int PoolStatisticItem::tx_count_size() const {
  return tx_count_.size();
}
inline void PoolStatisticItem::clear_tx_count() {
  tx_count_.Clear();
}
inline ::google::protobuf::uint32 PoolStatisticItem::tx_count(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.PoolStatisticItem.tx_count)
  return tx_count_.Get(index);
}
inline void PoolStatisticItem::set_tx_count(int index, ::google::protobuf::uint32 value) {
  tx_count_.Set(index, value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.PoolStatisticItem.tx_count)
}
inline void PoolStatisticItem::add_tx_count(::google::protobuf::uint32 value) {
  tx_count_.Add(value);
  // @@protoc_insertion_point(field_add:zjchain.pools.protobuf.PoolStatisticItem.tx_count)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PoolStatisticItem::tx_count() const {
  // @@protoc_insertion_point(field_list:zjchain.pools.protobuf.PoolStatisticItem.tx_count)
  return tx_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PoolStatisticItem::mutable_tx_count() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.pools.protobuf.PoolStatisticItem.tx_count)
  return &tx_count_;
}

// repeated uint64 stokes = 2;
inline int PoolStatisticItem::stokes_size() const {
  return stokes_.size();
}
inline void PoolStatisticItem::clear_stokes() {
  stokes_.Clear();
}
inline ::google::protobuf::uint64 PoolStatisticItem::stokes(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.PoolStatisticItem.stokes)
  return stokes_.Get(index);
}
inline void PoolStatisticItem::set_stokes(int index, ::google::protobuf::uint64 value) {
  stokes_.Set(index, value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.PoolStatisticItem.stokes)
}
inline void PoolStatisticItem::add_stokes(::google::protobuf::uint64 value) {
  stokes_.Add(value);
  // @@protoc_insertion_point(field_add:zjchain.pools.protobuf.PoolStatisticItem.stokes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PoolStatisticItem::stokes() const {
  // @@protoc_insertion_point(field_list:zjchain.pools.protobuf.PoolStatisticItem.stokes)
  return stokes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PoolStatisticItem::mutable_stokes() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.pools.protobuf.PoolStatisticItem.stokes)
  return &stokes_;
}

// optional uint64 elect_height = 3;
inline bool PoolStatisticItem::has_elect_height() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PoolStatisticItem::set_has_elect_height() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PoolStatisticItem::clear_has_elect_height() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PoolStatisticItem::clear_elect_height() {
  elect_height_ = GOOGLE_ULONGLONG(0);
  clear_has_elect_height();
}
inline ::google::protobuf::uint64 PoolStatisticItem::elect_height() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.PoolStatisticItem.elect_height)
  return elect_height_;
}
inline void PoolStatisticItem::set_elect_height(::google::protobuf::uint64 value) {
  set_has_elect_height();
  elect_height_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.PoolStatisticItem.elect_height)
}

// repeated .zjchain.pools.protobuf.AreaInfo area_point = 4;
inline int PoolStatisticItem::area_point_size() const {
  return area_point_.size();
}
inline void PoolStatisticItem::clear_area_point() {
  area_point_.Clear();
}
inline ::zjchain::pools::protobuf::AreaInfo* PoolStatisticItem::mutable_area_point(int index) {
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.PoolStatisticItem.area_point)
  return area_point_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::AreaInfo >*
PoolStatisticItem::mutable_area_point() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.pools.protobuf.PoolStatisticItem.area_point)
  return &area_point_;
}
inline const ::zjchain::pools::protobuf::AreaInfo& PoolStatisticItem::area_point(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.PoolStatisticItem.area_point)
  return area_point_.Get(index);
}
inline ::zjchain::pools::protobuf::AreaInfo* PoolStatisticItem::add_area_point() {
  // @@protoc_insertion_point(field_add:zjchain.pools.protobuf.PoolStatisticItem.area_point)
  return area_point_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::AreaInfo >&
PoolStatisticItem::area_point() const {
  // @@protoc_insertion_point(field_list:zjchain.pools.protobuf.PoolStatisticItem.area_point)
  return area_point_;
}

// -------------------------------------------------------------------

// JoinElectNode

// optional bytes id = 1;
inline bool JoinElectNode::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinElectNode::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinElectNode::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinElectNode::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& JoinElectNode::id() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.JoinElectNode.id)
  return id_.GetNoArena();
}
inline void JoinElectNode::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.JoinElectNode.id)
}
#if LANG_CXX11
inline void JoinElectNode::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.JoinElectNode.id)
}
#endif
inline void JoinElectNode::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.JoinElectNode.id)
}
inline void JoinElectNode::set_id(const void* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.JoinElectNode.id)
}
inline ::std::string* JoinElectNode::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.JoinElectNode.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinElectNode::release_id() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.JoinElectNode.id)
  if (!has_id()) {
    return NULL;
  }
  clear_has_id();
  return id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinElectNode::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.JoinElectNode.id)
}

// optional uint64 stoke = 2;
inline bool JoinElectNode::has_stoke() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinElectNode::set_has_stoke() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinElectNode::clear_has_stoke() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinElectNode::clear_stoke() {
  stoke_ = GOOGLE_ULONGLONG(0);
  clear_has_stoke();
}
inline ::google::protobuf::uint64 JoinElectNode::stoke() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.JoinElectNode.stoke)
  return stoke_;
}
inline void JoinElectNode::set_stoke(::google::protobuf::uint64 value) {
  set_has_stoke();
  stoke_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.JoinElectNode.stoke)
}

// optional uint32 shard = 3;
inline bool JoinElectNode::has_shard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinElectNode::set_has_shard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinElectNode::clear_has_shard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinElectNode::clear_shard() {
  shard_ = 0u;
  clear_has_shard();
}
inline ::google::protobuf::uint32 JoinElectNode::shard() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.JoinElectNode.shard)
  return shard_;
}
inline void JoinElectNode::set_shard(::google::protobuf::uint32 value) {
  set_has_shard();
  shard_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.JoinElectNode.shard)
}

// -------------------------------------------------------------------

// CrossShardStatisticItem

// optional uint32 src_shard = 1;
inline bool CrossShardStatisticItem::has_src_shard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CrossShardStatisticItem::set_has_src_shard() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CrossShardStatisticItem::clear_has_src_shard() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CrossShardStatisticItem::clear_src_shard() {
  src_shard_ = 0u;
  clear_has_src_shard();
}
inline ::google::protobuf::uint32 CrossShardStatisticItem::src_shard() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.CrossShardStatisticItem.src_shard)
  return src_shard_;
}
inline void CrossShardStatisticItem::set_src_shard(::google::protobuf::uint32 value) {
  set_has_src_shard();
  src_shard_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.CrossShardStatisticItem.src_shard)
}

// optional uint32 src_pool = 2;
inline bool CrossShardStatisticItem::has_src_pool() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CrossShardStatisticItem::set_has_src_pool() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CrossShardStatisticItem::clear_has_src_pool() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CrossShardStatisticItem::clear_src_pool() {
  src_pool_ = 0u;
  clear_has_src_pool();
}
inline ::google::protobuf::uint32 CrossShardStatisticItem::src_pool() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.CrossShardStatisticItem.src_pool)
  return src_pool_;
}
inline void CrossShardStatisticItem::set_src_pool(::google::protobuf::uint32 value) {
  set_has_src_pool();
  src_pool_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.CrossShardStatisticItem.src_pool)
}

// optional uint64 height = 3;
inline bool CrossShardStatisticItem::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CrossShardStatisticItem::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CrossShardStatisticItem::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CrossShardStatisticItem::clear_height() {
  height_ = GOOGLE_ULONGLONG(0);
  clear_has_height();
}
inline ::google::protobuf::uint64 CrossShardStatisticItem::height() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.CrossShardStatisticItem.height)
  return height_;
}
inline void CrossShardStatisticItem::set_height(::google::protobuf::uint64 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.CrossShardStatisticItem.height)
}

// optional uint32 des_shard = 4;
inline bool CrossShardStatisticItem::has_des_shard() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CrossShardStatisticItem::set_has_des_shard() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CrossShardStatisticItem::clear_has_des_shard() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CrossShardStatisticItem::clear_des_shard() {
  des_shard_ = 0u;
  clear_has_des_shard();
}
inline ::google::protobuf::uint32 CrossShardStatisticItem::des_shard() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.CrossShardStatisticItem.des_shard)
  return des_shard_;
}
inline void CrossShardStatisticItem::set_des_shard(::google::protobuf::uint32 value) {
  set_has_des_shard();
  des_shard_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.CrossShardStatisticItem.des_shard)
}

// -------------------------------------------------------------------

// CrossShardStatistic

// repeated .zjchain.pools.protobuf.CrossShardStatisticItem crosses = 1;
inline int CrossShardStatistic::crosses_size() const {
  return crosses_.size();
}
inline void CrossShardStatistic::clear_crosses() {
  crosses_.Clear();
}
inline ::zjchain::pools::protobuf::CrossShardStatisticItem* CrossShardStatistic::mutable_crosses(int index) {
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.CrossShardStatistic.crosses)
  return crosses_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::CrossShardStatisticItem >*
CrossShardStatistic::mutable_crosses() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.pools.protobuf.CrossShardStatistic.crosses)
  return &crosses_;
}
inline const ::zjchain::pools::protobuf::CrossShardStatisticItem& CrossShardStatistic::crosses(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.CrossShardStatistic.crosses)
  return crosses_.Get(index);
}
inline ::zjchain::pools::protobuf::CrossShardStatisticItem* CrossShardStatistic::add_crosses() {
  // @@protoc_insertion_point(field_add:zjchain.pools.protobuf.CrossShardStatistic.crosses)
  return crosses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::CrossShardStatisticItem >&
CrossShardStatistic::crosses() const {
  // @@protoc_insertion_point(field_list:zjchain.pools.protobuf.CrossShardStatistic.crosses)
  return crosses_;
}

// -------------------------------------------------------------------

// ElectStatistic

// repeated .zjchain.pools.protobuf.PoolStatisticItem statistics = 1;
inline int ElectStatistic::statistics_size() const {
  return statistics_.size();
}
inline void ElectStatistic::clear_statistics() {
  statistics_.Clear();
}
inline ::zjchain::pools::protobuf::PoolStatisticItem* ElectStatistic::mutable_statistics(int index) {
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.ElectStatistic.statistics)
  return statistics_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::PoolStatisticItem >*
ElectStatistic::mutable_statistics() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.pools.protobuf.ElectStatistic.statistics)
  return &statistics_;
}
inline const ::zjchain::pools::protobuf::PoolStatisticItem& ElectStatistic::statistics(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ElectStatistic.statistics)
  return statistics_.Get(index);
}
inline ::zjchain::pools::protobuf::PoolStatisticItem* ElectStatistic::add_statistics() {
  // @@protoc_insertion_point(field_add:zjchain.pools.protobuf.ElectStatistic.statistics)
  return statistics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::PoolStatisticItem >&
ElectStatistic::statistics() const {
  // @@protoc_insertion_point(field_list:zjchain.pools.protobuf.ElectStatistic.statistics)
  return statistics_;
}

// optional .zjchain.pools.protobuf.ToTxHeights heights = 2;
inline bool ElectStatistic::has_heights() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ElectStatistic::set_has_heights() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ElectStatistic::clear_has_heights() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ElectStatistic::clear_heights() {
  if (heights_ != NULL) heights_->Clear();
  clear_has_heights();
}
inline const ::zjchain::pools::protobuf::ToTxHeights& ElectStatistic::_internal_heights() const {
  return *heights_;
}
inline const ::zjchain::pools::protobuf::ToTxHeights& ElectStatistic::heights() const {
  const ::zjchain::pools::protobuf::ToTxHeights* p = heights_;
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ElectStatistic.heights)
  return p != NULL ? *p : *reinterpret_cast<const ::zjchain::pools::protobuf::ToTxHeights*>(
      &::zjchain::pools::protobuf::_ToTxHeights_default_instance_);
}
inline ::zjchain::pools::protobuf::ToTxHeights* ElectStatistic::release_heights() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.ElectStatistic.heights)
  clear_has_heights();
  ::zjchain::pools::protobuf::ToTxHeights* temp = heights_;
  heights_ = NULL;
  return temp;
}
inline ::zjchain::pools::protobuf::ToTxHeights* ElectStatistic::mutable_heights() {
  set_has_heights();
  if (heights_ == NULL) {
    auto* p = CreateMaybeMessage<::zjchain::pools::protobuf::ToTxHeights>(GetArenaNoVirtual());
    heights_ = p;
  }
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.ElectStatistic.heights)
  return heights_;
}
inline void ElectStatistic::set_allocated_heights(::zjchain::pools::protobuf::ToTxHeights* heights) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete heights_;
  }
  if (heights) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      heights = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, heights, submessage_arena);
    }
    set_has_heights();
  } else {
    clear_has_heights();
  }
  heights_ = heights;
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.ElectStatistic.heights)
}

// repeated .zjchain.pools.protobuf.JoinElectNode join_elect_nodes = 3;
inline int ElectStatistic::join_elect_nodes_size() const {
  return join_elect_nodes_.size();
}
inline void ElectStatistic::clear_join_elect_nodes() {
  join_elect_nodes_.Clear();
}
inline ::zjchain::pools::protobuf::JoinElectNode* ElectStatistic::mutable_join_elect_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.ElectStatistic.join_elect_nodes)
  return join_elect_nodes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::JoinElectNode >*
ElectStatistic::mutable_join_elect_nodes() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.pools.protobuf.ElectStatistic.join_elect_nodes)
  return &join_elect_nodes_;
}
inline const ::zjchain::pools::protobuf::JoinElectNode& ElectStatistic::join_elect_nodes(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ElectStatistic.join_elect_nodes)
  return join_elect_nodes_.Get(index);
}
inline ::zjchain::pools::protobuf::JoinElectNode* ElectStatistic::add_join_elect_nodes() {
  // @@protoc_insertion_point(field_add:zjchain.pools.protobuf.ElectStatistic.join_elect_nodes)
  return join_elect_nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zjchain::pools::protobuf::JoinElectNode >&
ElectStatistic::join_elect_nodes() const {
  // @@protoc_insertion_point(field_list:zjchain.pools.protobuf.ElectStatistic.join_elect_nodes)
  return join_elect_nodes_;
}

// optional uint32 sharding_id = 4;
inline bool ElectStatistic::has_sharding_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ElectStatistic::set_has_sharding_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ElectStatistic::clear_has_sharding_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ElectStatistic::clear_sharding_id() {
  sharding_id_ = 0u;
  clear_has_sharding_id();
}
inline ::google::protobuf::uint32 ElectStatistic::sharding_id() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ElectStatistic.sharding_id)
  return sharding_id_;
}
inline void ElectStatistic::set_sharding_id(::google::protobuf::uint32 value) {
  set_has_sharding_id();
  sharding_id_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ElectStatistic.sharding_id)
}

// optional uint64 gas_amount = 5;
inline bool ElectStatistic::has_gas_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ElectStatistic::set_has_gas_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ElectStatistic::clear_has_gas_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ElectStatistic::clear_gas_amount() {
  gas_amount_ = GOOGLE_ULONGLONG(0);
  clear_has_gas_amount();
}
inline ::google::protobuf::uint64 ElectStatistic::gas_amount() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ElectStatistic.gas_amount)
  return gas_amount_;
}
inline void ElectStatistic::set_gas_amount(::google::protobuf::uint64 value) {
  set_has_gas_amount();
  gas_amount_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ElectStatistic.gas_amount)
}

// repeated uint32 lof_leaders = 6;
inline int ElectStatistic::lof_leaders_size() const {
  return lof_leaders_.size();
}
inline void ElectStatistic::clear_lof_leaders() {
  lof_leaders_.Clear();
}
inline ::google::protobuf::uint32 ElectStatistic::lof_leaders(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.ElectStatistic.lof_leaders)
  return lof_leaders_.Get(index);
}
inline void ElectStatistic::set_lof_leaders(int index, ::google::protobuf::uint32 value) {
  lof_leaders_.Set(index, value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.ElectStatistic.lof_leaders)
}
inline void ElectStatistic::add_lof_leaders(::google::protobuf::uint32 value) {
  lof_leaders_.Add(value);
  // @@protoc_insertion_point(field_add:zjchain.pools.protobuf.ElectStatistic.lof_leaders)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ElectStatistic::lof_leaders() const {
  // @@protoc_insertion_point(field_list:zjchain.pools.protobuf.ElectStatistic.lof_leaders)
  return lof_leaders_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ElectStatistic::mutable_lof_leaders() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.pools.protobuf.ElectStatistic.lof_leaders)
  return &lof_leaders_;
}

// -------------------------------------------------------------------

// SyncPoolsMaxHeight

// optional bool req = 1 [default = false];
inline bool SyncPoolsMaxHeight::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncPoolsMaxHeight::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncPoolsMaxHeight::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncPoolsMaxHeight::clear_req() {
  req_ = false;
  clear_has_req();
}
inline bool SyncPoolsMaxHeight::req() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.SyncPoolsMaxHeight.req)
  return req_;
}
inline void SyncPoolsMaxHeight::set_req(bool value) {
  set_has_req();
  req_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.SyncPoolsMaxHeight.req)
}

// repeated uint64 heights = 2;
inline int SyncPoolsMaxHeight::heights_size() const {
  return heights_.size();
}
inline void SyncPoolsMaxHeight::clear_heights() {
  heights_.Clear();
}
inline ::google::protobuf::uint64 SyncPoolsMaxHeight::heights(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.SyncPoolsMaxHeight.heights)
  return heights_.Get(index);
}
inline void SyncPoolsMaxHeight::set_heights(int index, ::google::protobuf::uint64 value) {
  heights_.Set(index, value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.SyncPoolsMaxHeight.heights)
}
inline void SyncPoolsMaxHeight::add_heights(::google::protobuf::uint64 value) {
  heights_.Add(value);
  // @@protoc_insertion_point(field_add:zjchain.pools.protobuf.SyncPoolsMaxHeight.heights)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SyncPoolsMaxHeight::heights() const {
  // @@protoc_insertion_point(field_list:zjchain.pools.protobuf.SyncPoolsMaxHeight.heights)
  return heights_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SyncPoolsMaxHeight::mutable_heights() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.pools.protobuf.SyncPoolsMaxHeight.heights)
  return &heights_;
}

// -------------------------------------------------------------------

// TxMessage

// optional uint32 version = 1;
inline bool TxMessage::has_version() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TxMessage::set_has_version() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TxMessage::clear_has_version() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TxMessage::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 TxMessage::version() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.version)
  return version_;
}
inline void TxMessage::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.version)
}

// optional bytes gid = 2;
inline bool TxMessage::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TxMessage::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TxMessage::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TxMessage::clear_gid() {
  gid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gid();
}
inline const ::std::string& TxMessage::gid() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.gid)
  return gid_.GetNoArena();
}
inline void TxMessage::set_gid(const ::std::string& value) {
  set_has_gid();
  gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.gid)
}
#if LANG_CXX11
inline void TxMessage::set_gid(::std::string&& value) {
  set_has_gid();
  gid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.TxMessage.gid)
}
#endif
inline void TxMessage::set_gid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gid();
  gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.TxMessage.gid)
}
inline void TxMessage::set_gid(const void* value, size_t size) {
  set_has_gid();
  gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.TxMessage.gid)
}
inline ::std::string* TxMessage::mutable_gid() {
  set_has_gid();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.TxMessage.gid)
  return gid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxMessage::release_gid() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.TxMessage.gid)
  if (!has_gid()) {
    return NULL;
  }
  clear_has_gid();
  return gid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxMessage::set_allocated_gid(::std::string* gid) {
  if (gid != NULL) {
    set_has_gid();
  } else {
    clear_has_gid();
  }
  gid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gid);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.TxMessage.gid)
}

// optional bytes pubkey = 3;
inline bool TxMessage::has_pubkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TxMessage::set_has_pubkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TxMessage::clear_has_pubkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TxMessage::clear_pubkey() {
  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pubkey();
}
inline const ::std::string& TxMessage::pubkey() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.pubkey)
  return pubkey_.GetNoArena();
}
inline void TxMessage::set_pubkey(const ::std::string& value) {
  set_has_pubkey();
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.pubkey)
}
#if LANG_CXX11
inline void TxMessage::set_pubkey(::std::string&& value) {
  set_has_pubkey();
  pubkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.TxMessage.pubkey)
}
#endif
inline void TxMessage::set_pubkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pubkey();
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.TxMessage.pubkey)
}
inline void TxMessage::set_pubkey(const void* value, size_t size) {
  set_has_pubkey();
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.TxMessage.pubkey)
}
inline ::std::string* TxMessage::mutable_pubkey() {
  set_has_pubkey();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.TxMessage.pubkey)
  return pubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxMessage::release_pubkey() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.TxMessage.pubkey)
  if (!has_pubkey()) {
    return NULL;
  }
  clear_has_pubkey();
  return pubkey_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxMessage::set_allocated_pubkey(::std::string* pubkey) {
  if (pubkey != NULL) {
    set_has_pubkey();
  } else {
    clear_has_pubkey();
  }
  pubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubkey);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.TxMessage.pubkey)
}

// optional uint64 gas_limit = 4;
inline bool TxMessage::has_gas_limit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TxMessage::set_has_gas_limit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TxMessage::clear_has_gas_limit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TxMessage::clear_gas_limit() {
  gas_limit_ = GOOGLE_ULONGLONG(0);
  clear_has_gas_limit();
}
inline ::google::protobuf::uint64 TxMessage::gas_limit() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.gas_limit)
  return gas_limit_;
}
inline void TxMessage::set_gas_limit(::google::protobuf::uint64 value) {
  set_has_gas_limit();
  gas_limit_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.gas_limit)
}

// optional uint64 gas_price = 5;
inline bool TxMessage::has_gas_price() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TxMessage::set_has_gas_price() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TxMessage::clear_has_gas_price() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TxMessage::clear_gas_price() {
  gas_price_ = GOOGLE_ULONGLONG(0);
  clear_has_gas_price();
}
inline ::google::protobuf::uint64 TxMessage::gas_price() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.gas_price)
  return gas_price_;
}
inline void TxMessage::set_gas_price(::google::protobuf::uint64 value) {
  set_has_gas_price();
  gas_price_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.gas_price)
}

// optional bytes key = 6;
inline bool TxMessage::has_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TxMessage::set_has_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TxMessage::clear_has_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TxMessage::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& TxMessage::key() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.key)
  return key_.GetNoArena();
}
inline void TxMessage::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.key)
}
#if LANG_CXX11
inline void TxMessage::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.TxMessage.key)
}
#endif
inline void TxMessage::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.TxMessage.key)
}
inline void TxMessage::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.TxMessage.key)
}
inline ::std::string* TxMessage::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.TxMessage.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxMessage::release_key() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.TxMessage.key)
  if (!has_key()) {
    return NULL;
  }
  clear_has_key();
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxMessage::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.TxMessage.key)
}

// optional bytes value = 7;
inline bool TxMessage::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TxMessage::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TxMessage::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TxMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& TxMessage::value() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.value)
  return value_.GetNoArena();
}
inline void TxMessage::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.value)
}
#if LANG_CXX11
inline void TxMessage::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.TxMessage.value)
}
#endif
inline void TxMessage::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.TxMessage.value)
}
inline void TxMessage::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.TxMessage.value)
}
inline ::std::string* TxMessage::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.TxMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxMessage::release_value() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.TxMessage.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.TxMessage.value)
}

// optional bytes to = 8;
inline bool TxMessage::has_to() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TxMessage::set_has_to() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TxMessage::clear_has_to() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TxMessage::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to();
}
inline const ::std::string& TxMessage::to() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.to)
  return to_.GetNoArena();
}
inline void TxMessage::set_to(const ::std::string& value) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.to)
}
#if LANG_CXX11
inline void TxMessage::set_to(::std::string&& value) {
  set_has_to();
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.TxMessage.to)
}
#endif
inline void TxMessage::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.TxMessage.to)
}
inline void TxMessage::set_to(const void* value, size_t size) {
  set_has_to();
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.TxMessage.to)
}
inline ::std::string* TxMessage::mutable_to() {
  set_has_to();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.TxMessage.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxMessage::release_to() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.TxMessage.to)
  if (!has_to()) {
    return NULL;
  }
  clear_has_to();
  return to_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxMessage::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    set_has_to();
  } else {
    clear_has_to();
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.TxMessage.to)
}

// optional uint64 amount = 9;
inline bool TxMessage::has_amount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TxMessage::set_has_amount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TxMessage::clear_has_amount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TxMessage::clear_amount() {
  amount_ = GOOGLE_ULONGLONG(0);
  clear_has_amount();
}
inline ::google::protobuf::uint64 TxMessage::amount() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.amount)
  return amount_;
}
inline void TxMessage::set_amount(::google::protobuf::uint64 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.amount)
}

// optional .zjchain.pools.protobuf.StepType step = 10 [default = kNormalFrom];
inline bool TxMessage::has_step() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TxMessage::set_has_step() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TxMessage::clear_has_step() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TxMessage::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::zjchain::pools::protobuf::StepType TxMessage::step() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.step)
  return static_cast< ::zjchain::pools::protobuf::StepType >(step_);
}
inline void TxMessage::set_step(::zjchain::pools::protobuf::StepType value) {
  assert(::zjchain::pools::protobuf::StepType_IsValid(value));
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.step)
}

// optional uint64 contract_prepayment = 11;
inline bool TxMessage::has_contract_prepayment() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TxMessage::set_has_contract_prepayment() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TxMessage::clear_has_contract_prepayment() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TxMessage::clear_contract_prepayment() {
  contract_prepayment_ = GOOGLE_ULONGLONG(0);
  clear_has_contract_prepayment();
}
inline ::google::protobuf::uint64 TxMessage::contract_prepayment() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.contract_prepayment)
  return contract_prepayment_;
}
inline void TxMessage::set_contract_prepayment(::google::protobuf::uint64 value) {
  set_has_contract_prepayment();
  contract_prepayment_ = value;
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.contract_prepayment)
}

// optional bytes contract_code = 12;
inline bool TxMessage::has_contract_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TxMessage::set_has_contract_code() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TxMessage::clear_has_contract_code() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TxMessage::clear_contract_code() {
  contract_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_contract_code();
}
inline const ::std::string& TxMessage::contract_code() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.contract_code)
  return contract_code_.GetNoArena();
}
inline void TxMessage::set_contract_code(const ::std::string& value) {
  set_has_contract_code();
  contract_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.contract_code)
}
#if LANG_CXX11
inline void TxMessage::set_contract_code(::std::string&& value) {
  set_has_contract_code();
  contract_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.TxMessage.contract_code)
}
#endif
inline void TxMessage::set_contract_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_contract_code();
  contract_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.TxMessage.contract_code)
}
inline void TxMessage::set_contract_code(const void* value, size_t size) {
  set_has_contract_code();
  contract_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.TxMessage.contract_code)
}
inline ::std::string* TxMessage::mutable_contract_code() {
  set_has_contract_code();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.TxMessage.contract_code)
  return contract_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxMessage::release_contract_code() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.TxMessage.contract_code)
  if (!has_contract_code()) {
    return NULL;
  }
  clear_has_contract_code();
  return contract_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxMessage::set_allocated_contract_code(::std::string* contract_code) {
  if (contract_code != NULL) {
    set_has_contract_code();
  } else {
    clear_has_contract_code();
  }
  contract_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract_code);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.TxMessage.contract_code)
}

// optional bytes contract_input = 13;
inline bool TxMessage::has_contract_input() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TxMessage::set_has_contract_input() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TxMessage::clear_has_contract_input() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TxMessage::clear_contract_input() {
  contract_input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_contract_input();
}
inline const ::std::string& TxMessage::contract_input() const {
  // @@protoc_insertion_point(field_get:zjchain.pools.protobuf.TxMessage.contract_input)
  return contract_input_.GetNoArena();
}
inline void TxMessage::set_contract_input(const ::std::string& value) {
  set_has_contract_input();
  contract_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.pools.protobuf.TxMessage.contract_input)
}
#if LANG_CXX11
inline void TxMessage::set_contract_input(::std::string&& value) {
  set_has_contract_input();
  contract_input_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.pools.protobuf.TxMessage.contract_input)
}
#endif
inline void TxMessage::set_contract_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_contract_input();
  contract_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.pools.protobuf.TxMessage.contract_input)
}
inline void TxMessage::set_contract_input(const void* value, size_t size) {
  set_has_contract_input();
  contract_input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.pools.protobuf.TxMessage.contract_input)
}
inline ::std::string* TxMessage::mutable_contract_input() {
  set_has_contract_input();
  // @@protoc_insertion_point(field_mutable:zjchain.pools.protobuf.TxMessage.contract_input)
  return contract_input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxMessage::release_contract_input() {
  // @@protoc_insertion_point(field_release:zjchain.pools.protobuf.TxMessage.contract_input)
  if (!has_contract_input()) {
    return NULL;
  }
  clear_has_contract_input();
  return contract_input_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxMessage::set_allocated_contract_input(::std::string* contract_input) {
  if (contract_input != NULL) {
    set_has_contract_input();
  } else {
    clear_has_contract_input();
  }
  contract_input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contract_input);
  // @@protoc_insertion_point(field_set_allocated:zjchain.pools.protobuf.TxMessage.contract_input)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace pools
}  // namespace zjchain

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zjchain::pools::protobuf::StepType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zjchain::pools::protobuf::StepType>() {
  return ::zjchain::pools::protobuf::StepType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protos_2fpools_2eproto
