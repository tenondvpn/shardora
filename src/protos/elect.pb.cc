// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/elect.proto

#include "protos/elect.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protos_2felect_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BlsPublicKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DynamicShardingInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LeaderRotationMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PrevMemberInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SyncNodeStokeItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SyncNodeStokeResItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WaitingNodeHeartbeat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WaitingNodesMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_member;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SyncNodeStokeRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SyncNodeStokeResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PrevMembers;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2felect_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ElectBlock;
}  // namespace protobuf_protos_2felect_2eproto
namespace shardora {
namespace elect {
namespace protobuf {
class VerifyVecValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VerifyVecValue>
      _instance;
} _VerifyVecValue_default_instance_;
class BlsPublicKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlsPublicKey>
      _instance;
} _BlsPublicKey_default_instance_;
class PrevMemberInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrevMemberInfo>
      _instance;
} _PrevMemberInfo_default_instance_;
class PrevMembersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrevMembers>
      _instance;
} _PrevMembers_default_instance_;
class memberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<member>
      _instance;
} _member_default_instance_;
class ElectBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElectBlock>
      _instance;
} _ElectBlock_default_instance_;
class DynamicShardingInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DynamicShardingInfo>
      _instance;
} _DynamicShardingInfo_default_instance_;
class WaitingNodesMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitingNodesMessage>
      _instance;
} _WaitingNodesMessage_default_instance_;
class WaitingNodeHeartbeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitingNodeHeartbeat>
      _instance;
} _WaitingNodeHeartbeat_default_instance_;
class LeaderRotationMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaderRotationMessage>
      _instance;
} _LeaderRotationMessage_default_instance_;
class SyncNodeStokeItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncNodeStokeItem>
      _instance;
} _SyncNodeStokeItem_default_instance_;
class SyncNodeStokeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncNodeStokeRequest>
      _instance;
} _SyncNodeStokeRequest_default_instance_;
class SyncNodeStokeResItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncNodeStokeResItem>
      _instance;
} _SyncNodeStokeResItem_default_instance_;
class SyncNodeStokeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncNodeStokeResponse>
      _instance;
} _SyncNodeStokeResponse_default_instance_;
class ElectMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElectMessage>
      _instance;
} _ElectMessage_default_instance_;
}  // namespace protobuf
}  // namespace elect
}  // namespace shardora
namespace protobuf_protos_2felect_2eproto {
static void InitDefaultsVerifyVecValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_VerifyVecValue_default_instance_;
    new (ptr) ::shardora::elect::protobuf::VerifyVecValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::VerifyVecValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VerifyVecValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVerifyVecValue}, {}};

static void InitDefaultsBlsPublicKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_BlsPublicKey_default_instance_;
    new (ptr) ::shardora::elect::protobuf::BlsPublicKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::BlsPublicKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BlsPublicKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBlsPublicKey}, {}};

static void InitDefaultsPrevMemberInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_PrevMemberInfo_default_instance_;
    new (ptr) ::shardora::elect::protobuf::PrevMemberInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::PrevMemberInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrevMemberInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPrevMemberInfo}, {}};

static void InitDefaultsPrevMembers() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_PrevMembers_default_instance_;
    new (ptr) ::shardora::elect::protobuf::PrevMembers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::PrevMembers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PrevMembers =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPrevMembers}, {
      &protobuf_protos_2felect_2eproto::scc_info_PrevMemberInfo.base,
      &protobuf_protos_2felect_2eproto::scc_info_BlsPublicKey.base,}};

static void InitDefaultsmember() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_member_default_instance_;
    new (ptr) ::shardora::elect::protobuf::member();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::member::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_member =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmember}, {}};

static void InitDefaultsElectBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_ElectBlock_default_instance_;
    new (ptr) ::shardora::elect::protobuf::ElectBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::ElectBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ElectBlock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsElectBlock}, {
      &protobuf_protos_2felect_2eproto::scc_info_member.base,
      &protobuf_protos_2felect_2eproto::scc_info_PrevMembers.base,
      &protobuf_protos_2felect_2eproto::scc_info_DynamicShardingInfo.base,}};

static void InitDefaultsDynamicShardingInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_DynamicShardingInfo_default_instance_;
    new (ptr) ::shardora::elect::protobuf::DynamicShardingInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::DynamicShardingInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DynamicShardingInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDynamicShardingInfo}, {}};

static void InitDefaultsWaitingNodesMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_WaitingNodesMessage_default_instance_;
    new (ptr) ::shardora::elect::protobuf::WaitingNodesMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::WaitingNodesMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WaitingNodesMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWaitingNodesMessage}, {}};

static void InitDefaultsWaitingNodeHeartbeat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_WaitingNodeHeartbeat_default_instance_;
    new (ptr) ::shardora::elect::protobuf::WaitingNodeHeartbeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::WaitingNodeHeartbeat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WaitingNodeHeartbeat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWaitingNodeHeartbeat}, {}};

static void InitDefaultsLeaderRotationMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_LeaderRotationMessage_default_instance_;
    new (ptr) ::shardora::elect::protobuf::LeaderRotationMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::LeaderRotationMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LeaderRotationMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLeaderRotationMessage}, {}};

static void InitDefaultsSyncNodeStokeItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_SyncNodeStokeItem_default_instance_;
    new (ptr) ::shardora::elect::protobuf::SyncNodeStokeItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::SyncNodeStokeItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SyncNodeStokeItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSyncNodeStokeItem}, {}};

static void InitDefaultsSyncNodeStokeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_SyncNodeStokeRequest_default_instance_;
    new (ptr) ::shardora::elect::protobuf::SyncNodeStokeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::SyncNodeStokeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SyncNodeStokeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSyncNodeStokeRequest}, {
      &protobuf_protos_2felect_2eproto::scc_info_SyncNodeStokeItem.base,}};

static void InitDefaultsSyncNodeStokeResItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_SyncNodeStokeResItem_default_instance_;
    new (ptr) ::shardora::elect::protobuf::SyncNodeStokeResItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::SyncNodeStokeResItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SyncNodeStokeResItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSyncNodeStokeResItem}, {}};

static void InitDefaultsSyncNodeStokeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_SyncNodeStokeResponse_default_instance_;
    new (ptr) ::shardora::elect::protobuf::SyncNodeStokeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::SyncNodeStokeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SyncNodeStokeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSyncNodeStokeResponse}, {
      &protobuf_protos_2felect_2eproto::scc_info_SyncNodeStokeResItem.base,}};

static void InitDefaultsElectMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::elect::protobuf::_ElectMessage_default_instance_;
    new (ptr) ::shardora::elect::protobuf::ElectMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::elect::protobuf::ElectMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_ElectMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsElectMessage}, {
      &protobuf_protos_2felect_2eproto::scc_info_ElectBlock.base,
      &protobuf_protos_2felect_2eproto::scc_info_WaitingNodesMessage.base,
      &protobuf_protos_2felect_2eproto::scc_info_WaitingNodeHeartbeat.base,
      &protobuf_protos_2felect_2eproto::scc_info_LeaderRotationMessage.base,
      &protobuf_protos_2felect_2eproto::scc_info_SyncNodeStokeRequest.base,
      &protobuf_protos_2felect_2eproto::scc_info_SyncNodeStokeResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VerifyVecValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlsPublicKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrevMemberInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrevMembers.base);
  ::google::protobuf::internal::InitSCC(&scc_info_member.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElectBlock.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DynamicShardingInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitingNodesMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitingNodeHeartbeat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LeaderRotationMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SyncNodeStokeItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SyncNodeStokeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SyncNodeStokeResItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SyncNodeStokeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElectMessage.base);
}

::google::protobuf::Metadata file_level_metadata[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::VerifyVecValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::VerifyVecValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::VerifyVecValue, x_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::VerifyVecValue, x_c1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::VerifyVecValue, y_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::VerifyVecValue, y_c1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::VerifyVecValue, z_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::VerifyVecValue, z_c1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::VerifyVecValue, valid_t_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::BlsPublicKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::BlsPublicKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::BlsPublicKey, x_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::BlsPublicKey, x_c1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::BlsPublicKey, y_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::BlsPublicKey, y_c1_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::PrevMemberInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::PrevMemberInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::PrevMemberInfo, x_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::PrevMemberInfo, x_c1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::PrevMemberInfo, y_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::PrevMemberInfo, y_c1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::PrevMemberInfo, pool_idx_mod_num_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::PrevMembers, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::PrevMembers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::PrevMembers, bls_pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::PrevMembers, prev_elect_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::PrevMembers, common_pubkey_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::member, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::member, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::member, pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::member, pool_idx_mod_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::member, mining_amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::member, fts_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::member, consensus_gap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::member, agg_bls_pk_),
  0,
  5,
  2,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectBlock, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectBlock, in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectBlock, prev_members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectBlock, shard_network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectBlock, elect_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectBlock, all_gas_amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectBlock, gas_for_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectBlock, dynamic_sharding_info_),
  ~0u,
  0,
  5,
  2,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::DynamicShardingInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::DynamicShardingInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::DynamicShardingInfo, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::DynamicShardingInfo, action_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::WaitingNodesMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::WaitingNodesMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::WaitingNodesMessage, nodes_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::WaitingNodesMessage, waiting_shard_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::WaitingNodesMessage, stoke_hash_),
  ~0u,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::WaitingNodeHeartbeat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::WaitingNodeHeartbeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::WaitingNodeHeartbeat, public_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::WaitingNodeHeartbeat, public_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::WaitingNodeHeartbeat, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::WaitingNodeHeartbeat, timestamp_sec_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::LeaderRotationMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::LeaderRotationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::LeaderRotationMessage, leader_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::LeaderRotationMessage, pool_mod_num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeItem, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeItem, synced_tm_height_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeRequest, sync_item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeRequest, now_tm_height_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeResItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeResItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeResItem, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeResItem, balance_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeResponse, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::SyncNodeStokeResponse, now_tm_height_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectMessage, elect_block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectMessage, prev_elect_block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectMessage, waiting_nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectMessage, member_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectMessage, sign_ch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectMessage, sign_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectMessage, waiting_heartbeat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectMessage, leader_rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectMessage, sync_stoke_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::elect::protobuf::ElectMessage, sync_stoke_res_),
  2,
  3,
  4,
  9,
  0,
  1,
  5,
  6,
  7,
  8,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::shardora::elect::protobuf::VerifyVecValue)},
  { 19, 28, sizeof(::shardora::elect::protobuf::BlsPublicKey)},
  { 32, 42, sizeof(::shardora::elect::protobuf::PrevMemberInfo)},
  { 47, 55, sizeof(::shardora::elect::protobuf::PrevMembers)},
  { 58, 69, sizeof(::shardora::elect::protobuf::member)},
  { 75, 87, sizeof(::shardora::elect::protobuf::ElectBlock)},
  { 94, 101, sizeof(::shardora::elect::protobuf::DynamicShardingInfo)},
  { 103, 111, sizeof(::shardora::elect::protobuf::WaitingNodesMessage)},
  { 114, 123, sizeof(::shardora::elect::protobuf::WaitingNodeHeartbeat)},
  { 127, 134, sizeof(::shardora::elect::protobuf::LeaderRotationMessage)},
  { 136, 143, sizeof(::shardora::elect::protobuf::SyncNodeStokeItem)},
  { 145, 152, sizeof(::shardora::elect::protobuf::SyncNodeStokeRequest)},
  { 154, 161, sizeof(::shardora::elect::protobuf::SyncNodeStokeResItem)},
  { 163, 170, sizeof(::shardora::elect::protobuf::SyncNodeStokeResponse)},
  { 172, 187, sizeof(::shardora::elect::protobuf::ElectMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_VerifyVecValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_BlsPublicKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_PrevMemberInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_PrevMembers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_ElectBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_DynamicShardingInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_WaitingNodesMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_WaitingNodeHeartbeat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_LeaderRotationMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_SyncNodeStokeItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_SyncNodeStokeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_SyncNodeStokeResItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_SyncNodeStokeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::elect::protobuf::_ElectMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protos/elect.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022protos/elect.proto\022\027shardora.elect.pro"
      "tobuf\"u\n\016VerifyVecValue\022\014\n\004x_c0\030\001 \001(\014\022\014\n"
      "\004x_c1\030\002 \001(\014\022\014\n\004y_c0\030\003 \001(\014\022\014\n\004y_c1\030\004 \001(\014\022"
      "\014\n\004z_c0\030\005 \001(\014\022\014\n\004z_c1\030\006 \001(\014\022\017\n\007valid_t\030\007"
      " \001(\r\"F\n\014BlsPublicKey\022\014\n\004x_c0\030\001 \001(\014\022\014\n\004x_"
      "c1\030\002 \001(\014\022\014\n\004y_c0\030\003 \001(\014\022\014\n\004y_c1\030\004 \001(\014\"f\n\016"
      "PrevMemberInfo\022\014\n\004x_c0\030\001 \001(\014\022\014\n\004x_c1\030\002 \001"
      "(\014\022\014\n\004y_c0\030\003 \001(\014\022\014\n\004y_c1\030\004 \001(\014\022\034\n\020pool_i"
      "dx_mod_num\030\005 \001(\005:\002-1\"\243\001\n\013PrevMembers\022;\n\n"
      "bls_pubkey\030\001 \003(\0132\'.shardora.elect.protob"
      "uf.PrevMemberInfo\022\031\n\021prev_elect_height\030\002"
      " \001(\004\022<\n\rcommon_pubkey\030\003 \001(\0132%.shardora.e"
      "lect.protobuf.BlsPublicKey\"\207\001\n\006member\022\016\n"
      "\006pubkey\030\001 \001(\014\022\030\n\020pool_idx_mod_num\030\002 \001(\005\022"
      "\025\n\rmining_amount\030\003 \001(\004\022\021\n\tfts_value\030\004 \001("
      "\004\022\025\n\rconsensus_gap\030\005 \001(\004\022\022\n\nagg_bls_pk\030\006"
      " \001(\014\"\240\002\n\nElectBlock\022+\n\002in\030\001 \003(\0132\037.shardo"
      "ra.elect.protobuf.member\022:\n\014prev_members"
      "\030\002 \001(\0132$.shardora.elect.protobuf.PrevMem"
      "bers\022\030\n\020shard_network_id\030\003 \001(\r\022\024\n\014elect_"
      "height\030\004 \001(\004\022\026\n\016all_gas_amount\030\005 \001(\004\022\024\n\014"
      "gas_for_root\030\006 \001(\004\022K\n\025dynamic_sharding_i"
      "nfo\030\007 \001(\0132,.shardora.elect.protobuf.Dyna"
      "micShardingInfo\"9\n\023DynamicShardingInfo\022\022"
      "\n\nnetwork_id\030\001 \001(\r\022\016\n\006action\030\002 \001(\r\"Y\n\023Wa"
      "itingNodesMessage\022\024\n\014nodes_filter\030\001 \003(\004\022"
      "\030\n\020waiting_shard_id\030\002 \001(\r\022\022\n\nstoke_hash\030"
      "\003 \001(\014\"i\n\024WaitingNodeHeartbeat\022\021\n\tpublic_"
      "ip\030\001 \001(\014\022\023\n\013public_port\030\002 \001(\r\022\022\n\nnetwork"
      "_id\030\003 \001(\r\022\025\n\rtimestamp_sec\030\004 \001(\004\"@\n\025Lead"
      "erRotationMessage\022\021\n\tleader_id\030\001 \001(\014\022\024\n\014"
      "pool_mod_num\030\002 \001(\r\"9\n\021SyncNodeStokeItem\022"
      "\n\n\002id\030\001 \001(\014\022\030\n\020synced_tm_height\030\002 \001(\004\"l\n"
      "\024SyncNodeStokeRequest\022=\n\tsync_item\030\001 \003(\013"
      "2*.shardora.elect.protobuf.SyncNodeStoke"
      "Item\022\025\n\rnow_tm_height\030\002 \001(\004\"3\n\024SyncNodeS"
      "tokeResItem\022\n\n\002id\030\001 \001(\014\022\017\n\007balance\030\002 \001(\004"
      "\"l\n\025SyncNodeStokeResponse\022<\n\005items\030\001 \003(\013"
      "2-.shardora.elect.protobuf.SyncNodeStoke"
      "ResItem\022\025\n\rnow_tm_height\030\002 \001(\004\"\247\004\n\014Elect"
      "Message\0228\n\013elect_block\030\001 \001(\0132#.shardora."
      "elect.protobuf.ElectBlock\022=\n\020prev_elect_"
      "block\030\002 \001(\0132#.shardora.elect.protobuf.El"
      "ectBlock\022C\n\rwaiting_nodes\030\003 \001(\0132,.shardo"
      "ra.elect.protobuf.WaitingNodesMessage\022\024\n"
      "\014member_index\030\004 \001(\005\022\017\n\007sign_ch\030\005 \001(\014\022\020\n\010"
      "sign_res\030\006 \001(\014\022H\n\021waiting_heartbeat\030\007 \001("
      "\0132-.shardora.elect.protobuf.WaitingNodeH"
      "eartbeat\022G\n\017leader_rotation\030\010 \001(\0132..shar"
      "dora.elect.protobuf.LeaderRotationMessag"
      "e\022E\n\016sync_stoke_req\030\t \001(\0132-.shardora.ele"
      "ct.protobuf.SyncNodeStokeRequest\022F\n\016sync"
      "_stoke_res\030\n \001(\0132..shardora.elect.protob"
      "uf.SyncNodeStokeResponse"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2144);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protos/elect.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protos_2felect_2eproto
namespace shardora {
namespace elect {
namespace protobuf {

// ===================================================================

void VerifyVecValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyVecValue::kXC0FieldNumber;
const int VerifyVecValue::kXC1FieldNumber;
const int VerifyVecValue::kYC0FieldNumber;
const int VerifyVecValue::kYC1FieldNumber;
const int VerifyVecValue::kZC0FieldNumber;
const int VerifyVecValue::kZC1FieldNumber;
const int VerifyVecValue::kValidTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyVecValue::VerifyVecValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_VerifyVecValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.VerifyVecValue)
}
VerifyVecValue::VerifyVecValue(const VerifyVecValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x_c0()) {
    x_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_);
  }
  x_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x_c1()) {
    x_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_);
  }
  y_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y_c0()) {
    y_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_);
  }
  y_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y_c1()) {
    y_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_);
  }
  z_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_z_c0()) {
    z_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_c0_);
  }
  z_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_z_c1()) {
    z_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_c1_);
  }
  valid_t_ = from.valid_t_;
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.VerifyVecValue)
}

void VerifyVecValue::SharedCtor() {
  x_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_t_ = 0u;
}

VerifyVecValue::~VerifyVecValue() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.VerifyVecValue)
  SharedDtor();
}

void VerifyVecValue::SharedDtor() {
  x_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyVecValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VerifyVecValue::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyVecValue& VerifyVecValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_VerifyVecValue.base);
  return *internal_default_instance();
}


void VerifyVecValue::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.VerifyVecValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      x_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      x_c1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      y_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      y_c1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      z_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      z_c1_.ClearNonDefaultToEmptyNoArena();
    }
  }
  valid_t_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyVecValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.VerifyVecValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes x_c0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes x_c1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y_c0 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y_c1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes z_c0 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_z_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes z_c1 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_z_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 valid_t = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_valid_t();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &valid_t_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.VerifyVecValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.VerifyVecValue)
  return false;
#undef DO_
}

void VerifyVecValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.VerifyVecValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes x_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->x_c0(), output);
  }

  // optional bytes x_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->x_c1(), output);
  }

  // optional bytes y_c0 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->y_c0(), output);
  }

  // optional bytes y_c1 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->y_c1(), output);
  }

  // optional bytes z_c0 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->z_c0(), output);
  }

  // optional bytes z_c1 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->z_c1(), output);
  }

  // optional uint32 valid_t = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->valid_t(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.VerifyVecValue)
}

::google::protobuf::uint8* VerifyVecValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.VerifyVecValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes x_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->x_c0(), target);
  }

  // optional bytes x_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->x_c1(), target);
  }

  // optional bytes y_c0 = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->y_c0(), target);
  }

  // optional bytes y_c1 = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->y_c1(), target);
  }

  // optional bytes z_c0 = 5;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->z_c0(), target);
  }

  // optional bytes z_c1 = 6;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->z_c1(), target);
  }

  // optional uint32 valid_t = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->valid_t(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.VerifyVecValue)
  return target;
}

size_t VerifyVecValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.VerifyVecValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes x_c0 = 1;
    if (has_x_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x_c0());
    }

    // optional bytes x_c1 = 2;
    if (has_x_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x_c1());
    }

    // optional bytes y_c0 = 3;
    if (has_y_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y_c0());
    }

    // optional bytes y_c1 = 4;
    if (has_y_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y_c1());
    }

    // optional bytes z_c0 = 5;
    if (has_z_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->z_c0());
    }

    // optional bytes z_c1 = 6;
    if (has_z_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->z_c1());
    }

    // optional uint32 valid_t = 7;
    if (has_valid_t()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->valid_t());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VerifyVecValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.VerifyVecValue)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyVecValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyVecValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.VerifyVecValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.VerifyVecValue)
    MergeFrom(*source);
  }
}

void VerifyVecValue::MergeFrom(const VerifyVecValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.VerifyVecValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_x_c0();
      x_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_x_c1();
      x_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_y_c0();
      y_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_y_c1();
      y_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_z_c0();
      z_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_c0_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_z_c1();
      z_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_c1_);
    }
    if (cached_has_bits & 0x00000040u) {
      valid_t_ = from.valid_t_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerifyVecValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.VerifyVecValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyVecValue::CopyFrom(const VerifyVecValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.VerifyVecValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyVecValue::IsInitialized() const {
  return true;
}

void VerifyVecValue::Swap(VerifyVecValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyVecValue::InternalSwap(VerifyVecValue* other) {
  using std::swap;
  x_c0_.Swap(&other->x_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  x_c1_.Swap(&other->x_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c0_.Swap(&other->y_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c1_.Swap(&other->y_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  z_c0_.Swap(&other->z_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  z_c1_.Swap(&other->z_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(valid_t_, other->valid_t_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VerifyVecValue::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlsPublicKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlsPublicKey::kXC0FieldNumber;
const int BlsPublicKey::kXC1FieldNumber;
const int BlsPublicKey::kYC0FieldNumber;
const int BlsPublicKey::kYC1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlsPublicKey::BlsPublicKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_BlsPublicKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.BlsPublicKey)
}
BlsPublicKey::BlsPublicKey(const BlsPublicKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x_c0()) {
    x_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_);
  }
  x_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x_c1()) {
    x_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_);
  }
  y_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y_c0()) {
    y_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_);
  }
  y_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y_c1()) {
    y_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_);
  }
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.BlsPublicKey)
}

void BlsPublicKey::SharedCtor() {
  x_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BlsPublicKey::~BlsPublicKey() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.BlsPublicKey)
  SharedDtor();
}

void BlsPublicKey::SharedDtor() {
  x_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlsPublicKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BlsPublicKey::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlsPublicKey& BlsPublicKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_BlsPublicKey.base);
  return *internal_default_instance();
}


void BlsPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.BlsPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      x_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      x_c1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      y_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      y_c1_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BlsPublicKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.BlsPublicKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes x_c0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes x_c1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y_c0 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y_c1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.BlsPublicKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.BlsPublicKey)
  return false;
#undef DO_
}

void BlsPublicKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.BlsPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes x_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->x_c0(), output);
  }

  // optional bytes x_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->x_c1(), output);
  }

  // optional bytes y_c0 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->y_c0(), output);
  }

  // optional bytes y_c1 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->y_c1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.BlsPublicKey)
}

::google::protobuf::uint8* BlsPublicKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.BlsPublicKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes x_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->x_c0(), target);
  }

  // optional bytes x_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->x_c1(), target);
  }

  // optional bytes y_c0 = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->y_c0(), target);
  }

  // optional bytes y_c1 = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->y_c1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.BlsPublicKey)
  return target;
}

size_t BlsPublicKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.BlsPublicKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes x_c0 = 1;
    if (has_x_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x_c0());
    }

    // optional bytes x_c1 = 2;
    if (has_x_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x_c1());
    }

    // optional bytes y_c0 = 3;
    if (has_y_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y_c0());
    }

    // optional bytes y_c1 = 4;
    if (has_y_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y_c1());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlsPublicKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.BlsPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  const BlsPublicKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlsPublicKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.BlsPublicKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.BlsPublicKey)
    MergeFrom(*source);
  }
}

void BlsPublicKey::MergeFrom(const BlsPublicKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.BlsPublicKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_x_c0();
      x_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_x_c1();
      x_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_y_c0();
      y_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_y_c1();
      y_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_);
    }
  }
}

void BlsPublicKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.BlsPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlsPublicKey::CopyFrom(const BlsPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.BlsPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlsPublicKey::IsInitialized() const {
  return true;
}

void BlsPublicKey::Swap(BlsPublicKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlsPublicKey::InternalSwap(BlsPublicKey* other) {
  using std::swap;
  x_c0_.Swap(&other->x_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  x_c1_.Swap(&other->x_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c0_.Swap(&other->y_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c1_.Swap(&other->y_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BlsPublicKey::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrevMemberInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrevMemberInfo::kXC0FieldNumber;
const int PrevMemberInfo::kXC1FieldNumber;
const int PrevMemberInfo::kYC0FieldNumber;
const int PrevMemberInfo::kYC1FieldNumber;
const int PrevMemberInfo::kPoolIdxModNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrevMemberInfo::PrevMemberInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_PrevMemberInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.PrevMemberInfo)
}
PrevMemberInfo::PrevMemberInfo(const PrevMemberInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x_c0()) {
    x_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_);
  }
  x_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x_c1()) {
    x_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_);
  }
  y_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y_c0()) {
    y_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_);
  }
  y_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y_c1()) {
    y_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_);
  }
  pool_idx_mod_num_ = from.pool_idx_mod_num_;
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.PrevMemberInfo)
}

void PrevMemberInfo::SharedCtor() {
  x_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pool_idx_mod_num_ = -1;
}

PrevMemberInfo::~PrevMemberInfo() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.PrevMemberInfo)
  SharedDtor();
}

void PrevMemberInfo::SharedDtor() {
  x_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c0_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_c1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PrevMemberInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrevMemberInfo::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrevMemberInfo& PrevMemberInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_PrevMemberInfo.base);
  return *internal_default_instance();
}


void PrevMemberInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.PrevMemberInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      x_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      x_c1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      y_c0_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      y_c1_.ClearNonDefaultToEmptyNoArena();
    }
    pool_idx_mod_num_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PrevMemberInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.PrevMemberInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes x_c0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes x_c1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_x_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y_c0 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes y_c1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y_c1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pool_idx_mod_num = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_pool_idx_mod_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pool_idx_mod_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.PrevMemberInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.PrevMemberInfo)
  return false;
#undef DO_
}

void PrevMemberInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.PrevMemberInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes x_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->x_c0(), output);
  }

  // optional bytes x_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->x_c1(), output);
  }

  // optional bytes y_c0 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->y_c0(), output);
  }

  // optional bytes y_c1 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->y_c1(), output);
  }

  // optional int32 pool_idx_mod_num = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pool_idx_mod_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.PrevMemberInfo)
}

::google::protobuf::uint8* PrevMemberInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.PrevMemberInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes x_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->x_c0(), target);
  }

  // optional bytes x_c1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->x_c1(), target);
  }

  // optional bytes y_c0 = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->y_c0(), target);
  }

  // optional bytes y_c1 = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->y_c1(), target);
  }

  // optional int32 pool_idx_mod_num = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pool_idx_mod_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.PrevMemberInfo)
  return target;
}

size_t PrevMemberInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.PrevMemberInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes x_c0 = 1;
    if (has_x_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x_c0());
    }

    // optional bytes x_c1 = 2;
    if (has_x_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->x_c1());
    }

    // optional bytes y_c0 = 3;
    if (has_y_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y_c0());
    }

    // optional bytes y_c1 = 4;
    if (has_y_c1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->y_c1());
    }

    // optional int32 pool_idx_mod_num = 5 [default = -1];
    if (has_pool_idx_mod_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pool_idx_mod_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrevMemberInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.PrevMemberInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PrevMemberInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrevMemberInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.PrevMemberInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.PrevMemberInfo)
    MergeFrom(*source);
  }
}

void PrevMemberInfo::MergeFrom(const PrevMemberInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.PrevMemberInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_x_c0();
      x_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c0_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_x_c1();
      x_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_c1_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_y_c0();
      y_c0_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c0_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_y_c1();
      y_c1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_c1_);
    }
    if (cached_has_bits & 0x00000010u) {
      pool_idx_mod_num_ = from.pool_idx_mod_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrevMemberInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.PrevMemberInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrevMemberInfo::CopyFrom(const PrevMemberInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.PrevMemberInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrevMemberInfo::IsInitialized() const {
  return true;
}

void PrevMemberInfo::Swap(PrevMemberInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrevMemberInfo::InternalSwap(PrevMemberInfo* other) {
  using std::swap;
  x_c0_.Swap(&other->x_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  x_c1_.Swap(&other->x_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c0_.Swap(&other->y_c0_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  y_c1_.Swap(&other->y_c1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pool_idx_mod_num_, other->pool_idx_mod_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrevMemberInfo::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrevMembers::InitAsDefaultInstance() {
  ::shardora::elect::protobuf::_PrevMembers_default_instance_._instance.get_mutable()->common_pubkey_ = const_cast< ::shardora::elect::protobuf::BlsPublicKey*>(
      ::shardora::elect::protobuf::BlsPublicKey::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrevMembers::kBlsPubkeyFieldNumber;
const int PrevMembers::kPrevElectHeightFieldNumber;
const int PrevMembers::kCommonPubkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrevMembers::PrevMembers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_PrevMembers.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.PrevMembers)
}
PrevMembers::PrevMembers(const PrevMembers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      bls_pubkey_(from.bls_pubkey_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common_pubkey()) {
    common_pubkey_ = new ::shardora::elect::protobuf::BlsPublicKey(*from.common_pubkey_);
  } else {
    common_pubkey_ = NULL;
  }
  prev_elect_height_ = from.prev_elect_height_;
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.PrevMembers)
}

void PrevMembers::SharedCtor() {
  ::memset(&common_pubkey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prev_elect_height_) -
      reinterpret_cast<char*>(&common_pubkey_)) + sizeof(prev_elect_height_));
}

PrevMembers::~PrevMembers() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.PrevMembers)
  SharedDtor();
}

void PrevMembers::SharedDtor() {
  if (this != internal_default_instance()) delete common_pubkey_;
}

void PrevMembers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrevMembers::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrevMembers& PrevMembers::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_PrevMembers.base);
  return *internal_default_instance();
}


void PrevMembers::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.PrevMembers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bls_pubkey_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(common_pubkey_ != NULL);
    common_pubkey_->Clear();
  }
  prev_elect_height_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PrevMembers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.PrevMembers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shardora.elect.protobuf.PrevMemberInfo bls_pubkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bls_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 prev_elect_height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_prev_elect_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &prev_elect_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.elect.protobuf.BlsPublicKey common_pubkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.PrevMembers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.PrevMembers)
  return false;
#undef DO_
}

void PrevMembers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.PrevMembers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.elect.protobuf.PrevMemberInfo bls_pubkey = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bls_pubkey_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->bls_pubkey(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 prev_elect_height = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->prev_elect_height(), output);
  }

  // optional .shardora.elect.protobuf.BlsPublicKey common_pubkey = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_common_pubkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.PrevMembers)
}

::google::protobuf::uint8* PrevMembers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.PrevMembers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.elect.protobuf.PrevMemberInfo bls_pubkey = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bls_pubkey_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->bls_pubkey(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 prev_elect_height = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->prev_elect_height(), target);
  }

  // optional .shardora.elect.protobuf.BlsPublicKey common_pubkey = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_common_pubkey(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.PrevMembers)
  return target;
}

size_t PrevMembers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.PrevMembers)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.elect.protobuf.PrevMemberInfo bls_pubkey = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bls_pubkey_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bls_pubkey(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .shardora.elect.protobuf.BlsPublicKey common_pubkey = 3;
    if (has_common_pubkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *common_pubkey_);
    }

    // optional uint64 prev_elect_height = 2;
    if (has_prev_elect_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->prev_elect_height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrevMembers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.PrevMembers)
  GOOGLE_DCHECK_NE(&from, this);
  const PrevMembers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrevMembers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.PrevMembers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.PrevMembers)
    MergeFrom(*source);
  }
}

void PrevMembers::MergeFrom(const PrevMembers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.PrevMembers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bls_pubkey_.MergeFrom(from.bls_pubkey_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_common_pubkey()->::shardora::elect::protobuf::BlsPublicKey::MergeFrom(from.common_pubkey());
    }
    if (cached_has_bits & 0x00000002u) {
      prev_elect_height_ = from.prev_elect_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrevMembers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.PrevMembers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrevMembers::CopyFrom(const PrevMembers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.PrevMembers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrevMembers::IsInitialized() const {
  return true;
}

void PrevMembers::Swap(PrevMembers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrevMembers::InternalSwap(PrevMembers* other) {
  using std::swap;
  CastToBase(&bls_pubkey_)->InternalSwap(CastToBase(&other->bls_pubkey_));
  swap(common_pubkey_, other->common_pubkey_);
  swap(prev_elect_height_, other->prev_elect_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrevMembers::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void member::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int member::kPubkeyFieldNumber;
const int member::kPoolIdxModNumFieldNumber;
const int member::kMiningAmountFieldNumber;
const int member::kFtsValueFieldNumber;
const int member::kConsensusGapFieldNumber;
const int member::kAggBlsPkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

member::member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_member.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.member)
}
member::member(const member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pubkey()) {
    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  agg_bls_pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_agg_bls_pk()) {
    agg_bls_pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agg_bls_pk_);
  }
  ::memcpy(&mining_amount_, &from.mining_amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&pool_idx_mod_num_) -
    reinterpret_cast<char*>(&mining_amount_)) + sizeof(pool_idx_mod_num_));
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.member)
}

void member::SharedCtor() {
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agg_bls_pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mining_amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pool_idx_mod_num_) -
      reinterpret_cast<char*>(&mining_amount_)) + sizeof(pool_idx_mod_num_));
}

member::~member() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.member)
  SharedDtor();
}

void member::SharedDtor() {
  pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  agg_bls_pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void member::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* member::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const member& member::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_member.base);
  return *internal_default_instance();
}


void member::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      pubkey_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      agg_bls_pk_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&mining_amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pool_idx_mod_num_) -
        reinterpret_cast<char*>(&mining_amount_)) + sizeof(pool_idx_mod_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.member)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pubkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pool_idx_mod_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pool_idx_mod_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pool_idx_mod_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 mining_amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_mining_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mining_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 fts_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_fts_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fts_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 consensus_gap = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_consensus_gap();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &consensus_gap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes agg_bls_pk = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_agg_bls_pk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.member)
  return false;
#undef DO_
}

void member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pubkey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pubkey(), output);
  }

  // optional int32 pool_idx_mod_num = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pool_idx_mod_num(), output);
  }

  // optional uint64 mining_amount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->mining_amount(), output);
  }

  // optional uint64 fts_value = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->fts_value(), output);
  }

  // optional uint64 consensus_gap = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->consensus_gap(), output);
  }

  // optional bytes agg_bls_pk = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->agg_bls_pk(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.member)
}

::google::protobuf::uint8* member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pubkey = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pubkey(), target);
  }

  // optional int32 pool_idx_mod_num = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pool_idx_mod_num(), target);
  }

  // optional uint64 mining_amount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->mining_amount(), target);
  }

  // optional uint64 fts_value = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->fts_value(), target);
  }

  // optional uint64 consensus_gap = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->consensus_gap(), target);
  }

  // optional bytes agg_bls_pk = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->agg_bls_pk(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.member)
  return target;
}

size_t member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.member)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes pubkey = 1;
    if (has_pubkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pubkey());
    }

    // optional bytes agg_bls_pk = 6;
    if (has_agg_bls_pk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->agg_bls_pk());
    }

    // optional uint64 mining_amount = 3;
    if (has_mining_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->mining_amount());
    }

    // optional uint64 fts_value = 4;
    if (has_fts_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fts_value());
    }

    // optional uint64 consensus_gap = 5;
    if (has_consensus_gap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->consensus_gap());
    }

    // optional int32 pool_idx_mod_num = 2;
    if (has_pool_idx_mod_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pool_idx_mod_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.member)
  GOOGLE_DCHECK_NE(&from, this);
  const member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.member)
    MergeFrom(*source);
  }
}

void member::MergeFrom(const member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pubkey();
      pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_agg_bls_pk();
      agg_bls_pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.agg_bls_pk_);
    }
    if (cached_has_bits & 0x00000004u) {
      mining_amount_ = from.mining_amount_;
    }
    if (cached_has_bits & 0x00000008u) {
      fts_value_ = from.fts_value_;
    }
    if (cached_has_bits & 0x00000010u) {
      consensus_gap_ = from.consensus_gap_;
    }
    if (cached_has_bits & 0x00000020u) {
      pool_idx_mod_num_ = from.pool_idx_mod_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void member::CopyFrom(const member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool member::IsInitialized() const {
  return true;
}

void member::Swap(member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void member::InternalSwap(member* other) {
  using std::swap;
  pubkey_.Swap(&other->pubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  agg_bls_pk_.Swap(&other->agg_bls_pk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mining_amount_, other->mining_amount_);
  swap(fts_value_, other->fts_value_);
  swap(consensus_gap_, other->consensus_gap_);
  swap(pool_idx_mod_num_, other->pool_idx_mod_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata member::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElectBlock::InitAsDefaultInstance() {
  ::shardora::elect::protobuf::_ElectBlock_default_instance_._instance.get_mutable()->prev_members_ = const_cast< ::shardora::elect::protobuf::PrevMembers*>(
      ::shardora::elect::protobuf::PrevMembers::internal_default_instance());
  ::shardora::elect::protobuf::_ElectBlock_default_instance_._instance.get_mutable()->dynamic_sharding_info_ = const_cast< ::shardora::elect::protobuf::DynamicShardingInfo*>(
      ::shardora::elect::protobuf::DynamicShardingInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElectBlock::kInFieldNumber;
const int ElectBlock::kPrevMembersFieldNumber;
const int ElectBlock::kShardNetworkIdFieldNumber;
const int ElectBlock::kElectHeightFieldNumber;
const int ElectBlock::kAllGasAmountFieldNumber;
const int ElectBlock::kGasForRootFieldNumber;
const int ElectBlock::kDynamicShardingInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElectBlock::ElectBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_ElectBlock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.ElectBlock)
}
ElectBlock::ElectBlock(const ElectBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      in_(from.in_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prev_members()) {
    prev_members_ = new ::shardora::elect::protobuf::PrevMembers(*from.prev_members_);
  } else {
    prev_members_ = NULL;
  }
  if (from.has_dynamic_sharding_info()) {
    dynamic_sharding_info_ = new ::shardora::elect::protobuf::DynamicShardingInfo(*from.dynamic_sharding_info_);
  } else {
    dynamic_sharding_info_ = NULL;
  }
  ::memcpy(&elect_height_, &from.elect_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&shard_network_id_) -
    reinterpret_cast<char*>(&elect_height_)) + sizeof(shard_network_id_));
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.ElectBlock)
}

void ElectBlock::SharedCtor() {
  ::memset(&prev_members_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shard_network_id_) -
      reinterpret_cast<char*>(&prev_members_)) + sizeof(shard_network_id_));
}

ElectBlock::~ElectBlock() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.ElectBlock)
  SharedDtor();
}

void ElectBlock::SharedDtor() {
  if (this != internal_default_instance()) delete prev_members_;
  if (this != internal_default_instance()) delete dynamic_sharding_info_;
}

void ElectBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElectBlock::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElectBlock& ElectBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_ElectBlock.base);
  return *internal_default_instance();
}


void ElectBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.ElectBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  in_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(prev_members_ != NULL);
      prev_members_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(dynamic_sharding_info_ != NULL);
      dynamic_sharding_info_->Clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&elect_height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&shard_network_id_) -
        reinterpret_cast<char*>(&elect_height_)) + sizeof(shard_network_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ElectBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.ElectBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shardora.elect.protobuf.member in = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_in()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.elect.protobuf.PrevMembers prev_members = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prev_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 shard_network_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_shard_network_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shard_network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 elect_height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_elect_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elect_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 all_gas_amount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_all_gas_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &all_gas_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gas_for_root = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_gas_for_root();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gas_for_root_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.elect.protobuf.DynamicShardingInfo dynamic_sharding_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dynamic_sharding_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.ElectBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.ElectBlock)
  return false;
#undef DO_
}

void ElectBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.ElectBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.elect.protobuf.member in = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->in_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->in(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .shardora.elect.protobuf.PrevMembers prev_members = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_prev_members(), output);
  }

  // optional uint32 shard_network_id = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->shard_network_id(), output);
  }

  // optional uint64 elect_height = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->elect_height(), output);
  }

  // optional uint64 all_gas_amount = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->all_gas_amount(), output);
  }

  // optional uint64 gas_for_root = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->gas_for_root(), output);
  }

  // optional .shardora.elect.protobuf.DynamicShardingInfo dynamic_sharding_info = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_dynamic_sharding_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.ElectBlock)
}

::google::protobuf::uint8* ElectBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.ElectBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.elect.protobuf.member in = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->in_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->in(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .shardora.elect.protobuf.PrevMembers prev_members = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_prev_members(), deterministic, target);
  }

  // optional uint32 shard_network_id = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->shard_network_id(), target);
  }

  // optional uint64 elect_height = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->elect_height(), target);
  }

  // optional uint64 all_gas_amount = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->all_gas_amount(), target);
  }

  // optional uint64 gas_for_root = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->gas_for_root(), target);
  }

  // optional .shardora.elect.protobuf.DynamicShardingInfo dynamic_sharding_info = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_dynamic_sharding_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.ElectBlock)
  return target;
}

size_t ElectBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.ElectBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.elect.protobuf.member in = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->in_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->in(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional .shardora.elect.protobuf.PrevMembers prev_members = 2;
    if (has_prev_members()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *prev_members_);
    }

    // optional .shardora.elect.protobuf.DynamicShardingInfo dynamic_sharding_info = 7;
    if (has_dynamic_sharding_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *dynamic_sharding_info_);
    }

    // optional uint64 elect_height = 4;
    if (has_elect_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->elect_height());
    }

    // optional uint64 all_gas_amount = 5;
    if (has_all_gas_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->all_gas_amount());
    }

    // optional uint64 gas_for_root = 6;
    if (has_gas_for_root()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gas_for_root());
    }

    // optional uint32 shard_network_id = 3;
    if (has_shard_network_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shard_network_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElectBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.ElectBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const ElectBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElectBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.ElectBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.ElectBlock)
    MergeFrom(*source);
  }
}

void ElectBlock::MergeFrom(const ElectBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.ElectBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  in_.MergeFrom(from.in_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_prev_members()->::shardora::elect::protobuf::PrevMembers::MergeFrom(from.prev_members());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_dynamic_sharding_info()->::shardora::elect::protobuf::DynamicShardingInfo::MergeFrom(from.dynamic_sharding_info());
    }
    if (cached_has_bits & 0x00000004u) {
      elect_height_ = from.elect_height_;
    }
    if (cached_has_bits & 0x00000008u) {
      all_gas_amount_ = from.all_gas_amount_;
    }
    if (cached_has_bits & 0x00000010u) {
      gas_for_root_ = from.gas_for_root_;
    }
    if (cached_has_bits & 0x00000020u) {
      shard_network_id_ = from.shard_network_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ElectBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.ElectBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElectBlock::CopyFrom(const ElectBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.ElectBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElectBlock::IsInitialized() const {
  return true;
}

void ElectBlock::Swap(ElectBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElectBlock::InternalSwap(ElectBlock* other) {
  using std::swap;
  CastToBase(&in_)->InternalSwap(CastToBase(&other->in_));
  swap(prev_members_, other->prev_members_);
  swap(dynamic_sharding_info_, other->dynamic_sharding_info_);
  swap(elect_height_, other->elect_height_);
  swap(all_gas_amount_, other->all_gas_amount_);
  swap(gas_for_root_, other->gas_for_root_);
  swap(shard_network_id_, other->shard_network_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElectBlock::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DynamicShardingInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DynamicShardingInfo::kNetworkIdFieldNumber;
const int DynamicShardingInfo::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DynamicShardingInfo::DynamicShardingInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_DynamicShardingInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.DynamicShardingInfo)
}
DynamicShardingInfo::DynamicShardingInfo(const DynamicShardingInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&network_id_, &from.network_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&network_id_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.DynamicShardingInfo)
}

void DynamicShardingInfo::SharedCtor() {
  ::memset(&network_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&network_id_)) + sizeof(action_));
}

DynamicShardingInfo::~DynamicShardingInfo() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.DynamicShardingInfo)
  SharedDtor();
}

void DynamicShardingInfo::SharedDtor() {
}

void DynamicShardingInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DynamicShardingInfo::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DynamicShardingInfo& DynamicShardingInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_DynamicShardingInfo.base);
  return *internal_default_instance();
}


void DynamicShardingInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.DynamicShardingInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&network_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&action_) -
        reinterpret_cast<char*>(&network_id_)) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DynamicShardingInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.DynamicShardingInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_network_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.DynamicShardingInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.DynamicShardingInfo)
  return false;
#undef DO_
}

void DynamicShardingInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.DynamicShardingInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->network_id(), output);
  }

  // optional uint32 action = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.DynamicShardingInfo)
}

::google::protobuf::uint8* DynamicShardingInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.DynamicShardingInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->network_id(), target);
  }

  // optional uint32 action = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.DynamicShardingInfo)
  return target;
}

size_t DynamicShardingInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.DynamicShardingInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 network_id = 1;
    if (has_network_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_id());
    }

    // optional uint32 action = 2;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DynamicShardingInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.DynamicShardingInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DynamicShardingInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DynamicShardingInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.DynamicShardingInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.DynamicShardingInfo)
    MergeFrom(*source);
  }
}

void DynamicShardingInfo::MergeFrom(const DynamicShardingInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.DynamicShardingInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      network_id_ = from.network_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DynamicShardingInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.DynamicShardingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DynamicShardingInfo::CopyFrom(const DynamicShardingInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.DynamicShardingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicShardingInfo::IsInitialized() const {
  return true;
}

void DynamicShardingInfo::Swap(DynamicShardingInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DynamicShardingInfo::InternalSwap(DynamicShardingInfo* other) {
  using std::swap;
  swap(network_id_, other->network_id_);
  swap(action_, other->action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DynamicShardingInfo::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitingNodesMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitingNodesMessage::kNodesFilterFieldNumber;
const int WaitingNodesMessage::kWaitingShardIdFieldNumber;
const int WaitingNodesMessage::kStokeHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitingNodesMessage::WaitingNodesMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_WaitingNodesMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.WaitingNodesMessage)
}
WaitingNodesMessage::WaitingNodesMessage(const WaitingNodesMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      nodes_filter_(from.nodes_filter_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stoke_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_stoke_hash()) {
    stoke_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoke_hash_);
  }
  waiting_shard_id_ = from.waiting_shard_id_;
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.WaitingNodesMessage)
}

void WaitingNodesMessage::SharedCtor() {
  stoke_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  waiting_shard_id_ = 0u;
}

WaitingNodesMessage::~WaitingNodesMessage() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.WaitingNodesMessage)
  SharedDtor();
}

void WaitingNodesMessage::SharedDtor() {
  stoke_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WaitingNodesMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitingNodesMessage::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitingNodesMessage& WaitingNodesMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_WaitingNodesMessage.base);
  return *internal_default_instance();
}


void WaitingNodesMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.WaitingNodesMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_filter_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    stoke_hash_.ClearNonDefaultToEmptyNoArena();
  }
  waiting_shard_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WaitingNodesMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.WaitingNodesMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 nodes_filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_nodes_filter())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_nodes_filter())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 waiting_shard_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_waiting_shard_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &waiting_shard_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes stoke_hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stoke_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.WaitingNodesMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.WaitingNodesMessage)
  return false;
#undef DO_
}

void WaitingNodesMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.WaitingNodesMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 nodes_filter = 1;
  for (int i = 0, n = this->nodes_filter_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->nodes_filter(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 waiting_shard_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->waiting_shard_id(), output);
  }

  // optional bytes stoke_hash = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->stoke_hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.WaitingNodesMessage)
}

::google::protobuf::uint8* WaitingNodesMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.WaitingNodesMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 nodes_filter = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->nodes_filter_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 waiting_shard_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->waiting_shard_id(), target);
  }

  // optional bytes stoke_hash = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->stoke_hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.WaitingNodesMessage)
  return target;
}

size_t WaitingNodesMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.WaitingNodesMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 nodes_filter = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->nodes_filter_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->nodes_filter_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes stoke_hash = 3;
    if (has_stoke_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->stoke_hash());
    }

    // optional uint32 waiting_shard_id = 2;
    if (has_waiting_shard_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->waiting_shard_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitingNodesMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.WaitingNodesMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitingNodesMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitingNodesMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.WaitingNodesMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.WaitingNodesMessage)
    MergeFrom(*source);
  }
}

void WaitingNodesMessage::MergeFrom(const WaitingNodesMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.WaitingNodesMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_filter_.MergeFrom(from.nodes_filter_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_stoke_hash();
      stoke_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stoke_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      waiting_shard_id_ = from.waiting_shard_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WaitingNodesMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.WaitingNodesMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitingNodesMessage::CopyFrom(const WaitingNodesMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.WaitingNodesMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitingNodesMessage::IsInitialized() const {
  return true;
}

void WaitingNodesMessage::Swap(WaitingNodesMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitingNodesMessage::InternalSwap(WaitingNodesMessage* other) {
  using std::swap;
  nodes_filter_.InternalSwap(&other->nodes_filter_);
  stoke_hash_.Swap(&other->stoke_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(waiting_shard_id_, other->waiting_shard_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitingNodesMessage::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaitingNodeHeartbeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitingNodeHeartbeat::kPublicIpFieldNumber;
const int WaitingNodeHeartbeat::kPublicPortFieldNumber;
const int WaitingNodeHeartbeat::kNetworkIdFieldNumber;
const int WaitingNodeHeartbeat::kTimestampSecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitingNodeHeartbeat::WaitingNodeHeartbeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_WaitingNodeHeartbeat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.WaitingNodeHeartbeat)
}
WaitingNodeHeartbeat::WaitingNodeHeartbeat(const WaitingNodeHeartbeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  public_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_ip()) {
    public_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_ip_);
  }
  ::memcpy(&public_port_, &from.public_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_sec_) -
    reinterpret_cast<char*>(&public_port_)) + sizeof(timestamp_sec_));
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.WaitingNodeHeartbeat)
}

void WaitingNodeHeartbeat::SharedCtor() {
  public_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&public_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_sec_) -
      reinterpret_cast<char*>(&public_port_)) + sizeof(timestamp_sec_));
}

WaitingNodeHeartbeat::~WaitingNodeHeartbeat() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.WaitingNodeHeartbeat)
  SharedDtor();
}

void WaitingNodeHeartbeat::SharedDtor() {
  public_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WaitingNodeHeartbeat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WaitingNodeHeartbeat::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaitingNodeHeartbeat& WaitingNodeHeartbeat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_WaitingNodeHeartbeat.base);
  return *internal_default_instance();
}


void WaitingNodeHeartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.WaitingNodeHeartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    public_ip_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&public_port_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_sec_) -
        reinterpret_cast<char*>(&public_port_)) + sizeof(timestamp_sec_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WaitingNodeHeartbeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.WaitingNodeHeartbeat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes public_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_public_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 public_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_public_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &public_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 network_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_network_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 timestamp_sec = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_timestamp_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.WaitingNodeHeartbeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.WaitingNodeHeartbeat)
  return false;
#undef DO_
}

void WaitingNodeHeartbeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.WaitingNodeHeartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes public_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->public_ip(), output);
  }

  // optional uint32 public_port = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->public_port(), output);
  }

  // optional uint32 network_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->network_id(), output);
  }

  // optional uint64 timestamp_sec = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->timestamp_sec(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.WaitingNodeHeartbeat)
}

::google::protobuf::uint8* WaitingNodeHeartbeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.WaitingNodeHeartbeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes public_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->public_ip(), target);
  }

  // optional uint32 public_port = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->public_port(), target);
  }

  // optional uint32 network_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->network_id(), target);
  }

  // optional uint64 timestamp_sec = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->timestamp_sec(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.WaitingNodeHeartbeat)
  return target;
}

size_t WaitingNodeHeartbeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.WaitingNodeHeartbeat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes public_ip = 1;
    if (has_public_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->public_ip());
    }

    // optional uint32 public_port = 2;
    if (has_public_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->public_port());
    }

    // optional uint32 network_id = 3;
    if (has_network_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_id());
    }

    // optional uint64 timestamp_sec = 4;
    if (has_timestamp_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp_sec());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitingNodeHeartbeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.WaitingNodeHeartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitingNodeHeartbeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaitingNodeHeartbeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.WaitingNodeHeartbeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.WaitingNodeHeartbeat)
    MergeFrom(*source);
  }
}

void WaitingNodeHeartbeat::MergeFrom(const WaitingNodeHeartbeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.WaitingNodeHeartbeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_public_ip();
      public_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      public_port_ = from.public_port_;
    }
    if (cached_has_bits & 0x00000004u) {
      network_id_ = from.network_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_sec_ = from.timestamp_sec_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WaitingNodeHeartbeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.WaitingNodeHeartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitingNodeHeartbeat::CopyFrom(const WaitingNodeHeartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.WaitingNodeHeartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitingNodeHeartbeat::IsInitialized() const {
  return true;
}

void WaitingNodeHeartbeat::Swap(WaitingNodeHeartbeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitingNodeHeartbeat::InternalSwap(WaitingNodeHeartbeat* other) {
  using std::swap;
  public_ip_.Swap(&other->public_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(public_port_, other->public_port_);
  swap(network_id_, other->network_id_);
  swap(timestamp_sec_, other->timestamp_sec_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WaitingNodeHeartbeat::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaderRotationMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaderRotationMessage::kLeaderIdFieldNumber;
const int LeaderRotationMessage::kPoolModNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaderRotationMessage::LeaderRotationMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_LeaderRotationMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.LeaderRotationMessage)
}
LeaderRotationMessage::LeaderRotationMessage(const LeaderRotationMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader_id()) {
    leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
  }
  pool_mod_num_ = from.pool_mod_num_;
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.LeaderRotationMessage)
}

void LeaderRotationMessage::SharedCtor() {
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pool_mod_num_ = 0u;
}

LeaderRotationMessage::~LeaderRotationMessage() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.LeaderRotationMessage)
  SharedDtor();
}

void LeaderRotationMessage::SharedDtor() {
  leader_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LeaderRotationMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LeaderRotationMessage::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaderRotationMessage& LeaderRotationMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_LeaderRotationMessage.base);
  return *internal_default_instance();
}


void LeaderRotationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.LeaderRotationMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    leader_id_.ClearNonDefaultToEmptyNoArena();
  }
  pool_mod_num_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LeaderRotationMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.LeaderRotationMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes leader_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_leader_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pool_mod_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pool_mod_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pool_mod_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.LeaderRotationMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.LeaderRotationMessage)
  return false;
#undef DO_
}

void LeaderRotationMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.LeaderRotationMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes leader_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->leader_id(), output);
  }

  // optional uint32 pool_mod_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pool_mod_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.LeaderRotationMessage)
}

::google::protobuf::uint8* LeaderRotationMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.LeaderRotationMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes leader_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->leader_id(), target);
  }

  // optional uint32 pool_mod_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pool_mod_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.LeaderRotationMessage)
  return target;
}

size_t LeaderRotationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.LeaderRotationMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes leader_id = 1;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->leader_id());
    }

    // optional uint32 pool_mod_num = 2;
    if (has_pool_mod_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pool_mod_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LeaderRotationMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.LeaderRotationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaderRotationMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaderRotationMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.LeaderRotationMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.LeaderRotationMessage)
    MergeFrom(*source);
  }
}

void LeaderRotationMessage::MergeFrom(const LeaderRotationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.LeaderRotationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_leader_id();
      leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      pool_mod_num_ = from.pool_mod_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LeaderRotationMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.LeaderRotationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaderRotationMessage::CopyFrom(const LeaderRotationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.LeaderRotationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaderRotationMessage::IsInitialized() const {
  return true;
}

void LeaderRotationMessage::Swap(LeaderRotationMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaderRotationMessage::InternalSwap(LeaderRotationMessage* other) {
  using std::swap;
  leader_id_.Swap(&other->leader_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pool_mod_num_, other->pool_mod_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LeaderRotationMessage::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncNodeStokeItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncNodeStokeItem::kIdFieldNumber;
const int SyncNodeStokeItem::kSyncedTmHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncNodeStokeItem::SyncNodeStokeItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_SyncNodeStokeItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.SyncNodeStokeItem)
}
SyncNodeStokeItem::SyncNodeStokeItem(const SyncNodeStokeItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  synced_tm_height_ = from.synced_tm_height_;
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.SyncNodeStokeItem)
}

void SyncNodeStokeItem::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  synced_tm_height_ = GOOGLE_ULONGLONG(0);
}

SyncNodeStokeItem::~SyncNodeStokeItem() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.SyncNodeStokeItem)
  SharedDtor();
}

void SyncNodeStokeItem::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncNodeStokeItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SyncNodeStokeItem::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncNodeStokeItem& SyncNodeStokeItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_SyncNodeStokeItem.base);
  return *internal_default_instance();
}


void SyncNodeStokeItem::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.SyncNodeStokeItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  synced_tm_height_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SyncNodeStokeItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.SyncNodeStokeItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 synced_tm_height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_synced_tm_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &synced_tm_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.SyncNodeStokeItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.SyncNodeStokeItem)
  return false;
#undef DO_
}

void SyncNodeStokeItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.SyncNodeStokeItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->id(), output);
  }

  // optional uint64 synced_tm_height = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->synced_tm_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.SyncNodeStokeItem)
}

::google::protobuf::uint8* SyncNodeStokeItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.SyncNodeStokeItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->id(), target);
  }

  // optional uint64 synced_tm_height = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->synced_tm_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.SyncNodeStokeItem)
  return target;
}

size_t SyncNodeStokeItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.SyncNodeStokeItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id());
    }

    // optional uint64 synced_tm_height = 2;
    if (has_synced_tm_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->synced_tm_height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncNodeStokeItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.SyncNodeStokeItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncNodeStokeItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncNodeStokeItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.SyncNodeStokeItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.SyncNodeStokeItem)
    MergeFrom(*source);
  }
}

void SyncNodeStokeItem::MergeFrom(const SyncNodeStokeItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.SyncNodeStokeItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      synced_tm_height_ = from.synced_tm_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SyncNodeStokeItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.SyncNodeStokeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncNodeStokeItem::CopyFrom(const SyncNodeStokeItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.SyncNodeStokeItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncNodeStokeItem::IsInitialized() const {
  return true;
}

void SyncNodeStokeItem::Swap(SyncNodeStokeItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncNodeStokeItem::InternalSwap(SyncNodeStokeItem* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(synced_tm_height_, other->synced_tm_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SyncNodeStokeItem::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncNodeStokeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncNodeStokeRequest::kSyncItemFieldNumber;
const int SyncNodeStokeRequest::kNowTmHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncNodeStokeRequest::SyncNodeStokeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_SyncNodeStokeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.SyncNodeStokeRequest)
}
SyncNodeStokeRequest::SyncNodeStokeRequest(const SyncNodeStokeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      sync_item_(from.sync_item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  now_tm_height_ = from.now_tm_height_;
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.SyncNodeStokeRequest)
}

void SyncNodeStokeRequest::SharedCtor() {
  now_tm_height_ = GOOGLE_ULONGLONG(0);
}

SyncNodeStokeRequest::~SyncNodeStokeRequest() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.SyncNodeStokeRequest)
  SharedDtor();
}

void SyncNodeStokeRequest::SharedDtor() {
}

void SyncNodeStokeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SyncNodeStokeRequest::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncNodeStokeRequest& SyncNodeStokeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_SyncNodeStokeRequest.base);
  return *internal_default_instance();
}


void SyncNodeStokeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.SyncNodeStokeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sync_item_.Clear();
  now_tm_height_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SyncNodeStokeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.SyncNodeStokeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shardora.elect.protobuf.SyncNodeStokeItem sync_item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sync_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 now_tm_height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_now_tm_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &now_tm_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.SyncNodeStokeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.SyncNodeStokeRequest)
  return false;
#undef DO_
}

void SyncNodeStokeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.SyncNodeStokeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.elect.protobuf.SyncNodeStokeItem sync_item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sync_item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sync_item(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 now_tm_height = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->now_tm_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.SyncNodeStokeRequest)
}

::google::protobuf::uint8* SyncNodeStokeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.SyncNodeStokeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.elect.protobuf.SyncNodeStokeItem sync_item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sync_item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sync_item(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 now_tm_height = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->now_tm_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.SyncNodeStokeRequest)
  return target;
}

size_t SyncNodeStokeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.SyncNodeStokeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.elect.protobuf.SyncNodeStokeItem sync_item = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sync_item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sync_item(static_cast<int>(i)));
    }
  }

  // optional uint64 now_tm_height = 2;
  if (has_now_tm_height()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->now_tm_height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncNodeStokeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.SyncNodeStokeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncNodeStokeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncNodeStokeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.SyncNodeStokeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.SyncNodeStokeRequest)
    MergeFrom(*source);
  }
}

void SyncNodeStokeRequest::MergeFrom(const SyncNodeStokeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.SyncNodeStokeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sync_item_.MergeFrom(from.sync_item_);
  if (from.has_now_tm_height()) {
    set_now_tm_height(from.now_tm_height());
  }
}

void SyncNodeStokeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.SyncNodeStokeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncNodeStokeRequest::CopyFrom(const SyncNodeStokeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.SyncNodeStokeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncNodeStokeRequest::IsInitialized() const {
  return true;
}

void SyncNodeStokeRequest::Swap(SyncNodeStokeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncNodeStokeRequest::InternalSwap(SyncNodeStokeRequest* other) {
  using std::swap;
  CastToBase(&sync_item_)->InternalSwap(CastToBase(&other->sync_item_));
  swap(now_tm_height_, other->now_tm_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SyncNodeStokeRequest::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncNodeStokeResItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncNodeStokeResItem::kIdFieldNumber;
const int SyncNodeStokeResItem::kBalanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncNodeStokeResItem::SyncNodeStokeResItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_SyncNodeStokeResItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.SyncNodeStokeResItem)
}
SyncNodeStokeResItem::SyncNodeStokeResItem(const SyncNodeStokeResItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  balance_ = from.balance_;
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.SyncNodeStokeResItem)
}

void SyncNodeStokeResItem::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_ = GOOGLE_ULONGLONG(0);
}

SyncNodeStokeResItem::~SyncNodeStokeResItem() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.SyncNodeStokeResItem)
  SharedDtor();
}

void SyncNodeStokeResItem::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncNodeStokeResItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SyncNodeStokeResItem::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncNodeStokeResItem& SyncNodeStokeResItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_SyncNodeStokeResItem.base);
  return *internal_default_instance();
}


void SyncNodeStokeResItem::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.SyncNodeStokeResItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  balance_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SyncNodeStokeResItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.SyncNodeStokeResItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 balance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_balance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.SyncNodeStokeResItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.SyncNodeStokeResItem)
  return false;
#undef DO_
}

void SyncNodeStokeResItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.SyncNodeStokeResItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->id(), output);
  }

  // optional uint64 balance = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->balance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.SyncNodeStokeResItem)
}

::google::protobuf::uint8* SyncNodeStokeResItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.SyncNodeStokeResItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes id = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->id(), target);
  }

  // optional uint64 balance = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->balance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.SyncNodeStokeResItem)
  return target;
}

size_t SyncNodeStokeResItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.SyncNodeStokeResItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id());
    }

    // optional uint64 balance = 2;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->balance());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncNodeStokeResItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.SyncNodeStokeResItem)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncNodeStokeResItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncNodeStokeResItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.SyncNodeStokeResItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.SyncNodeStokeResItem)
    MergeFrom(*source);
  }
}

void SyncNodeStokeResItem::MergeFrom(const SyncNodeStokeResItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.SyncNodeStokeResItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      balance_ = from.balance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SyncNodeStokeResItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.SyncNodeStokeResItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncNodeStokeResItem::CopyFrom(const SyncNodeStokeResItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.SyncNodeStokeResItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncNodeStokeResItem::IsInitialized() const {
  return true;
}

void SyncNodeStokeResItem::Swap(SyncNodeStokeResItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncNodeStokeResItem::InternalSwap(SyncNodeStokeResItem* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(balance_, other->balance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SyncNodeStokeResItem::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncNodeStokeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncNodeStokeResponse::kItemsFieldNumber;
const int SyncNodeStokeResponse::kNowTmHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncNodeStokeResponse::SyncNodeStokeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_SyncNodeStokeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.SyncNodeStokeResponse)
}
SyncNodeStokeResponse::SyncNodeStokeResponse(const SyncNodeStokeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  now_tm_height_ = from.now_tm_height_;
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.SyncNodeStokeResponse)
}

void SyncNodeStokeResponse::SharedCtor() {
  now_tm_height_ = GOOGLE_ULONGLONG(0);
}

SyncNodeStokeResponse::~SyncNodeStokeResponse() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.SyncNodeStokeResponse)
  SharedDtor();
}

void SyncNodeStokeResponse::SharedDtor() {
}

void SyncNodeStokeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SyncNodeStokeResponse::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncNodeStokeResponse& SyncNodeStokeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_SyncNodeStokeResponse.base);
  return *internal_default_instance();
}


void SyncNodeStokeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.SyncNodeStokeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  now_tm_height_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SyncNodeStokeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.SyncNodeStokeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .shardora.elect.protobuf.SyncNodeStokeResItem items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 now_tm_height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_now_tm_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &now_tm_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.SyncNodeStokeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.SyncNodeStokeResponse)
  return false;
#undef DO_
}

void SyncNodeStokeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.SyncNodeStokeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.elect.protobuf.SyncNodeStokeResItem items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->items(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 now_tm_height = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->now_tm_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.SyncNodeStokeResponse)
}

::google::protobuf::uint8* SyncNodeStokeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.SyncNodeStokeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .shardora.elect.protobuf.SyncNodeStokeResItem items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 now_tm_height = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->now_tm_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.SyncNodeStokeResponse)
  return target;
}

size_t SyncNodeStokeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.SyncNodeStokeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.elect.protobuf.SyncNodeStokeResItem items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // optional uint64 now_tm_height = 2;
  if (has_now_tm_height()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->now_tm_height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncNodeStokeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.SyncNodeStokeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncNodeStokeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncNodeStokeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.SyncNodeStokeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.SyncNodeStokeResponse)
    MergeFrom(*source);
  }
}

void SyncNodeStokeResponse::MergeFrom(const SyncNodeStokeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.SyncNodeStokeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.has_now_tm_height()) {
    set_now_tm_height(from.now_tm_height());
  }
}

void SyncNodeStokeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.SyncNodeStokeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncNodeStokeResponse::CopyFrom(const SyncNodeStokeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.SyncNodeStokeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncNodeStokeResponse::IsInitialized() const {
  return true;
}

void SyncNodeStokeResponse::Swap(SyncNodeStokeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncNodeStokeResponse::InternalSwap(SyncNodeStokeResponse* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(now_tm_height_, other->now_tm_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SyncNodeStokeResponse::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElectMessage::InitAsDefaultInstance() {
  ::shardora::elect::protobuf::_ElectMessage_default_instance_._instance.get_mutable()->elect_block_ = const_cast< ::shardora::elect::protobuf::ElectBlock*>(
      ::shardora::elect::protobuf::ElectBlock::internal_default_instance());
  ::shardora::elect::protobuf::_ElectMessage_default_instance_._instance.get_mutable()->prev_elect_block_ = const_cast< ::shardora::elect::protobuf::ElectBlock*>(
      ::shardora::elect::protobuf::ElectBlock::internal_default_instance());
  ::shardora::elect::protobuf::_ElectMessage_default_instance_._instance.get_mutable()->waiting_nodes_ = const_cast< ::shardora::elect::protobuf::WaitingNodesMessage*>(
      ::shardora::elect::protobuf::WaitingNodesMessage::internal_default_instance());
  ::shardora::elect::protobuf::_ElectMessage_default_instance_._instance.get_mutable()->waiting_heartbeat_ = const_cast< ::shardora::elect::protobuf::WaitingNodeHeartbeat*>(
      ::shardora::elect::protobuf::WaitingNodeHeartbeat::internal_default_instance());
  ::shardora::elect::protobuf::_ElectMessage_default_instance_._instance.get_mutable()->leader_rotation_ = const_cast< ::shardora::elect::protobuf::LeaderRotationMessage*>(
      ::shardora::elect::protobuf::LeaderRotationMessage::internal_default_instance());
  ::shardora::elect::protobuf::_ElectMessage_default_instance_._instance.get_mutable()->sync_stoke_req_ = const_cast< ::shardora::elect::protobuf::SyncNodeStokeRequest*>(
      ::shardora::elect::protobuf::SyncNodeStokeRequest::internal_default_instance());
  ::shardora::elect::protobuf::_ElectMessage_default_instance_._instance.get_mutable()->sync_stoke_res_ = const_cast< ::shardora::elect::protobuf::SyncNodeStokeResponse*>(
      ::shardora::elect::protobuf::SyncNodeStokeResponse::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElectMessage::kElectBlockFieldNumber;
const int ElectMessage::kPrevElectBlockFieldNumber;
const int ElectMessage::kWaitingNodesFieldNumber;
const int ElectMessage::kMemberIndexFieldNumber;
const int ElectMessage::kSignChFieldNumber;
const int ElectMessage::kSignResFieldNumber;
const int ElectMessage::kWaitingHeartbeatFieldNumber;
const int ElectMessage::kLeaderRotationFieldNumber;
const int ElectMessage::kSyncStokeReqFieldNumber;
const int ElectMessage::kSyncStokeResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElectMessage::ElectMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2felect_2eproto::scc_info_ElectMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.elect.protobuf.ElectMessage)
}
ElectMessage::ElectMessage(const ElectMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sign_ch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_ch()) {
    sign_ch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_ch_);
  }
  sign_res_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_res()) {
    sign_res_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_res_);
  }
  if (from.has_elect_block()) {
    elect_block_ = new ::shardora::elect::protobuf::ElectBlock(*from.elect_block_);
  } else {
    elect_block_ = NULL;
  }
  if (from.has_prev_elect_block()) {
    prev_elect_block_ = new ::shardora::elect::protobuf::ElectBlock(*from.prev_elect_block_);
  } else {
    prev_elect_block_ = NULL;
  }
  if (from.has_waiting_nodes()) {
    waiting_nodes_ = new ::shardora::elect::protobuf::WaitingNodesMessage(*from.waiting_nodes_);
  } else {
    waiting_nodes_ = NULL;
  }
  if (from.has_waiting_heartbeat()) {
    waiting_heartbeat_ = new ::shardora::elect::protobuf::WaitingNodeHeartbeat(*from.waiting_heartbeat_);
  } else {
    waiting_heartbeat_ = NULL;
  }
  if (from.has_leader_rotation()) {
    leader_rotation_ = new ::shardora::elect::protobuf::LeaderRotationMessage(*from.leader_rotation_);
  } else {
    leader_rotation_ = NULL;
  }
  if (from.has_sync_stoke_req()) {
    sync_stoke_req_ = new ::shardora::elect::protobuf::SyncNodeStokeRequest(*from.sync_stoke_req_);
  } else {
    sync_stoke_req_ = NULL;
  }
  if (from.has_sync_stoke_res()) {
    sync_stoke_res_ = new ::shardora::elect::protobuf::SyncNodeStokeResponse(*from.sync_stoke_res_);
  } else {
    sync_stoke_res_ = NULL;
  }
  member_index_ = from.member_index_;
  // @@protoc_insertion_point(copy_constructor:shardora.elect.protobuf.ElectMessage)
}

void ElectMessage::SharedCtor() {
  sign_ch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_res_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&elect_block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&member_index_) -
      reinterpret_cast<char*>(&elect_block_)) + sizeof(member_index_));
}

ElectMessage::~ElectMessage() {
  // @@protoc_insertion_point(destructor:shardora.elect.protobuf.ElectMessage)
  SharedDtor();
}

void ElectMessage::SharedDtor() {
  sign_ch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_res_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete elect_block_;
  if (this != internal_default_instance()) delete prev_elect_block_;
  if (this != internal_default_instance()) delete waiting_nodes_;
  if (this != internal_default_instance()) delete waiting_heartbeat_;
  if (this != internal_default_instance()) delete leader_rotation_;
  if (this != internal_default_instance()) delete sync_stoke_req_;
  if (this != internal_default_instance()) delete sync_stoke_res_;
}

void ElectMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElectMessage::descriptor() {
  ::protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElectMessage& ElectMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2felect_2eproto::scc_info_ElectMessage.base);
  return *internal_default_instance();
}


void ElectMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.elect.protobuf.ElectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      sign_ch_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sign_res_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(elect_block_ != NULL);
      elect_block_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(prev_elect_block_ != NULL);
      prev_elect_block_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(waiting_nodes_ != NULL);
      waiting_nodes_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(waiting_heartbeat_ != NULL);
      waiting_heartbeat_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(leader_rotation_ != NULL);
      leader_rotation_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(sync_stoke_req_ != NULL);
      sync_stoke_req_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(sync_stoke_res_ != NULL);
    sync_stoke_res_->Clear();
  }
  member_index_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ElectMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.elect.protobuf.ElectMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .shardora.elect.protobuf.ElectBlock elect_block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_elect_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.elect.protobuf.ElectBlock prev_elect_block = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prev_elect_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.elect.protobuf.WaitingNodesMessage waiting_nodes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_waiting_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 member_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_member_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &member_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sign_ch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_ch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sign_res = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.elect.protobuf.WaitingNodeHeartbeat waiting_heartbeat = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_waiting_heartbeat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.elect.protobuf.LeaderRotationMessage leader_rotation = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_leader_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.elect.protobuf.SyncNodeStokeRequest sync_stoke_req = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sync_stoke_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.elect.protobuf.SyncNodeStokeResponse sync_stoke_res = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sync_stoke_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.elect.protobuf.ElectMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.elect.protobuf.ElectMessage)
  return false;
#undef DO_
}

void ElectMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.elect.protobuf.ElectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.elect.protobuf.ElectBlock elect_block = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_elect_block(), output);
  }

  // optional .shardora.elect.protobuf.ElectBlock prev_elect_block = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_prev_elect_block(), output);
  }

  // optional .shardora.elect.protobuf.WaitingNodesMessage waiting_nodes = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_waiting_nodes(), output);
  }

  // optional int32 member_index = 4;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->member_index(), output);
  }

  // optional bytes sign_ch = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->sign_ch(), output);
  }

  // optional bytes sign_res = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->sign_res(), output);
  }

  // optional .shardora.elect.protobuf.WaitingNodeHeartbeat waiting_heartbeat = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_waiting_heartbeat(), output);
  }

  // optional .shardora.elect.protobuf.LeaderRotationMessage leader_rotation = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_leader_rotation(), output);
  }

  // optional .shardora.elect.protobuf.SyncNodeStokeRequest sync_stoke_req = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_sync_stoke_req(), output);
  }

  // optional .shardora.elect.protobuf.SyncNodeStokeResponse sync_stoke_res = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_sync_stoke_res(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.elect.protobuf.ElectMessage)
}

::google::protobuf::uint8* ElectMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.elect.protobuf.ElectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.elect.protobuf.ElectBlock elect_block = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_elect_block(), deterministic, target);
  }

  // optional .shardora.elect.protobuf.ElectBlock prev_elect_block = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_prev_elect_block(), deterministic, target);
  }

  // optional .shardora.elect.protobuf.WaitingNodesMessage waiting_nodes = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_waiting_nodes(), deterministic, target);
  }

  // optional int32 member_index = 4;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->member_index(), target);
  }

  // optional bytes sign_ch = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->sign_ch(), target);
  }

  // optional bytes sign_res = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->sign_res(), target);
  }

  // optional .shardora.elect.protobuf.WaitingNodeHeartbeat waiting_heartbeat = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_waiting_heartbeat(), deterministic, target);
  }

  // optional .shardora.elect.protobuf.LeaderRotationMessage leader_rotation = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_leader_rotation(), deterministic, target);
  }

  // optional .shardora.elect.protobuf.SyncNodeStokeRequest sync_stoke_req = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_sync_stoke_req(), deterministic, target);
  }

  // optional .shardora.elect.protobuf.SyncNodeStokeResponse sync_stoke_res = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_sync_stoke_res(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.elect.protobuf.ElectMessage)
  return target;
}

size_t ElectMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.elect.protobuf.ElectMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes sign_ch = 5;
    if (has_sign_ch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_ch());
    }

    // optional bytes sign_res = 6;
    if (has_sign_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_res());
    }

    // optional .shardora.elect.protobuf.ElectBlock elect_block = 1;
    if (has_elect_block()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *elect_block_);
    }

    // optional .shardora.elect.protobuf.ElectBlock prev_elect_block = 2;
    if (has_prev_elect_block()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *prev_elect_block_);
    }

    // optional .shardora.elect.protobuf.WaitingNodesMessage waiting_nodes = 3;
    if (has_waiting_nodes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *waiting_nodes_);
    }

    // optional .shardora.elect.protobuf.WaitingNodeHeartbeat waiting_heartbeat = 7;
    if (has_waiting_heartbeat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *waiting_heartbeat_);
    }

    // optional .shardora.elect.protobuf.LeaderRotationMessage leader_rotation = 8;
    if (has_leader_rotation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *leader_rotation_);
    }

    // optional .shardora.elect.protobuf.SyncNodeStokeRequest sync_stoke_req = 9;
    if (has_sync_stoke_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sync_stoke_req_);
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional .shardora.elect.protobuf.SyncNodeStokeResponse sync_stoke_res = 10;
    if (has_sync_stoke_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sync_stoke_res_);
    }

    // optional int32 member_index = 4;
    if (has_member_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->member_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElectMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.elect.protobuf.ElectMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ElectMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElectMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.elect.protobuf.ElectMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.elect.protobuf.ElectMessage)
    MergeFrom(*source);
  }
}

void ElectMessage::MergeFrom(const ElectMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.elect.protobuf.ElectMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sign_ch();
      sign_ch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_ch_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sign_res();
      sign_res_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_res_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_elect_block()->::shardora::elect::protobuf::ElectBlock::MergeFrom(from.elect_block());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_prev_elect_block()->::shardora::elect::protobuf::ElectBlock::MergeFrom(from.prev_elect_block());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_waiting_nodes()->::shardora::elect::protobuf::WaitingNodesMessage::MergeFrom(from.waiting_nodes());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_waiting_heartbeat()->::shardora::elect::protobuf::WaitingNodeHeartbeat::MergeFrom(from.waiting_heartbeat());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_leader_rotation()->::shardora::elect::protobuf::LeaderRotationMessage::MergeFrom(from.leader_rotation());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_sync_stoke_req()->::shardora::elect::protobuf::SyncNodeStokeRequest::MergeFrom(from.sync_stoke_req());
    }
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_sync_stoke_res()->::shardora::elect::protobuf::SyncNodeStokeResponse::MergeFrom(from.sync_stoke_res());
    }
    if (cached_has_bits & 0x00000200u) {
      member_index_ = from.member_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ElectMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.elect.protobuf.ElectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElectMessage::CopyFrom(const ElectMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.elect.protobuf.ElectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElectMessage::IsInitialized() const {
  return true;
}

void ElectMessage::Swap(ElectMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElectMessage::InternalSwap(ElectMessage* other) {
  using std::swap;
  sign_ch_.Swap(&other->sign_ch_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_res_.Swap(&other->sign_res_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(elect_block_, other->elect_block_);
  swap(prev_elect_block_, other->prev_elect_block_);
  swap(waiting_nodes_, other->waiting_nodes_);
  swap(waiting_heartbeat_, other->waiting_heartbeat_);
  swap(leader_rotation_, other->leader_rotation_);
  swap(sync_stoke_req_, other->sync_stoke_req_);
  swap(sync_stoke_res_, other->sync_stoke_res_);
  swap(member_index_, other->member_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElectMessage::GetMetadata() const {
  protobuf_protos_2felect_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2felect_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace elect
}  // namespace shardora
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::VerifyVecValue* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::VerifyVecValue >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::VerifyVecValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::BlsPublicKey* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::BlsPublicKey >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::BlsPublicKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::PrevMemberInfo* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::PrevMemberInfo >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::PrevMemberInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::PrevMembers* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::PrevMembers >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::PrevMembers >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::member* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::member >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::member >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::ElectBlock* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::ElectBlock >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::ElectBlock >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::DynamicShardingInfo* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::DynamicShardingInfo >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::DynamicShardingInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::WaitingNodesMessage* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::WaitingNodesMessage >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::WaitingNodesMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::WaitingNodeHeartbeat* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::WaitingNodeHeartbeat >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::WaitingNodeHeartbeat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::LeaderRotationMessage* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::LeaderRotationMessage >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::LeaderRotationMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::SyncNodeStokeItem* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::SyncNodeStokeItem >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::SyncNodeStokeItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::SyncNodeStokeRequest* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::SyncNodeStokeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::SyncNodeStokeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::SyncNodeStokeResItem* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::SyncNodeStokeResItem >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::SyncNodeStokeResItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::SyncNodeStokeResponse* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::SyncNodeStokeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::SyncNodeStokeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::elect::protobuf::ElectMessage* Arena::CreateMaybeMessage< ::shardora::elect::protobuf::ElectMessage >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::elect::protobuf::ElectMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
