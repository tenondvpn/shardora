// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/sync.proto

#ifndef PROTOBUF_protos_2fsync_2eproto__INCLUDED
#define PROTOBUF_protos_2fsync_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace zjchain {
namespace sync {
namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protos_2fsync_2eproto();
void protobuf_AssignDesc_protos_2fsync_2eproto();
void protobuf_ShutdownFile_protos_2fsync_2eproto();

class SyncItem;
class SyncInfo;
class SyncHeightItem;
class FlushDbItem;
class SyncValueRequest;
class SyncResItem;
class SyncValueResponse;
class SyncMessage;

// ===================================================================

class SyncItem : public ::google::protobuf::Message {
 public:
  SyncItem();
  virtual ~SyncItem();

  SyncItem(const SyncItem& from);

  inline SyncItem& operator=(const SyncItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncItem& default_instance();

  void Swap(SyncItem* other);

  // implements Message ----------------------------------------------

  SyncItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncItem& from);
  void MergeFrom(const SyncItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional bytes value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncItem)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  ::std::string* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2fsync_2eproto();
  friend void protobuf_AssignDesc_protos_2fsync_2eproto();
  friend void protobuf_ShutdownFile_protos_2fsync_2eproto();

  void InitAsDefaultInstance();
  static SyncItem* default_instance_;
};
// -------------------------------------------------------------------

class SyncInfo : public ::google::protobuf::Message {
 public:
  SyncInfo();
  virtual ~SyncInfo();

  SyncInfo(const SyncInfo& from);

  inline SyncInfo& operator=(const SyncInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncInfo& default_instance();

  void Swap(SyncInfo* other);

  // implements Message ----------------------------------------------

  SyncInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncInfo& from);
  void MergeFrom(const SyncInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zjchain.sync.protobuf.SyncItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::zjchain::sync::protobuf::SyncItem& items(int index) const;
  inline ::zjchain::sync::protobuf::SyncItem* mutable_items(int index);
  inline ::zjchain::sync::protobuf::SyncItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2fsync_2eproto();
  friend void protobuf_AssignDesc_protos_2fsync_2eproto();
  friend void protobuf_ShutdownFile_protos_2fsync_2eproto();

  void InitAsDefaultInstance();
  static SyncInfo* default_instance_;
};
// -------------------------------------------------------------------

class SyncHeightItem : public ::google::protobuf::Message {
 public:
  SyncHeightItem();
  virtual ~SyncHeightItem();

  SyncHeightItem(const SyncHeightItem& from);

  inline SyncHeightItem& operator=(const SyncHeightItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncHeightItem& default_instance();

  void Swap(SyncHeightItem* other);

  // implements Message ----------------------------------------------

  SyncHeightItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncHeightItem& from);
  void MergeFrom(const SyncHeightItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pool_idx = 1;
  inline bool has_pool_idx() const;
  inline void clear_pool_idx();
  static const int kPoolIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 pool_idx() const;
  inline void set_pool_idx(::google::protobuf::uint32 value);

  // optional uint64 height = 2;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 2;
  inline ::google::protobuf::uint64 height() const;
  inline void set_height(::google::protobuf::uint64 value);

  // optional uint32 tag = 3;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 3;
  inline ::google::protobuf::uint32 tag() const;
  inline void set_tag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncHeightItem)
 private:
  inline void set_has_pool_idx();
  inline void clear_has_pool_idx();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_tag();
  inline void clear_has_tag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 height_;
  ::google::protobuf::uint32 pool_idx_;
  ::google::protobuf::uint32 tag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2fsync_2eproto();
  friend void protobuf_AssignDesc_protos_2fsync_2eproto();
  friend void protobuf_ShutdownFile_protos_2fsync_2eproto();

  void InitAsDefaultInstance();
  static SyncHeightItem* default_instance_;
};
// -------------------------------------------------------------------

class FlushDbItem : public ::google::protobuf::Message {
 public:
  FlushDbItem();
  virtual ~FlushDbItem();

  FlushDbItem(const FlushDbItem& from);

  inline FlushDbItem& operator=(const FlushDbItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FlushDbItem& default_instance();

  void Swap(FlushDbItem* other);

  // implements Message ----------------------------------------------

  FlushDbItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FlushDbItem& from);
  void MergeFrom(const FlushDbItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 max_vec_index = 1;
  inline bool has_max_vec_index() const;
  inline void clear_max_vec_index();
  static const int kMaxVecIndexFieldNumber = 1;
  inline ::google::protobuf::uint64 max_vec_index() const;
  inline void set_max_vec_index(::google::protobuf::uint64 value);

  // optional uint64 max_height = 2;
  inline bool has_max_height() const;
  inline void clear_max_height();
  static const int kMaxHeightFieldNumber = 2;
  inline ::google::protobuf::uint64 max_height() const;
  inline void set_max_height(::google::protobuf::uint64 value);

  // repeated uint64 heights = 3;
  inline int heights_size() const;
  inline void clear_heights();
  static const int kHeightsFieldNumber = 3;
  inline ::google::protobuf::uint64 heights(int index) const;
  inline void set_heights(int index, ::google::protobuf::uint64 value);
  inline void add_heights(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      heights() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_heights();

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.FlushDbItem)
 private:
  inline void set_has_max_vec_index();
  inline void clear_has_max_vec_index();
  inline void set_has_max_height();
  inline void clear_has_max_height();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 max_vec_index_;
  ::google::protobuf::uint64 max_height_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > heights_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2fsync_2eproto();
  friend void protobuf_AssignDesc_protos_2fsync_2eproto();
  friend void protobuf_ShutdownFile_protos_2fsync_2eproto();

  void InitAsDefaultInstance();
  static FlushDbItem* default_instance_;
};
// -------------------------------------------------------------------

class SyncValueRequest : public ::google::protobuf::Message {
 public:
  SyncValueRequest();
  virtual ~SyncValueRequest();

  SyncValueRequest(const SyncValueRequest& from);

  inline SyncValueRequest& operator=(const SyncValueRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncValueRequest& default_instance();

  void Swap(SyncValueRequest* other);

  // implements Message ----------------------------------------------

  SyncValueRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncValueRequest& from);
  void MergeFrom(const SyncValueRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 network_id = 1;
  inline bool has_network_id() const;
  inline void clear_network_id();
  static const int kNetworkIdFieldNumber = 1;
  inline ::google::protobuf::uint32 network_id() const;
  inline void set_network_id(::google::protobuf::uint32 value);

  // repeated bytes keys = 2;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 2;
  inline const ::std::string& keys(int index) const;
  inline ::std::string* mutable_keys(int index);
  inline void set_keys(int index, const ::std::string& value);
  inline void set_keys(int index, const char* value);
  inline void set_keys(int index, const void* value, size_t size);
  inline ::std::string* add_keys();
  inline void add_keys(const ::std::string& value);
  inline void add_keys(const char* value);
  inline void add_keys(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

  // repeated .zjchain.sync.protobuf.SyncHeightItem heights = 3;
  inline int heights_size() const;
  inline void clear_heights();
  static const int kHeightsFieldNumber = 3;
  inline const ::zjchain::sync::protobuf::SyncHeightItem& heights(int index) const;
  inline ::zjchain::sync::protobuf::SyncHeightItem* mutable_heights(int index);
  inline ::zjchain::sync::protobuf::SyncHeightItem* add_heights();
  inline const ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncHeightItem >&
      heights() const;
  inline ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncHeightItem >*
      mutable_heights();

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncValueRequest)
 private:
  inline void set_has_network_id();
  inline void clear_has_network_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;
  ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncHeightItem > heights_;
  ::google::protobuf::uint32 network_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2fsync_2eproto();
  friend void protobuf_AssignDesc_protos_2fsync_2eproto();
  friend void protobuf_ShutdownFile_protos_2fsync_2eproto();

  void InitAsDefaultInstance();
  static SyncValueRequest* default_instance_;
};
// -------------------------------------------------------------------

class SyncResItem : public ::google::protobuf::Message {
 public:
  SyncResItem();
  virtual ~SyncResItem();

  SyncResItem(const SyncResItem& from);

  inline SyncResItem& operator=(const SyncResItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncResItem& default_instance();

  void Swap(SyncResItem* other);

  // implements Message ----------------------------------------------

  SyncResItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncResItem& from);
  void MergeFrom(const SyncResItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // optional bytes value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // optional uint32 network_id = 3;
  inline bool has_network_id() const;
  inline void clear_network_id();
  static const int kNetworkIdFieldNumber = 3;
  inline ::google::protobuf::uint32 network_id() const;
  inline void set_network_id(::google::protobuf::uint32 value);

  // optional uint32 pool_idx = 4;
  inline bool has_pool_idx() const;
  inline void clear_pool_idx();
  static const int kPoolIdxFieldNumber = 4;
  inline ::google::protobuf::uint32 pool_idx() const;
  inline void set_pool_idx(::google::protobuf::uint32 value);

  // optional uint64 height = 5;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 5;
  inline ::google::protobuf::uint64 height() const;
  inline void set_height(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncResItem)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_network_id();
  inline void clear_has_network_id();
  inline void set_has_pool_idx();
  inline void clear_has_pool_idx();
  inline void set_has_height();
  inline void clear_has_height();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  ::std::string* value_;
  ::google::protobuf::uint32 network_id_;
  ::google::protobuf::uint32 pool_idx_;
  ::google::protobuf::uint64 height_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2fsync_2eproto();
  friend void protobuf_AssignDesc_protos_2fsync_2eproto();
  friend void protobuf_ShutdownFile_protos_2fsync_2eproto();

  void InitAsDefaultInstance();
  static SyncResItem* default_instance_;
};
// -------------------------------------------------------------------

class SyncValueResponse : public ::google::protobuf::Message {
 public:
  SyncValueResponse();
  virtual ~SyncValueResponse();

  SyncValueResponse(const SyncValueResponse& from);

  inline SyncValueResponse& operator=(const SyncValueResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncValueResponse& default_instance();

  void Swap(SyncValueResponse* other);

  // implements Message ----------------------------------------------

  SyncValueResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncValueResponse& from);
  void MergeFrom(const SyncValueResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 network_id = 1;
  inline bool has_network_id() const;
  inline void clear_network_id();
  static const int kNetworkIdFieldNumber = 1;
  inline ::google::protobuf::uint32 network_id() const;
  inline void set_network_id(::google::protobuf::uint32 value);

  // repeated .zjchain.sync.protobuf.SyncResItem res = 2;
  inline int res_size() const;
  inline void clear_res();
  static const int kResFieldNumber = 2;
  inline const ::zjchain::sync::protobuf::SyncResItem& res(int index) const;
  inline ::zjchain::sync::protobuf::SyncResItem* mutable_res(int index);
  inline ::zjchain::sync::protobuf::SyncResItem* add_res();
  inline const ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncResItem >&
      res() const;
  inline ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncResItem >*
      mutable_res();

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncValueResponse)
 private:
  inline void set_has_network_id();
  inline void clear_has_network_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncResItem > res_;
  ::google::protobuf::uint32 network_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2fsync_2eproto();
  friend void protobuf_AssignDesc_protos_2fsync_2eproto();
  friend void protobuf_ShutdownFile_protos_2fsync_2eproto();

  void InitAsDefaultInstance();
  static SyncValueResponse* default_instance_;
};
// -------------------------------------------------------------------

class SyncMessage : public ::google::protobuf::Message {
 public:
  SyncMessage();
  virtual ~SyncMessage();

  SyncMessage(const SyncMessage& from);

  inline SyncMessage& operator=(const SyncMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncMessage& default_instance();

  void Swap(SyncMessage* other);

  // implements Message ----------------------------------------------

  SyncMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncMessage& from);
  void MergeFrom(const SyncMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .zjchain.sync.protobuf.SyncValueRequest sync_value_req = 1;
  inline bool has_sync_value_req() const;
  inline void clear_sync_value_req();
  static const int kSyncValueReqFieldNumber = 1;
  inline const ::zjchain::sync::protobuf::SyncValueRequest& sync_value_req() const;
  inline ::zjchain::sync::protobuf::SyncValueRequest* mutable_sync_value_req();
  inline ::zjchain::sync::protobuf::SyncValueRequest* release_sync_value_req();
  inline void set_allocated_sync_value_req(::zjchain::sync::protobuf::SyncValueRequest* sync_value_req);

  // optional .zjchain.sync.protobuf.SyncValueResponse sync_value_res = 2;
  inline bool has_sync_value_res() const;
  inline void clear_sync_value_res();
  static const int kSyncValueResFieldNumber = 2;
  inline const ::zjchain::sync::protobuf::SyncValueResponse& sync_value_res() const;
  inline ::zjchain::sync::protobuf::SyncValueResponse* mutable_sync_value_res();
  inline ::zjchain::sync::protobuf::SyncValueResponse* release_sync_value_res();
  inline void set_allocated_sync_value_res(::zjchain::sync::protobuf::SyncValueResponse* sync_value_res);

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncMessage)
 private:
  inline void set_has_sync_value_req();
  inline void clear_has_sync_value_req();
  inline void set_has_sync_value_res();
  inline void clear_has_sync_value_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::zjchain::sync::protobuf::SyncValueRequest* sync_value_req_;
  ::zjchain::sync::protobuf::SyncValueResponse* sync_value_res_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protos_2fsync_2eproto();
  friend void protobuf_AssignDesc_protos_2fsync_2eproto();
  friend void protobuf_ShutdownFile_protos_2fsync_2eproto();

  void InitAsDefaultInstance();
  static SyncMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// SyncItem

// optional bytes key = 1;
inline bool SyncItem::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncItem::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncItem::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& SyncItem::key() const {
  return *key_;
}
inline void SyncItem::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SyncItem::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SyncItem::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SyncItem::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* SyncItem::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SyncItem::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes value = 2;
inline bool SyncItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncItem::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& SyncItem::value() const {
  return *value_;
}
inline void SyncItem::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SyncItem::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SyncItem::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SyncItem::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* SyncItem::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SyncItem::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SyncInfo

// repeated .zjchain.sync.protobuf.SyncItem items = 1;
inline int SyncInfo::items_size() const {
  return items_.size();
}
inline void SyncInfo::clear_items() {
  items_.Clear();
}
inline const ::zjchain::sync::protobuf::SyncItem& SyncInfo::items(int index) const {
  return items_.Get(index);
}
inline ::zjchain::sync::protobuf::SyncItem* SyncInfo::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::zjchain::sync::protobuf::SyncItem* SyncInfo::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem >&
SyncInfo::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem >*
SyncInfo::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// SyncHeightItem

// optional uint32 pool_idx = 1;
inline bool SyncHeightItem::has_pool_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncHeightItem::set_has_pool_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncHeightItem::clear_has_pool_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncHeightItem::clear_pool_idx() {
  pool_idx_ = 0u;
  clear_has_pool_idx();
}
inline ::google::protobuf::uint32 SyncHeightItem::pool_idx() const {
  return pool_idx_;
}
inline void SyncHeightItem::set_pool_idx(::google::protobuf::uint32 value) {
  set_has_pool_idx();
  pool_idx_ = value;
}

// optional uint64 height = 2;
inline bool SyncHeightItem::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncHeightItem::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncHeightItem::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncHeightItem::clear_height() {
  height_ = GOOGLE_ULONGLONG(0);
  clear_has_height();
}
inline ::google::protobuf::uint64 SyncHeightItem::height() const {
  return height_;
}
inline void SyncHeightItem::set_height(::google::protobuf::uint64 value) {
  set_has_height();
  height_ = value;
}

// optional uint32 tag = 3;
inline bool SyncHeightItem::has_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncHeightItem::set_has_tag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncHeightItem::clear_has_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncHeightItem::clear_tag() {
  tag_ = 0u;
  clear_has_tag();
}
inline ::google::protobuf::uint32 SyncHeightItem::tag() const {
  return tag_;
}
inline void SyncHeightItem::set_tag(::google::protobuf::uint32 value) {
  set_has_tag();
  tag_ = value;
}

// -------------------------------------------------------------------

// FlushDbItem

// optional uint64 max_vec_index = 1;
inline bool FlushDbItem::has_max_vec_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FlushDbItem::set_has_max_vec_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FlushDbItem::clear_has_max_vec_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FlushDbItem::clear_max_vec_index() {
  max_vec_index_ = GOOGLE_ULONGLONG(0);
  clear_has_max_vec_index();
}
inline ::google::protobuf::uint64 FlushDbItem::max_vec_index() const {
  return max_vec_index_;
}
inline void FlushDbItem::set_max_vec_index(::google::protobuf::uint64 value) {
  set_has_max_vec_index();
  max_vec_index_ = value;
}

// optional uint64 max_height = 2;
inline bool FlushDbItem::has_max_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FlushDbItem::set_has_max_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FlushDbItem::clear_has_max_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FlushDbItem::clear_max_height() {
  max_height_ = GOOGLE_ULONGLONG(0);
  clear_has_max_height();
}
inline ::google::protobuf::uint64 FlushDbItem::max_height() const {
  return max_height_;
}
inline void FlushDbItem::set_max_height(::google::protobuf::uint64 value) {
  set_has_max_height();
  max_height_ = value;
}

// repeated uint64 heights = 3;
inline int FlushDbItem::heights_size() const {
  return heights_.size();
}
inline void FlushDbItem::clear_heights() {
  heights_.Clear();
}
inline ::google::protobuf::uint64 FlushDbItem::heights(int index) const {
  return heights_.Get(index);
}
inline void FlushDbItem::set_heights(int index, ::google::protobuf::uint64 value) {
  heights_.Set(index, value);
}
inline void FlushDbItem::add_heights(::google::protobuf::uint64 value) {
  heights_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
FlushDbItem::heights() const {
  return heights_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
FlushDbItem::mutable_heights() {
  return &heights_;
}

// -------------------------------------------------------------------

// SyncValueRequest

// optional uint32 network_id = 1;
inline bool SyncValueRequest::has_network_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncValueRequest::set_has_network_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncValueRequest::clear_has_network_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncValueRequest::clear_network_id() {
  network_id_ = 0u;
  clear_has_network_id();
}
inline ::google::protobuf::uint32 SyncValueRequest::network_id() const {
  return network_id_;
}
inline void SyncValueRequest::set_network_id(::google::protobuf::uint32 value) {
  set_has_network_id();
  network_id_ = value;
}

// repeated bytes keys = 2;
inline int SyncValueRequest::keys_size() const {
  return keys_.size();
}
inline void SyncValueRequest::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& SyncValueRequest::keys(int index) const {
  return keys_.Get(index);
}
inline ::std::string* SyncValueRequest::mutable_keys(int index) {
  return keys_.Mutable(index);
}
inline void SyncValueRequest::set_keys(int index, const ::std::string& value) {
  keys_.Mutable(index)->assign(value);
}
inline void SyncValueRequest::set_keys(int index, const char* value) {
  keys_.Mutable(index)->assign(value);
}
inline void SyncValueRequest::set_keys(int index, const void* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SyncValueRequest::add_keys() {
  return keys_.Add();
}
inline void SyncValueRequest::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
}
inline void SyncValueRequest::add_keys(const char* value) {
  keys_.Add()->assign(value);
}
inline void SyncValueRequest::add_keys(const void* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SyncValueRequest::keys() const {
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SyncValueRequest::mutable_keys() {
  return &keys_;
}

// repeated .zjchain.sync.protobuf.SyncHeightItem heights = 3;
inline int SyncValueRequest::heights_size() const {
  return heights_.size();
}
inline void SyncValueRequest::clear_heights() {
  heights_.Clear();
}
inline const ::zjchain::sync::protobuf::SyncHeightItem& SyncValueRequest::heights(int index) const {
  return heights_.Get(index);
}
inline ::zjchain::sync::protobuf::SyncHeightItem* SyncValueRequest::mutable_heights(int index) {
  return heights_.Mutable(index);
}
inline ::zjchain::sync::protobuf::SyncHeightItem* SyncValueRequest::add_heights() {
  return heights_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncHeightItem >&
SyncValueRequest::heights() const {
  return heights_;
}
inline ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncHeightItem >*
SyncValueRequest::mutable_heights() {
  return &heights_;
}

// -------------------------------------------------------------------

// SyncResItem

// optional bytes key = 1;
inline bool SyncResItem::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncResItem::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncResItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncResItem::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& SyncResItem::key() const {
  return *key_;
}
inline void SyncResItem::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SyncResItem::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void SyncResItem::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SyncResItem::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* SyncResItem::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SyncResItem::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes value = 2;
inline bool SyncResItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncResItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncResItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncResItem::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& SyncResItem::value() const {
  return *value_;
}
inline void SyncResItem::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SyncResItem::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SyncResItem::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SyncResItem::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* SyncResItem::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SyncResItem::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 network_id = 3;
inline bool SyncResItem::has_network_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncResItem::set_has_network_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncResItem::clear_has_network_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncResItem::clear_network_id() {
  network_id_ = 0u;
  clear_has_network_id();
}
inline ::google::protobuf::uint32 SyncResItem::network_id() const {
  return network_id_;
}
inline void SyncResItem::set_network_id(::google::protobuf::uint32 value) {
  set_has_network_id();
  network_id_ = value;
}

// optional uint32 pool_idx = 4;
inline bool SyncResItem::has_pool_idx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncResItem::set_has_pool_idx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncResItem::clear_has_pool_idx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncResItem::clear_pool_idx() {
  pool_idx_ = 0u;
  clear_has_pool_idx();
}
inline ::google::protobuf::uint32 SyncResItem::pool_idx() const {
  return pool_idx_;
}
inline void SyncResItem::set_pool_idx(::google::protobuf::uint32 value) {
  set_has_pool_idx();
  pool_idx_ = value;
}

// optional uint64 height = 5;
inline bool SyncResItem::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SyncResItem::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SyncResItem::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SyncResItem::clear_height() {
  height_ = GOOGLE_ULONGLONG(0);
  clear_has_height();
}
inline ::google::protobuf::uint64 SyncResItem::height() const {
  return height_;
}
inline void SyncResItem::set_height(::google::protobuf::uint64 value) {
  set_has_height();
  height_ = value;
}

// -------------------------------------------------------------------

// SyncValueResponse

// optional uint32 network_id = 1;
inline bool SyncValueResponse::has_network_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncValueResponse::set_has_network_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncValueResponse::clear_has_network_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncValueResponse::clear_network_id() {
  network_id_ = 0u;
  clear_has_network_id();
}
inline ::google::protobuf::uint32 SyncValueResponse::network_id() const {
  return network_id_;
}
inline void SyncValueResponse::set_network_id(::google::protobuf::uint32 value) {
  set_has_network_id();
  network_id_ = value;
}

// repeated .zjchain.sync.protobuf.SyncResItem res = 2;
inline int SyncValueResponse::res_size() const {
  return res_.size();
}
inline void SyncValueResponse::clear_res() {
  res_.Clear();
}
inline const ::zjchain::sync::protobuf::SyncResItem& SyncValueResponse::res(int index) const {
  return res_.Get(index);
}
inline ::zjchain::sync::protobuf::SyncResItem* SyncValueResponse::mutable_res(int index) {
  return res_.Mutable(index);
}
inline ::zjchain::sync::protobuf::SyncResItem* SyncValueResponse::add_res() {
  return res_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncResItem >&
SyncValueResponse::res() const {
  return res_;
}
inline ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncResItem >*
SyncValueResponse::mutable_res() {
  return &res_;
}

// -------------------------------------------------------------------

// SyncMessage

// optional .zjchain.sync.protobuf.SyncValueRequest sync_value_req = 1;
inline bool SyncMessage::has_sync_value_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncMessage::set_has_sync_value_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncMessage::clear_has_sync_value_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncMessage::clear_sync_value_req() {
  if (sync_value_req_ != NULL) sync_value_req_->::zjchain::sync::protobuf::SyncValueRequest::Clear();
  clear_has_sync_value_req();
}
inline const ::zjchain::sync::protobuf::SyncValueRequest& SyncMessage::sync_value_req() const {
  return sync_value_req_ != NULL ? *sync_value_req_ : *default_instance_->sync_value_req_;
}
inline ::zjchain::sync::protobuf::SyncValueRequest* SyncMessage::mutable_sync_value_req() {
  set_has_sync_value_req();
  if (sync_value_req_ == NULL) sync_value_req_ = new ::zjchain::sync::protobuf::SyncValueRequest;
  return sync_value_req_;
}
inline ::zjchain::sync::protobuf::SyncValueRequest* SyncMessage::release_sync_value_req() {
  clear_has_sync_value_req();
  ::zjchain::sync::protobuf::SyncValueRequest* temp = sync_value_req_;
  sync_value_req_ = NULL;
  return temp;
}
inline void SyncMessage::set_allocated_sync_value_req(::zjchain::sync::protobuf::SyncValueRequest* sync_value_req) {
  delete sync_value_req_;
  sync_value_req_ = sync_value_req;
  if (sync_value_req) {
    set_has_sync_value_req();
  } else {
    clear_has_sync_value_req();
  }
}

// optional .zjchain.sync.protobuf.SyncValueResponse sync_value_res = 2;
inline bool SyncMessage::has_sync_value_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncMessage::set_has_sync_value_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncMessage::clear_has_sync_value_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncMessage::clear_sync_value_res() {
  if (sync_value_res_ != NULL) sync_value_res_->::zjchain::sync::protobuf::SyncValueResponse::Clear();
  clear_has_sync_value_res();
}
inline const ::zjchain::sync::protobuf::SyncValueResponse& SyncMessage::sync_value_res() const {
  return sync_value_res_ != NULL ? *sync_value_res_ : *default_instance_->sync_value_res_;
}
inline ::zjchain::sync::protobuf::SyncValueResponse* SyncMessage::mutable_sync_value_res() {
  set_has_sync_value_res();
  if (sync_value_res_ == NULL) sync_value_res_ = new ::zjchain::sync::protobuf::SyncValueResponse;
  return sync_value_res_;
}
inline ::zjchain::sync::protobuf::SyncValueResponse* SyncMessage::release_sync_value_res() {
  clear_has_sync_value_res();
  ::zjchain::sync::protobuf::SyncValueResponse* temp = sync_value_res_;
  sync_value_res_ = NULL;
  return temp;
}
inline void SyncMessage::set_allocated_sync_value_res(::zjchain::sync::protobuf::SyncValueResponse* sync_value_res) {
  delete sync_value_res_;
  sync_value_res_ = sync_value_res;
  if (sync_value_res) {
    set_has_sync_value_res();
  } else {
    clear_has_sync_value_res();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace sync
}  // namespace zjchain

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protos_2fsync_2eproto__INCLUDED
