// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/sync.proto

#ifndef PROTOBUF_INCLUDED_protos_2fsync_2eproto
#define PROTOBUF_INCLUDED_protos_2fsync_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fsync_2eproto 

namespace protobuf_protos_2fsync_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protos_2fsync_2eproto
namespace zjchain {
namespace sync {
namespace protobuf {
class SyncInfo;
class SyncInfoDefaultTypeInternal;
extern SyncInfoDefaultTypeInternal _SyncInfo_default_instance_;
class SyncItem;
class SyncItemDefaultTypeInternal;
extern SyncItemDefaultTypeInternal _SyncItem_default_instance_;
}  // namespace protobuf
}  // namespace sync
}  // namespace zjchain
namespace google {
namespace protobuf {
template<> ::zjchain::sync::protobuf::SyncInfo* Arena::CreateMaybeMessage<::zjchain::sync::protobuf::SyncInfo>(Arena*);
template<> ::zjchain::sync::protobuf::SyncItem* Arena::CreateMaybeMessage<::zjchain::sync::protobuf::SyncItem>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zjchain {
namespace sync {
namespace protobuf {

// ===================================================================

class SyncItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.sync.protobuf.SyncItem) */ {
 public:
  SyncItem();
  virtual ~SyncItem();

  SyncItem(const SyncItem& from);

  inline SyncItem& operator=(const SyncItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncItem(SyncItem&& from) noexcept
    : SyncItem() {
    *this = ::std::move(from);
  }

  inline SyncItem& operator=(SyncItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncItem* internal_default_instance() {
    return reinterpret_cast<const SyncItem*>(
               &_SyncItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SyncItem* other);
  friend void swap(SyncItem& a, SyncItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncItem* New() const final {
    return CreateMaybeMessage<SyncItem>(NULL);
  }

  SyncItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SyncItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SyncItem& from);
  void MergeFrom(const SyncItem& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncItem)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::protobuf_protos_2fsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.sync.protobuf.SyncInfo) */ {
 public:
  SyncInfo();
  virtual ~SyncInfo();

  SyncInfo(const SyncInfo& from);

  inline SyncInfo& operator=(const SyncInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncInfo(SyncInfo&& from) noexcept
    : SyncInfo() {
    *this = ::std::move(from);
  }

  inline SyncInfo& operator=(SyncInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncInfo* internal_default_instance() {
    return reinterpret_cast<const SyncInfo*>(
               &_SyncInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SyncInfo* other);
  friend void swap(SyncInfo& a, SyncInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncInfo* New() const final {
    return CreateMaybeMessage<SyncInfo>(NULL);
  }

  SyncInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SyncInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SyncInfo& from);
  void MergeFrom(const SyncInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zjchain.sync.protobuf.SyncItem items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  ::zjchain::sync::protobuf::SyncItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem >*
      mutable_items();
  const ::zjchain::sync::protobuf::SyncItem& items(int index) const;
  ::zjchain::sync::protobuf::SyncItem* add_items();
  const ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem >&
      items() const;

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem > items_;
  friend struct ::protobuf_protos_2fsync_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SyncItem

// optional bytes key = 1;
inline bool SyncItem::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncItem::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncItem::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& SyncItem::key() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncItem.key)
  return key_.GetNoArena();
}
inline void SyncItem::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncItem.key)
}
#if LANG_CXX11
inline void SyncItem::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.sync.protobuf.SyncItem.key)
}
#endif
inline void SyncItem::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.sync.protobuf.SyncItem.key)
}
inline void SyncItem::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.sync.protobuf.SyncItem.key)
}
inline ::std::string* SyncItem::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncItem.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncItem::release_key() {
  // @@protoc_insertion_point(field_release:zjchain.sync.protobuf.SyncItem.key)
  if (!has_key()) {
    return NULL;
  }
  clear_has_key();
  return key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncItem::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:zjchain.sync.protobuf.SyncItem.key)
}

// optional bytes value = 2;
inline bool SyncItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncItem::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& SyncItem::value() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncItem.value)
  return value_.GetNoArena();
}
inline void SyncItem::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncItem.value)
}
#if LANG_CXX11
inline void SyncItem::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.sync.protobuf.SyncItem.value)
}
#endif
inline void SyncItem::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.sync.protobuf.SyncItem.value)
}
inline void SyncItem::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.sync.protobuf.SyncItem.value)
}
inline ::std::string* SyncItem::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncItem.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncItem::release_value() {
  // @@protoc_insertion_point(field_release:zjchain.sync.protobuf.SyncItem.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncItem::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:zjchain.sync.protobuf.SyncItem.value)
}

// -------------------------------------------------------------------

// SyncInfo

// repeated .zjchain.sync.protobuf.SyncItem items = 1;
inline int SyncInfo::items_size() const {
  return items_.size();
}
inline void SyncInfo::clear_items() {
  items_.Clear();
}
inline ::zjchain::sync::protobuf::SyncItem* SyncInfo::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncInfo.items)
  return items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem >*
SyncInfo::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.sync.protobuf.SyncInfo.items)
  return &items_;
}
inline const ::zjchain::sync::protobuf::SyncItem& SyncInfo::items(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncInfo.items)
  return items_.Get(index);
}
inline ::zjchain::sync::protobuf::SyncItem* SyncInfo::add_items() {
  // @@protoc_insertion_point(field_add:zjchain.sync.protobuf.SyncInfo.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem >&
SyncInfo::items() const {
  // @@protoc_insertion_point(field_list:zjchain.sync.protobuf.SyncInfo.items)
  return items_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace sync
}  // namespace zjchain

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protos_2fsync_2eproto
