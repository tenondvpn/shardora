// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/sync.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fsync_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fsync_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3020000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3020003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protos_2fsync_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fsync_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protos_2fsync_2eproto;
namespace zjchain {
namespace sync {
namespace protobuf {
class FlushDbItem;
struct FlushDbItemDefaultTypeInternal;
extern FlushDbItemDefaultTypeInternal _FlushDbItem_default_instance_;
class SyncHeightItem;
struct SyncHeightItemDefaultTypeInternal;
extern SyncHeightItemDefaultTypeInternal _SyncHeightItem_default_instance_;
class SyncInfo;
struct SyncInfoDefaultTypeInternal;
extern SyncInfoDefaultTypeInternal _SyncInfo_default_instance_;
class SyncItem;
struct SyncItemDefaultTypeInternal;
extern SyncItemDefaultTypeInternal _SyncItem_default_instance_;
class SyncMessage;
struct SyncMessageDefaultTypeInternal;
extern SyncMessageDefaultTypeInternal _SyncMessage_default_instance_;
class SyncResItem;
struct SyncResItemDefaultTypeInternal;
extern SyncResItemDefaultTypeInternal _SyncResItem_default_instance_;
class SyncValueRequest;
struct SyncValueRequestDefaultTypeInternal;
extern SyncValueRequestDefaultTypeInternal _SyncValueRequest_default_instance_;
class SyncValueResponse;
struct SyncValueResponseDefaultTypeInternal;
extern SyncValueResponseDefaultTypeInternal _SyncValueResponse_default_instance_;
}  // namespace protobuf
}  // namespace sync
}  // namespace zjchain
PROTOBUF_NAMESPACE_OPEN
template<> ::zjchain::sync::protobuf::FlushDbItem* Arena::CreateMaybeMessage<::zjchain::sync::protobuf::FlushDbItem>(Arena*);
template<> ::zjchain::sync::protobuf::SyncHeightItem* Arena::CreateMaybeMessage<::zjchain::sync::protobuf::SyncHeightItem>(Arena*);
template<> ::zjchain::sync::protobuf::SyncInfo* Arena::CreateMaybeMessage<::zjchain::sync::protobuf::SyncInfo>(Arena*);
template<> ::zjchain::sync::protobuf::SyncItem* Arena::CreateMaybeMessage<::zjchain::sync::protobuf::SyncItem>(Arena*);
template<> ::zjchain::sync::protobuf::SyncMessage* Arena::CreateMaybeMessage<::zjchain::sync::protobuf::SyncMessage>(Arena*);
template<> ::zjchain::sync::protobuf::SyncResItem* Arena::CreateMaybeMessage<::zjchain::sync::protobuf::SyncResItem>(Arena*);
template<> ::zjchain::sync::protobuf::SyncValueRequest* Arena::CreateMaybeMessage<::zjchain::sync::protobuf::SyncValueRequest>(Arena*);
template<> ::zjchain::sync::protobuf::SyncValueResponse* Arena::CreateMaybeMessage<::zjchain::sync::protobuf::SyncValueResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace zjchain {
namespace sync {
namespace protobuf {

// ===================================================================

class SyncItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zjchain.sync.protobuf.SyncItem) */ {
 public:
  inline SyncItem() : SyncItem(nullptr) {}
  ~SyncItem() override;
  explicit PROTOBUF_CONSTEXPR SyncItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SyncItem(const SyncItem& from);
  SyncItem(SyncItem&& from) noexcept
    : SyncItem() {
    *this = ::std::move(from);
  }

  inline SyncItem& operator=(const SyncItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncItem& operator=(SyncItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncItem* internal_default_instance() {
    return reinterpret_cast<const SyncItem*>(
               &_SyncItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SyncItem& a, SyncItem& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SyncItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SyncItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SyncItem& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zjchain.sync.protobuf.SyncItem";
  }
  protected:
  explicit SyncItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional bytes key = 1;
  bool has_key() const;
  private:
  bool _internal_has_key() const;
  public:
  void clear_key();
  const std::string& key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // optional bytes value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const std::string& value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_protos_2fsync_2eproto;
};
// -------------------------------------------------------------------

class SyncInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zjchain.sync.protobuf.SyncInfo) */ {
 public:
  inline SyncInfo() : SyncInfo(nullptr) {}
  ~SyncInfo() override;
  explicit PROTOBUF_CONSTEXPR SyncInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SyncInfo(const SyncInfo& from);
  SyncInfo(SyncInfo&& from) noexcept
    : SyncInfo() {
    *this = ::std::move(from);
  }

  inline SyncInfo& operator=(const SyncInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncInfo& operator=(SyncInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncInfo* internal_default_instance() {
    return reinterpret_cast<const SyncInfo*>(
               &_SyncInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SyncInfo& a, SyncInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SyncInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SyncInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SyncInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zjchain.sync.protobuf.SyncInfo";
  }
  protected:
  explicit SyncInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .zjchain.sync.protobuf.SyncItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::zjchain::sync::protobuf::SyncItem* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem >*
      mutable_items();
  private:
  const ::zjchain::sync::protobuf::SyncItem& _internal_items(int index) const;
  ::zjchain::sync::protobuf::SyncItem* _internal_add_items();
  public:
  const ::zjchain::sync::protobuf::SyncItem& items(int index) const;
  ::zjchain::sync::protobuf::SyncItem* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem >&
      items() const;

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem > items_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protos_2fsync_2eproto;
};
// -------------------------------------------------------------------

class SyncHeightItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zjchain.sync.protobuf.SyncHeightItem) */ {
 public:
  inline SyncHeightItem() : SyncHeightItem(nullptr) {}
  ~SyncHeightItem() override;
  explicit PROTOBUF_CONSTEXPR SyncHeightItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SyncHeightItem(const SyncHeightItem& from);
  SyncHeightItem(SyncHeightItem&& from) noexcept
    : SyncHeightItem() {
    *this = ::std::move(from);
  }

  inline SyncHeightItem& operator=(const SyncHeightItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncHeightItem& operator=(SyncHeightItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncHeightItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncHeightItem* internal_default_instance() {
    return reinterpret_cast<const SyncHeightItem*>(
               &_SyncHeightItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SyncHeightItem& a, SyncHeightItem& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncHeightItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncHeightItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncHeightItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SyncHeightItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SyncHeightItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SyncHeightItem& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncHeightItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zjchain.sync.protobuf.SyncHeightItem";
  }
  protected:
  explicit SyncHeightItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeightFieldNumber = 2,
    kPoolIdxFieldNumber = 1,
    kTagFieldNumber = 3,
  };
  // optional uint64 height = 2;
  bool has_height() const;
  private:
  bool _internal_has_height() const;
  public:
  void clear_height();
  uint64_t height() const;
  void set_height(uint64_t value);
  private:
  uint64_t _internal_height() const;
  void _internal_set_height(uint64_t value);
  public:

  // optional uint32 pool_idx = 1;
  bool has_pool_idx() const;
  private:
  bool _internal_has_pool_idx() const;
  public:
  void clear_pool_idx();
  uint32_t pool_idx() const;
  void set_pool_idx(uint32_t value);
  private:
  uint32_t _internal_pool_idx() const;
  void _internal_set_pool_idx(uint32_t value);
  public:

  // optional uint32 tag = 3;
  bool has_tag() const;
  private:
  bool _internal_has_tag() const;
  public:
  void clear_tag();
  uint32_t tag() const;
  void set_tag(uint32_t value);
  private:
  uint32_t _internal_tag() const;
  void _internal_set_tag(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncHeightItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint64_t height_;
  uint32_t pool_idx_;
  uint32_t tag_;
  friend struct ::TableStruct_protos_2fsync_2eproto;
};
// -------------------------------------------------------------------

class FlushDbItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zjchain.sync.protobuf.FlushDbItem) */ {
 public:
  inline FlushDbItem() : FlushDbItem(nullptr) {}
  ~FlushDbItem() override;
  explicit PROTOBUF_CONSTEXPR FlushDbItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FlushDbItem(const FlushDbItem& from);
  FlushDbItem(FlushDbItem&& from) noexcept
    : FlushDbItem() {
    *this = ::std::move(from);
  }

  inline FlushDbItem& operator=(const FlushDbItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlushDbItem& operator=(FlushDbItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlushDbItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlushDbItem* internal_default_instance() {
    return reinterpret_cast<const FlushDbItem*>(
               &_FlushDbItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(FlushDbItem& a, FlushDbItem& b) {
    a.Swap(&b);
  }
  inline void Swap(FlushDbItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlushDbItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlushDbItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FlushDbItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FlushDbItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const FlushDbItem& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FlushDbItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zjchain.sync.protobuf.FlushDbItem";
  }
  protected:
  explicit FlushDbItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeightsFieldNumber = 3,
    kMaxVecIndexFieldNumber = 1,
    kMaxHeightFieldNumber = 2,
  };
  // repeated uint64 heights = 3;
  int heights_size() const;
  private:
  int _internal_heights_size() const;
  public:
  void clear_heights();
  private:
  uint64_t _internal_heights(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_heights() const;
  void _internal_add_heights(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_heights();
  public:
  uint64_t heights(int index) const;
  void set_heights(int index, uint64_t value);
  void add_heights(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      heights() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_heights();

  // optional uint64 max_vec_index = 1;
  bool has_max_vec_index() const;
  private:
  bool _internal_has_max_vec_index() const;
  public:
  void clear_max_vec_index();
  uint64_t max_vec_index() const;
  void set_max_vec_index(uint64_t value);
  private:
  uint64_t _internal_max_vec_index() const;
  void _internal_set_max_vec_index(uint64_t value);
  public:

  // optional uint64 max_height = 2;
  bool has_max_height() const;
  private:
  bool _internal_has_max_height() const;
  public:
  void clear_max_height();
  uint64_t max_height() const;
  void set_max_height(uint64_t value);
  private:
  uint64_t _internal_max_height() const;
  void _internal_set_max_height(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.FlushDbItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > heights_;
  uint64_t max_vec_index_;
  uint64_t max_height_;
  friend struct ::TableStruct_protos_2fsync_2eproto;
};
// -------------------------------------------------------------------

class SyncValueRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zjchain.sync.protobuf.SyncValueRequest) */ {
 public:
  inline SyncValueRequest() : SyncValueRequest(nullptr) {}
  ~SyncValueRequest() override;
  explicit PROTOBUF_CONSTEXPR SyncValueRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SyncValueRequest(const SyncValueRequest& from);
  SyncValueRequest(SyncValueRequest&& from) noexcept
    : SyncValueRequest() {
    *this = ::std::move(from);
  }

  inline SyncValueRequest& operator=(const SyncValueRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncValueRequest& operator=(SyncValueRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncValueRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncValueRequest* internal_default_instance() {
    return reinterpret_cast<const SyncValueRequest*>(
               &_SyncValueRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SyncValueRequest& a, SyncValueRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncValueRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncValueRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncValueRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SyncValueRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SyncValueRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SyncValueRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncValueRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zjchain.sync.protobuf.SyncValueRequest";
  }
  protected:
  explicit SyncValueRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 2,
    kHeightsFieldNumber = 3,
    kNetworkIdFieldNumber = 1,
  };
  // repeated bytes keys = 2;
  int keys_size() const;
  private:
  int _internal_keys_size() const;
  public:
  void clear_keys();
  const std::string& keys(int index) const;
  std::string* mutable_keys(int index);
  void set_keys(int index, const std::string& value);
  void set_keys(int index, std::string&& value);
  void set_keys(int index, const char* value);
  void set_keys(int index, const void* value, size_t size);
  std::string* add_keys();
  void add_keys(const std::string& value);
  void add_keys(std::string&& value);
  void add_keys(const char* value);
  void add_keys(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& keys() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_keys();
  private:
  const std::string& _internal_keys(int index) const;
  std::string* _internal_add_keys();
  public:

  // repeated .zjchain.sync.protobuf.SyncHeightItem heights = 3;
  int heights_size() const;
  private:
  int _internal_heights_size() const;
  public:
  void clear_heights();
  ::zjchain::sync::protobuf::SyncHeightItem* mutable_heights(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncHeightItem >*
      mutable_heights();
  private:
  const ::zjchain::sync::protobuf::SyncHeightItem& _internal_heights(int index) const;
  ::zjchain::sync::protobuf::SyncHeightItem* _internal_add_heights();
  public:
  const ::zjchain::sync::protobuf::SyncHeightItem& heights(int index) const;
  ::zjchain::sync::protobuf::SyncHeightItem* add_heights();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncHeightItem >&
      heights() const;

  // optional uint32 network_id = 1;
  bool has_network_id() const;
  private:
  bool _internal_has_network_id() const;
  public:
  void clear_network_id();
  uint32_t network_id() const;
  void set_network_id(uint32_t value);
  private:
  uint32_t _internal_network_id() const;
  void _internal_set_network_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncValueRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> keys_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncHeightItem > heights_;
  uint32_t network_id_;
  friend struct ::TableStruct_protos_2fsync_2eproto;
};
// -------------------------------------------------------------------

class SyncResItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zjchain.sync.protobuf.SyncResItem) */ {
 public:
  inline SyncResItem() : SyncResItem(nullptr) {}
  ~SyncResItem() override;
  explicit PROTOBUF_CONSTEXPR SyncResItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SyncResItem(const SyncResItem& from);
  SyncResItem(SyncResItem&& from) noexcept
    : SyncResItem() {
    *this = ::std::move(from);
  }

  inline SyncResItem& operator=(const SyncResItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncResItem& operator=(SyncResItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncResItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncResItem* internal_default_instance() {
    return reinterpret_cast<const SyncResItem*>(
               &_SyncResItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SyncResItem& a, SyncResItem& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncResItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncResItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncResItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SyncResItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SyncResItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SyncResItem& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncResItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zjchain.sync.protobuf.SyncResItem";
  }
  protected:
  explicit SyncResItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
    kNetworkIdFieldNumber = 3,
    kPoolIdxFieldNumber = 4,
    kHeightFieldNumber = 5,
  };
  // optional bytes key = 1;
  bool has_key() const;
  private:
  bool _internal_has_key() const;
  public:
  void clear_key();
  const std::string& key() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_key(ArgT0&& arg0, ArgT... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // optional bytes value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const std::string& value() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // optional uint32 network_id = 3;
  bool has_network_id() const;
  private:
  bool _internal_has_network_id() const;
  public:
  void clear_network_id();
  uint32_t network_id() const;
  void set_network_id(uint32_t value);
  private:
  uint32_t _internal_network_id() const;
  void _internal_set_network_id(uint32_t value);
  public:

  // optional uint32 pool_idx = 4;
  bool has_pool_idx() const;
  private:
  bool _internal_has_pool_idx() const;
  public:
  void clear_pool_idx();
  uint32_t pool_idx() const;
  void set_pool_idx(uint32_t value);
  private:
  uint32_t _internal_pool_idx() const;
  void _internal_set_pool_idx(uint32_t value);
  public:

  // optional uint64 height = 5;
  bool has_height() const;
  private:
  bool _internal_has_height() const;
  public:
  void clear_height();
  uint64_t height() const;
  void set_height(uint64_t value);
  private:
  uint64_t _internal_height() const;
  void _internal_set_height(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncResItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  uint32_t network_id_;
  uint32_t pool_idx_;
  uint64_t height_;
  friend struct ::TableStruct_protos_2fsync_2eproto;
};
// -------------------------------------------------------------------

class SyncValueResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zjchain.sync.protobuf.SyncValueResponse) */ {
 public:
  inline SyncValueResponse() : SyncValueResponse(nullptr) {}
  ~SyncValueResponse() override;
  explicit PROTOBUF_CONSTEXPR SyncValueResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SyncValueResponse(const SyncValueResponse& from);
  SyncValueResponse(SyncValueResponse&& from) noexcept
    : SyncValueResponse() {
    *this = ::std::move(from);
  }

  inline SyncValueResponse& operator=(const SyncValueResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncValueResponse& operator=(SyncValueResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncValueResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncValueResponse* internal_default_instance() {
    return reinterpret_cast<const SyncValueResponse*>(
               &_SyncValueResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SyncValueResponse& a, SyncValueResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncValueResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncValueResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncValueResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SyncValueResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SyncValueResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SyncValueResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncValueResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zjchain.sync.protobuf.SyncValueResponse";
  }
  protected:
  explicit SyncValueResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResFieldNumber = 2,
    kNetworkIdFieldNumber = 1,
  };
  // repeated .zjchain.sync.protobuf.SyncResItem res = 2;
  int res_size() const;
  private:
  int _internal_res_size() const;
  public:
  void clear_res();
  ::zjchain::sync::protobuf::SyncResItem* mutable_res(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncResItem >*
      mutable_res();
  private:
  const ::zjchain::sync::protobuf::SyncResItem& _internal_res(int index) const;
  ::zjchain::sync::protobuf::SyncResItem* _internal_add_res();
  public:
  const ::zjchain::sync::protobuf::SyncResItem& res(int index) const;
  ::zjchain::sync::protobuf::SyncResItem* add_res();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncResItem >&
      res() const;

  // optional uint32 network_id = 1;
  bool has_network_id() const;
  private:
  bool _internal_has_network_id() const;
  public:
  void clear_network_id();
  uint32_t network_id() const;
  void set_network_id(uint32_t value);
  private:
  uint32_t _internal_network_id() const;
  void _internal_set_network_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncValueResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncResItem > res_;
  uint32_t network_id_;
  friend struct ::TableStruct_protos_2fsync_2eproto;
};
// -------------------------------------------------------------------

class SyncMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:zjchain.sync.protobuf.SyncMessage) */ {
 public:
  inline SyncMessage() : SyncMessage(nullptr) {}
  ~SyncMessage() override;
  explicit PROTOBUF_CONSTEXPR SyncMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SyncMessage(const SyncMessage& from);
  SyncMessage(SyncMessage&& from) noexcept
    : SyncMessage() {
    *this = ::std::move(from);
  }

  inline SyncMessage& operator=(const SyncMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncMessage& operator=(SyncMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncMessage* internal_default_instance() {
    return reinterpret_cast<const SyncMessage*>(
               &_SyncMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SyncMessage& a, SyncMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SyncMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SyncMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SyncMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "zjchain.sync.protobuf.SyncMessage";
  }
  protected:
  explicit SyncMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSyncValueReqFieldNumber = 1,
    kSyncValueResFieldNumber = 2,
  };
  // optional .zjchain.sync.protobuf.SyncValueRequest sync_value_req = 1;
  bool has_sync_value_req() const;
  private:
  bool _internal_has_sync_value_req() const;
  public:
  void clear_sync_value_req();
  const ::zjchain::sync::protobuf::SyncValueRequest& sync_value_req() const;
  PROTOBUF_NODISCARD ::zjchain::sync::protobuf::SyncValueRequest* release_sync_value_req();
  ::zjchain::sync::protobuf::SyncValueRequest* mutable_sync_value_req();
  void set_allocated_sync_value_req(::zjchain::sync::protobuf::SyncValueRequest* sync_value_req);
  private:
  const ::zjchain::sync::protobuf::SyncValueRequest& _internal_sync_value_req() const;
  ::zjchain::sync::protobuf::SyncValueRequest* _internal_mutable_sync_value_req();
  public:
  void unsafe_arena_set_allocated_sync_value_req(
      ::zjchain::sync::protobuf::SyncValueRequest* sync_value_req);
  ::zjchain::sync::protobuf::SyncValueRequest* unsafe_arena_release_sync_value_req();

  // optional .zjchain.sync.protobuf.SyncValueResponse sync_value_res = 2;
  bool has_sync_value_res() const;
  private:
  bool _internal_has_sync_value_res() const;
  public:
  void clear_sync_value_res();
  const ::zjchain::sync::protobuf::SyncValueResponse& sync_value_res() const;
  PROTOBUF_NODISCARD ::zjchain::sync::protobuf::SyncValueResponse* release_sync_value_res();
  ::zjchain::sync::protobuf::SyncValueResponse* mutable_sync_value_res();
  void set_allocated_sync_value_res(::zjchain::sync::protobuf::SyncValueResponse* sync_value_res);
  private:
  const ::zjchain::sync::protobuf::SyncValueResponse& _internal_sync_value_res() const;
  ::zjchain::sync::protobuf::SyncValueResponse* _internal_mutable_sync_value_res();
  public:
  void unsafe_arena_set_allocated_sync_value_res(
      ::zjchain::sync::protobuf::SyncValueResponse* sync_value_res);
  ::zjchain::sync::protobuf::SyncValueResponse* unsafe_arena_release_sync_value_res();

  // @@protoc_insertion_point(class_scope:zjchain.sync.protobuf.SyncMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::zjchain::sync::protobuf::SyncValueRequest* sync_value_req_;
  ::zjchain::sync::protobuf::SyncValueResponse* sync_value_res_;
  friend struct ::TableStruct_protos_2fsync_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SyncItem

// optional bytes key = 1;
inline bool SyncItem::_internal_has_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SyncItem::has_key() const {
  return _internal_has_key();
}
inline void SyncItem::clear_key() {
  key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SyncItem::key() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncItem.key)
  return _internal_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncItem::set_key(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 key_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncItem.key)
}
inline std::string* SyncItem::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncItem.key)
  return _s;
}
inline const std::string& SyncItem::_internal_key() const {
  return key_.Get();
}
inline void SyncItem::_internal_set_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncItem::_internal_mutable_key() {
  _has_bits_[0] |= 0x00000001u;
  return key_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncItem::release_key() {
  // @@protoc_insertion_point(field_release:zjchain.sync.protobuf.SyncItem.key)
  if (!_internal_has_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = key_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (key_.IsDefault()) {
    key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncItem::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  key_.SetAllocated(key, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (key_.IsDefault()) {
    key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:zjchain.sync.protobuf.SyncItem.key)
}

// optional bytes value = 2;
inline bool SyncItem::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SyncItem::has_value() const {
  return _internal_has_value();
}
inline void SyncItem::clear_value() {
  value_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SyncItem::value() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncItem.value)
  return _internal_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncItem::set_value(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 value_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncItem.value)
}
inline std::string* SyncItem::mutable_value() {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncItem.value)
  return _s;
}
inline const std::string& SyncItem::_internal_value() const {
  return value_.Get();
}
inline void SyncItem::_internal_set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncItem::_internal_mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  return value_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncItem::release_value() {
  // @@protoc_insertion_point(field_release:zjchain.sync.protobuf.SyncItem.value)
  if (!_internal_has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  auto* p = value_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (value_.IsDefault()) {
    value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncItem::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocated(value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (value_.IsDefault()) {
    value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:zjchain.sync.protobuf.SyncItem.value)
}

// -------------------------------------------------------------------

// SyncInfo

// repeated .zjchain.sync.protobuf.SyncItem items = 1;
inline int SyncInfo::_internal_items_size() const {
  return items_.size();
}
inline int SyncInfo::items_size() const {
  return _internal_items_size();
}
inline void SyncInfo::clear_items() {
  items_.Clear();
}
inline ::zjchain::sync::protobuf::SyncItem* SyncInfo::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncInfo.items)
  return items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem >*
SyncInfo::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.sync.protobuf.SyncInfo.items)
  return &items_;
}
inline const ::zjchain::sync::protobuf::SyncItem& SyncInfo::_internal_items(int index) const {
  return items_.Get(index);
}
inline const ::zjchain::sync::protobuf::SyncItem& SyncInfo::items(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncInfo.items)
  return _internal_items(index);
}
inline ::zjchain::sync::protobuf::SyncItem* SyncInfo::_internal_add_items() {
  return items_.Add();
}
inline ::zjchain::sync::protobuf::SyncItem* SyncInfo::add_items() {
  ::zjchain::sync::protobuf::SyncItem* _add = _internal_add_items();
  // @@protoc_insertion_point(field_add:zjchain.sync.protobuf.SyncInfo.items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncItem >&
SyncInfo::items() const {
  // @@protoc_insertion_point(field_list:zjchain.sync.protobuf.SyncInfo.items)
  return items_;
}

// -------------------------------------------------------------------

// SyncHeightItem

// optional uint32 pool_idx = 1;
inline bool SyncHeightItem::_internal_has_pool_idx() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SyncHeightItem::has_pool_idx() const {
  return _internal_has_pool_idx();
}
inline void SyncHeightItem::clear_pool_idx() {
  pool_idx_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline uint32_t SyncHeightItem::_internal_pool_idx() const {
  return pool_idx_;
}
inline uint32_t SyncHeightItem::pool_idx() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncHeightItem.pool_idx)
  return _internal_pool_idx();
}
inline void SyncHeightItem::_internal_set_pool_idx(uint32_t value) {
  _has_bits_[0] |= 0x00000002u;
  pool_idx_ = value;
}
inline void SyncHeightItem::set_pool_idx(uint32_t value) {
  _internal_set_pool_idx(value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncHeightItem.pool_idx)
}

// optional uint64 height = 2;
inline bool SyncHeightItem::_internal_has_height() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SyncHeightItem::has_height() const {
  return _internal_has_height();
}
inline void SyncHeightItem::clear_height() {
  height_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t SyncHeightItem::_internal_height() const {
  return height_;
}
inline uint64_t SyncHeightItem::height() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncHeightItem.height)
  return _internal_height();
}
inline void SyncHeightItem::_internal_set_height(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  height_ = value;
}
inline void SyncHeightItem::set_height(uint64_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncHeightItem.height)
}

// optional uint32 tag = 3;
inline bool SyncHeightItem::_internal_has_tag() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SyncHeightItem::has_tag() const {
  return _internal_has_tag();
}
inline void SyncHeightItem::clear_tag() {
  tag_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t SyncHeightItem::_internal_tag() const {
  return tag_;
}
inline uint32_t SyncHeightItem::tag() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncHeightItem.tag)
  return _internal_tag();
}
inline void SyncHeightItem::_internal_set_tag(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  tag_ = value;
}
inline void SyncHeightItem::set_tag(uint32_t value) {
  _internal_set_tag(value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncHeightItem.tag)
}

// -------------------------------------------------------------------

// FlushDbItem

// optional uint64 max_vec_index = 1;
inline bool FlushDbItem::_internal_has_max_vec_index() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool FlushDbItem::has_max_vec_index() const {
  return _internal_has_max_vec_index();
}
inline void FlushDbItem::clear_max_vec_index() {
  max_vec_index_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000001u;
}
inline uint64_t FlushDbItem::_internal_max_vec_index() const {
  return max_vec_index_;
}
inline uint64_t FlushDbItem::max_vec_index() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.FlushDbItem.max_vec_index)
  return _internal_max_vec_index();
}
inline void FlushDbItem::_internal_set_max_vec_index(uint64_t value) {
  _has_bits_[0] |= 0x00000001u;
  max_vec_index_ = value;
}
inline void FlushDbItem::set_max_vec_index(uint64_t value) {
  _internal_set_max_vec_index(value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.FlushDbItem.max_vec_index)
}

// optional uint64 max_height = 2;
inline bool FlushDbItem::_internal_has_max_height() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool FlushDbItem::has_max_height() const {
  return _internal_has_max_height();
}
inline void FlushDbItem::clear_max_height() {
  max_height_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000002u;
}
inline uint64_t FlushDbItem::_internal_max_height() const {
  return max_height_;
}
inline uint64_t FlushDbItem::max_height() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.FlushDbItem.max_height)
  return _internal_max_height();
}
inline void FlushDbItem::_internal_set_max_height(uint64_t value) {
  _has_bits_[0] |= 0x00000002u;
  max_height_ = value;
}
inline void FlushDbItem::set_max_height(uint64_t value) {
  _internal_set_max_height(value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.FlushDbItem.max_height)
}

// repeated uint64 heights = 3;
inline int FlushDbItem::_internal_heights_size() const {
  return heights_.size();
}
inline int FlushDbItem::heights_size() const {
  return _internal_heights_size();
}
inline void FlushDbItem::clear_heights() {
  heights_.Clear();
}
inline uint64_t FlushDbItem::_internal_heights(int index) const {
  return heights_.Get(index);
}
inline uint64_t FlushDbItem::heights(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.FlushDbItem.heights)
  return _internal_heights(index);
}
inline void FlushDbItem::set_heights(int index, uint64_t value) {
  heights_.Set(index, value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.FlushDbItem.heights)
}
inline void FlushDbItem::_internal_add_heights(uint64_t value) {
  heights_.Add(value);
}
inline void FlushDbItem::add_heights(uint64_t value) {
  _internal_add_heights(value);
  // @@protoc_insertion_point(field_add:zjchain.sync.protobuf.FlushDbItem.heights)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
FlushDbItem::_internal_heights() const {
  return heights_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
FlushDbItem::heights() const {
  // @@protoc_insertion_point(field_list:zjchain.sync.protobuf.FlushDbItem.heights)
  return _internal_heights();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
FlushDbItem::_internal_mutable_heights() {
  return &heights_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
FlushDbItem::mutable_heights() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.sync.protobuf.FlushDbItem.heights)
  return _internal_mutable_heights();
}

// -------------------------------------------------------------------

// SyncValueRequest

// optional uint32 network_id = 1;
inline bool SyncValueRequest::_internal_has_network_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SyncValueRequest::has_network_id() const {
  return _internal_has_network_id();
}
inline void SyncValueRequest::clear_network_id() {
  network_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t SyncValueRequest::_internal_network_id() const {
  return network_id_;
}
inline uint32_t SyncValueRequest::network_id() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncValueRequest.network_id)
  return _internal_network_id();
}
inline void SyncValueRequest::_internal_set_network_id(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  network_id_ = value;
}
inline void SyncValueRequest::set_network_id(uint32_t value) {
  _internal_set_network_id(value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncValueRequest.network_id)
}

// repeated bytes keys = 2;
inline int SyncValueRequest::_internal_keys_size() const {
  return keys_.size();
}
inline int SyncValueRequest::keys_size() const {
  return _internal_keys_size();
}
inline void SyncValueRequest::clear_keys() {
  keys_.Clear();
}
inline std::string* SyncValueRequest::add_keys() {
  std::string* _s = _internal_add_keys();
  // @@protoc_insertion_point(field_add_mutable:zjchain.sync.protobuf.SyncValueRequest.keys)
  return _s;
}
inline const std::string& SyncValueRequest::_internal_keys(int index) const {
  return keys_.Get(index);
}
inline const std::string& SyncValueRequest::keys(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncValueRequest.keys)
  return _internal_keys(index);
}
inline std::string* SyncValueRequest::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncValueRequest.keys)
  return keys_.Mutable(index);
}
inline void SyncValueRequest::set_keys(int index, const std::string& value) {
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncValueRequest.keys)
}
inline void SyncValueRequest::set_keys(int index, std::string&& value) {
  keys_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncValueRequest.keys)
}
inline void SyncValueRequest::set_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:zjchain.sync.protobuf.SyncValueRequest.keys)
}
inline void SyncValueRequest::set_keys(int index, const void* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:zjchain.sync.protobuf.SyncValueRequest.keys)
}
inline std::string* SyncValueRequest::_internal_add_keys() {
  return keys_.Add();
}
inline void SyncValueRequest::add_keys(const std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:zjchain.sync.protobuf.SyncValueRequest.keys)
}
inline void SyncValueRequest::add_keys(std::string&& value) {
  keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:zjchain.sync.protobuf.SyncValueRequest.keys)
}
inline void SyncValueRequest::add_keys(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:zjchain.sync.protobuf.SyncValueRequest.keys)
}
inline void SyncValueRequest::add_keys(const void* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:zjchain.sync.protobuf.SyncValueRequest.keys)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
SyncValueRequest::keys() const {
  // @@protoc_insertion_point(field_list:zjchain.sync.protobuf.SyncValueRequest.keys)
  return keys_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
SyncValueRequest::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.sync.protobuf.SyncValueRequest.keys)
  return &keys_;
}

// repeated .zjchain.sync.protobuf.SyncHeightItem heights = 3;
inline int SyncValueRequest::_internal_heights_size() const {
  return heights_.size();
}
inline int SyncValueRequest::heights_size() const {
  return _internal_heights_size();
}
inline void SyncValueRequest::clear_heights() {
  heights_.Clear();
}
inline ::zjchain::sync::protobuf::SyncHeightItem* SyncValueRequest::mutable_heights(int index) {
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncValueRequest.heights)
  return heights_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncHeightItem >*
SyncValueRequest::mutable_heights() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.sync.protobuf.SyncValueRequest.heights)
  return &heights_;
}
inline const ::zjchain::sync::protobuf::SyncHeightItem& SyncValueRequest::_internal_heights(int index) const {
  return heights_.Get(index);
}
inline const ::zjchain::sync::protobuf::SyncHeightItem& SyncValueRequest::heights(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncValueRequest.heights)
  return _internal_heights(index);
}
inline ::zjchain::sync::protobuf::SyncHeightItem* SyncValueRequest::_internal_add_heights() {
  return heights_.Add();
}
inline ::zjchain::sync::protobuf::SyncHeightItem* SyncValueRequest::add_heights() {
  ::zjchain::sync::protobuf::SyncHeightItem* _add = _internal_add_heights();
  // @@protoc_insertion_point(field_add:zjchain.sync.protobuf.SyncValueRequest.heights)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncHeightItem >&
SyncValueRequest::heights() const {
  // @@protoc_insertion_point(field_list:zjchain.sync.protobuf.SyncValueRequest.heights)
  return heights_;
}

// -------------------------------------------------------------------

// SyncResItem

// optional bytes key = 1;
inline bool SyncResItem::_internal_has_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SyncResItem::has_key() const {
  return _internal_has_key();
}
inline void SyncResItem::clear_key() {
  key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SyncResItem::key() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncResItem.key)
  return _internal_key();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncResItem::set_key(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 key_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncResItem.key)
}
inline std::string* SyncResItem::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncResItem.key)
  return _s;
}
inline const std::string& SyncResItem::_internal_key() const {
  return key_.Get();
}
inline void SyncResItem::_internal_set_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncResItem::_internal_mutable_key() {
  _has_bits_[0] |= 0x00000001u;
  return key_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncResItem::release_key() {
  // @@protoc_insertion_point(field_release:zjchain.sync.protobuf.SyncResItem.key)
  if (!_internal_has_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  auto* p = key_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (key_.IsDefault()) {
    key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncResItem::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  key_.SetAllocated(key, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (key_.IsDefault()) {
    key_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:zjchain.sync.protobuf.SyncResItem.key)
}

// optional bytes value = 2;
inline bool SyncResItem::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SyncResItem::has_value() const {
  return _internal_has_value();
}
inline void SyncResItem::clear_value() {
  value_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SyncResItem::value() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncResItem.value)
  return _internal_value();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SyncResItem::set_value(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 value_.SetBytes(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncResItem.value)
}
inline std::string* SyncResItem::mutable_value() {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncResItem.value)
  return _s;
}
inline const std::string& SyncResItem::_internal_value() const {
  return value_.Get();
}
inline void SyncResItem::_internal_set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.Set(value, GetArenaForAllocation());
}
inline std::string* SyncResItem::_internal_mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  return value_.Mutable(GetArenaForAllocation());
}
inline std::string* SyncResItem::release_value() {
  // @@protoc_insertion_point(field_release:zjchain.sync.protobuf.SyncResItem.value)
  if (!_internal_has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  auto* p = value_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (value_.IsDefault()) {
    value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void SyncResItem::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocated(value, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (value_.IsDefault()) {
    value_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:zjchain.sync.protobuf.SyncResItem.value)
}

// optional uint32 network_id = 3;
inline bool SyncResItem::_internal_has_network_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SyncResItem::has_network_id() const {
  return _internal_has_network_id();
}
inline void SyncResItem::clear_network_id() {
  network_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline uint32_t SyncResItem::_internal_network_id() const {
  return network_id_;
}
inline uint32_t SyncResItem::network_id() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncResItem.network_id)
  return _internal_network_id();
}
inline void SyncResItem::_internal_set_network_id(uint32_t value) {
  _has_bits_[0] |= 0x00000004u;
  network_id_ = value;
}
inline void SyncResItem::set_network_id(uint32_t value) {
  _internal_set_network_id(value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncResItem.network_id)
}

// optional uint32 pool_idx = 4;
inline bool SyncResItem::_internal_has_pool_idx() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SyncResItem::has_pool_idx() const {
  return _internal_has_pool_idx();
}
inline void SyncResItem::clear_pool_idx() {
  pool_idx_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline uint32_t SyncResItem::_internal_pool_idx() const {
  return pool_idx_;
}
inline uint32_t SyncResItem::pool_idx() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncResItem.pool_idx)
  return _internal_pool_idx();
}
inline void SyncResItem::_internal_set_pool_idx(uint32_t value) {
  _has_bits_[0] |= 0x00000008u;
  pool_idx_ = value;
}
inline void SyncResItem::set_pool_idx(uint32_t value) {
  _internal_set_pool_idx(value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncResItem.pool_idx)
}

// optional uint64 height = 5;
inline bool SyncResItem::_internal_has_height() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool SyncResItem::has_height() const {
  return _internal_has_height();
}
inline void SyncResItem::clear_height() {
  height_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00000010u;
}
inline uint64_t SyncResItem::_internal_height() const {
  return height_;
}
inline uint64_t SyncResItem::height() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncResItem.height)
  return _internal_height();
}
inline void SyncResItem::_internal_set_height(uint64_t value) {
  _has_bits_[0] |= 0x00000010u;
  height_ = value;
}
inline void SyncResItem::set_height(uint64_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncResItem.height)
}

// -------------------------------------------------------------------

// SyncValueResponse

// optional uint32 network_id = 1;
inline bool SyncValueResponse::_internal_has_network_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SyncValueResponse::has_network_id() const {
  return _internal_has_network_id();
}
inline void SyncValueResponse::clear_network_id() {
  network_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline uint32_t SyncValueResponse::_internal_network_id() const {
  return network_id_;
}
inline uint32_t SyncValueResponse::network_id() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncValueResponse.network_id)
  return _internal_network_id();
}
inline void SyncValueResponse::_internal_set_network_id(uint32_t value) {
  _has_bits_[0] |= 0x00000001u;
  network_id_ = value;
}
inline void SyncValueResponse::set_network_id(uint32_t value) {
  _internal_set_network_id(value);
  // @@protoc_insertion_point(field_set:zjchain.sync.protobuf.SyncValueResponse.network_id)
}

// repeated .zjchain.sync.protobuf.SyncResItem res = 2;
inline int SyncValueResponse::_internal_res_size() const {
  return res_.size();
}
inline int SyncValueResponse::res_size() const {
  return _internal_res_size();
}
inline void SyncValueResponse::clear_res() {
  res_.Clear();
}
inline ::zjchain::sync::protobuf::SyncResItem* SyncValueResponse::mutable_res(int index) {
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncValueResponse.res)
  return res_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncResItem >*
SyncValueResponse::mutable_res() {
  // @@protoc_insertion_point(field_mutable_list:zjchain.sync.protobuf.SyncValueResponse.res)
  return &res_;
}
inline const ::zjchain::sync::protobuf::SyncResItem& SyncValueResponse::_internal_res(int index) const {
  return res_.Get(index);
}
inline const ::zjchain::sync::protobuf::SyncResItem& SyncValueResponse::res(int index) const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncValueResponse.res)
  return _internal_res(index);
}
inline ::zjchain::sync::protobuf::SyncResItem* SyncValueResponse::_internal_add_res() {
  return res_.Add();
}
inline ::zjchain::sync::protobuf::SyncResItem* SyncValueResponse::add_res() {
  ::zjchain::sync::protobuf::SyncResItem* _add = _internal_add_res();
  // @@protoc_insertion_point(field_add:zjchain.sync.protobuf.SyncValueResponse.res)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::zjchain::sync::protobuf::SyncResItem >&
SyncValueResponse::res() const {
  // @@protoc_insertion_point(field_list:zjchain.sync.protobuf.SyncValueResponse.res)
  return res_;
}

// -------------------------------------------------------------------

// SyncMessage

// optional .zjchain.sync.protobuf.SyncValueRequest sync_value_req = 1;
inline bool SyncMessage::_internal_has_sync_value_req() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || sync_value_req_ != nullptr);
  return value;
}
inline bool SyncMessage::has_sync_value_req() const {
  return _internal_has_sync_value_req();
}
inline void SyncMessage::clear_sync_value_req() {
  if (sync_value_req_ != nullptr) sync_value_req_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::zjchain::sync::protobuf::SyncValueRequest& SyncMessage::_internal_sync_value_req() const {
  const ::zjchain::sync::protobuf::SyncValueRequest* p = sync_value_req_;
  return p != nullptr ? *p : reinterpret_cast<const ::zjchain::sync::protobuf::SyncValueRequest&>(
      ::zjchain::sync::protobuf::_SyncValueRequest_default_instance_);
}
inline const ::zjchain::sync::protobuf::SyncValueRequest& SyncMessage::sync_value_req() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncMessage.sync_value_req)
  return _internal_sync_value_req();
}
inline void SyncMessage::unsafe_arena_set_allocated_sync_value_req(
    ::zjchain::sync::protobuf::SyncValueRequest* sync_value_req) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sync_value_req_);
  }
  sync_value_req_ = sync_value_req;
  if (sync_value_req) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:zjchain.sync.protobuf.SyncMessage.sync_value_req)
}
inline ::zjchain::sync::protobuf::SyncValueRequest* SyncMessage::release_sync_value_req() {
  _has_bits_[0] &= ~0x00000001u;
  ::zjchain::sync::protobuf::SyncValueRequest* temp = sync_value_req_;
  sync_value_req_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::zjchain::sync::protobuf::SyncValueRequest* SyncMessage::unsafe_arena_release_sync_value_req() {
  // @@protoc_insertion_point(field_release:zjchain.sync.protobuf.SyncMessage.sync_value_req)
  _has_bits_[0] &= ~0x00000001u;
  ::zjchain::sync::protobuf::SyncValueRequest* temp = sync_value_req_;
  sync_value_req_ = nullptr;
  return temp;
}
inline ::zjchain::sync::protobuf::SyncValueRequest* SyncMessage::_internal_mutable_sync_value_req() {
  _has_bits_[0] |= 0x00000001u;
  if (sync_value_req_ == nullptr) {
    auto* p = CreateMaybeMessage<::zjchain::sync::protobuf::SyncValueRequest>(GetArenaForAllocation());
    sync_value_req_ = p;
  }
  return sync_value_req_;
}
inline ::zjchain::sync::protobuf::SyncValueRequest* SyncMessage::mutable_sync_value_req() {
  ::zjchain::sync::protobuf::SyncValueRequest* _msg = _internal_mutable_sync_value_req();
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncMessage.sync_value_req)
  return _msg;
}
inline void SyncMessage::set_allocated_sync_value_req(::zjchain::sync::protobuf::SyncValueRequest* sync_value_req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete sync_value_req_;
  }
  if (sync_value_req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(sync_value_req);
    if (message_arena != submessage_arena) {
      sync_value_req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sync_value_req, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sync_value_req_ = sync_value_req;
  // @@protoc_insertion_point(field_set_allocated:zjchain.sync.protobuf.SyncMessage.sync_value_req)
}

// optional .zjchain.sync.protobuf.SyncValueResponse sync_value_res = 2;
inline bool SyncMessage::_internal_has_sync_value_res() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || sync_value_res_ != nullptr);
  return value;
}
inline bool SyncMessage::has_sync_value_res() const {
  return _internal_has_sync_value_res();
}
inline void SyncMessage::clear_sync_value_res() {
  if (sync_value_res_ != nullptr) sync_value_res_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::zjchain::sync::protobuf::SyncValueResponse& SyncMessage::_internal_sync_value_res() const {
  const ::zjchain::sync::protobuf::SyncValueResponse* p = sync_value_res_;
  return p != nullptr ? *p : reinterpret_cast<const ::zjchain::sync::protobuf::SyncValueResponse&>(
      ::zjchain::sync::protobuf::_SyncValueResponse_default_instance_);
}
inline const ::zjchain::sync::protobuf::SyncValueResponse& SyncMessage::sync_value_res() const {
  // @@protoc_insertion_point(field_get:zjchain.sync.protobuf.SyncMessage.sync_value_res)
  return _internal_sync_value_res();
}
inline void SyncMessage::unsafe_arena_set_allocated_sync_value_res(
    ::zjchain::sync::protobuf::SyncValueResponse* sync_value_res) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sync_value_res_);
  }
  sync_value_res_ = sync_value_res;
  if (sync_value_res) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:zjchain.sync.protobuf.SyncMessage.sync_value_res)
}
inline ::zjchain::sync::protobuf::SyncValueResponse* SyncMessage::release_sync_value_res() {
  _has_bits_[0] &= ~0x00000002u;
  ::zjchain::sync::protobuf::SyncValueResponse* temp = sync_value_res_;
  sync_value_res_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::zjchain::sync::protobuf::SyncValueResponse* SyncMessage::unsafe_arena_release_sync_value_res() {
  // @@protoc_insertion_point(field_release:zjchain.sync.protobuf.SyncMessage.sync_value_res)
  _has_bits_[0] &= ~0x00000002u;
  ::zjchain::sync::protobuf::SyncValueResponse* temp = sync_value_res_;
  sync_value_res_ = nullptr;
  return temp;
}
inline ::zjchain::sync::protobuf::SyncValueResponse* SyncMessage::_internal_mutable_sync_value_res() {
  _has_bits_[0] |= 0x00000002u;
  if (sync_value_res_ == nullptr) {
    auto* p = CreateMaybeMessage<::zjchain::sync::protobuf::SyncValueResponse>(GetArenaForAllocation());
    sync_value_res_ = p;
  }
  return sync_value_res_;
}
inline ::zjchain::sync::protobuf::SyncValueResponse* SyncMessage::mutable_sync_value_res() {
  ::zjchain::sync::protobuf::SyncValueResponse* _msg = _internal_mutable_sync_value_res();
  // @@protoc_insertion_point(field_mutable:zjchain.sync.protobuf.SyncMessage.sync_value_res)
  return _msg;
}
inline void SyncMessage::set_allocated_sync_value_res(::zjchain::sync::protobuf::SyncValueResponse* sync_value_res) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete sync_value_res_;
  }
  if (sync_value_res) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(sync_value_res);
    if (message_arena != submessage_arena) {
      sync_value_res = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sync_value_res, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sync_value_res_ = sync_value_res;
  // @@protoc_insertion_point(field_set_allocated:zjchain.sync.protobuf.SyncMessage.sync_value_res)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace sync
}  // namespace zjchain

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_protos_2fsync_2eproto
