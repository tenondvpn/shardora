// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/address.proto

#ifndef PROTOBUF_INCLUDED_protos_2faddress_2eproto
#define PROTOBUF_INCLUDED_protos_2faddress_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2faddress_2eproto 

namespace protobuf_protos_2faddress_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protos_2faddress_2eproto
namespace zjchain {
namespace address {
namespace protobuf {
class AddressInfo;
class AddressInfoDefaultTypeInternal;
extern AddressInfoDefaultTypeInternal _AddressInfo_default_instance_;
}  // namespace protobuf
}  // namespace address
}  // namespace zjchain
namespace google {
namespace protobuf {
template<> ::zjchain::address::protobuf::AddressInfo* Arena::CreateMaybeMessage<::zjchain::address::protobuf::AddressInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zjchain {
namespace address {
namespace protobuf {

enum AddressType {
  kNormal = 0,
  kContract = 1,
  kRootElect = 2,
  kRootTimer = 3,
  kStatistic = 4,
  kToTxAddress = 5,
  kLocalToTxAddress = 6,
  kElectAddress = 7
};
bool AddressType_IsValid(int value);
const AddressType AddressType_MIN = kNormal;
const AddressType AddressType_MAX = kElectAddress;
const int AddressType_ARRAYSIZE = AddressType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AddressType_descriptor();
inline const ::std::string& AddressType_Name(AddressType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AddressType_descriptor(), value);
}
inline bool AddressType_Parse(
    const ::std::string& name, AddressType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AddressType>(
    AddressType_descriptor(), name, value);
}
// ===================================================================

class AddressInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zjchain.address.protobuf.AddressInfo) */ {
 public:
  AddressInfo();
  virtual ~AddressInfo();

  AddressInfo(const AddressInfo& from);

  inline AddressInfo& operator=(const AddressInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddressInfo(AddressInfo&& from) noexcept
    : AddressInfo() {
    *this = ::std::move(from);
  }

  inline AddressInfo& operator=(AddressInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddressInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddressInfo* internal_default_instance() {
    return reinterpret_cast<const AddressInfo*>(
               &_AddressInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AddressInfo* other);
  friend void swap(AddressInfo& a, AddressInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddressInfo* New() const final {
    return CreateMaybeMessage<AddressInfo>(NULL);
  }

  AddressInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AddressInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AddressInfo& from);
  void MergeFrom(const AddressInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddressInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes pubkey = 1;
  bool has_pubkey() const;
  void clear_pubkey();
  static const int kPubkeyFieldNumber = 1;
  const ::std::string& pubkey() const;
  void set_pubkey(const ::std::string& value);
  #if LANG_CXX11
  void set_pubkey(::std::string&& value);
  #endif
  void set_pubkey(const char* value);
  void set_pubkey(const void* value, size_t size);
  ::std::string* mutable_pubkey();
  ::std::string* release_pubkey();
  void set_allocated_pubkey(::std::string* pubkey);

  // optional bytes addr = 5;
  bool has_addr() const;
  void clear_addr();
  static const int kAddrFieldNumber = 5;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_addr(::std::string&& value);
  #endif
  void set_addr(const char* value);
  void set_addr(const void* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // optional bytes bytes_code = 7;
  bool has_bytes_code() const;
  void clear_bytes_code();
  static const int kBytesCodeFieldNumber = 7;
  const ::std::string& bytes_code() const;
  void set_bytes_code(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes_code(::std::string&& value);
  #endif
  void set_bytes_code(const char* value);
  void set_bytes_code(const void* value, size_t size);
  ::std::string* mutable_bytes_code();
  ::std::string* release_bytes_code();
  void set_allocated_bytes_code(::std::string* bytes_code);

  // optional uint64 balance = 2;
  bool has_balance() const;
  void clear_balance();
  static const int kBalanceFieldNumber = 2;
  ::google::protobuf::uint64 balance() const;
  void set_balance(::google::protobuf::uint64 value);

  // optional uint32 sharding_id = 3;
  bool has_sharding_id() const;
  void clear_sharding_id();
  static const int kShardingIdFieldNumber = 3;
  ::google::protobuf::uint32 sharding_id() const;
  void set_sharding_id(::google::protobuf::uint32 value);

  // optional uint32 pool_index = 4;
  bool has_pool_index() const;
  void clear_pool_index();
  static const int kPoolIndexFieldNumber = 4;
  ::google::protobuf::uint32 pool_index() const;
  void set_pool_index(::google::protobuf::uint32 value);

  // optional .zjchain.address.protobuf.AddressType type = 6;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::zjchain::address::protobuf::AddressType type() const;
  void set_type(::zjchain::address::protobuf::AddressType value);

  // optional int32 credit = 9 [default = 0];
  bool has_credit() const;
  void clear_credit();
  static const int kCreditFieldNumber = 9;
  ::google::protobuf::int32 credit() const;
  void set_credit(::google::protobuf::int32 value);

  // optional uint64 latest_height = 8;
  bool has_latest_height() const;
  void clear_latest_height();
  static const int kLatestHeightFieldNumber = 8;
  ::google::protobuf::uint64 latest_height() const;
  void set_latest_height(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zjchain.address.protobuf.AddressInfo)
 private:
  void set_has_pubkey();
  void clear_has_pubkey();
  void set_has_balance();
  void clear_has_balance();
  void set_has_sharding_id();
  void clear_has_sharding_id();
  void set_has_pool_index();
  void clear_has_pool_index();
  void set_has_addr();
  void clear_has_addr();
  void set_has_type();
  void clear_has_type();
  void set_has_bytes_code();
  void clear_has_bytes_code();
  void set_has_latest_height();
  void clear_has_latest_height();
  void set_has_credit();
  void clear_has_credit();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pubkey_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  ::google::protobuf::internal::ArenaStringPtr bytes_code_;
  ::google::protobuf::uint64 balance_;
  ::google::protobuf::uint32 sharding_id_;
  ::google::protobuf::uint32 pool_index_;
  int type_;
  ::google::protobuf::int32 credit_;
  ::google::protobuf::uint64 latest_height_;
  friend struct ::protobuf_protos_2faddress_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AddressInfo

// optional bytes pubkey = 1;
inline bool AddressInfo::has_pubkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddressInfo::set_has_pubkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddressInfo::clear_has_pubkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddressInfo::clear_pubkey() {
  pubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pubkey();
}
inline const ::std::string& AddressInfo::pubkey() const {
  // @@protoc_insertion_point(field_get:zjchain.address.protobuf.AddressInfo.pubkey)
  return pubkey_.GetNoArena();
}
inline void AddressInfo::set_pubkey(const ::std::string& value) {
  set_has_pubkey();
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.address.protobuf.AddressInfo.pubkey)
}
#if LANG_CXX11
inline void AddressInfo::set_pubkey(::std::string&& value) {
  set_has_pubkey();
  pubkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.address.protobuf.AddressInfo.pubkey)
}
#endif
inline void AddressInfo::set_pubkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pubkey();
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.address.protobuf.AddressInfo.pubkey)
}
inline void AddressInfo::set_pubkey(const void* value, size_t size) {
  set_has_pubkey();
  pubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.address.protobuf.AddressInfo.pubkey)
}
inline ::std::string* AddressInfo::mutable_pubkey() {
  set_has_pubkey();
  // @@protoc_insertion_point(field_mutable:zjchain.address.protobuf.AddressInfo.pubkey)
  return pubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressInfo::release_pubkey() {
  // @@protoc_insertion_point(field_release:zjchain.address.protobuf.AddressInfo.pubkey)
  if (!has_pubkey()) {
    return NULL;
  }
  clear_has_pubkey();
  return pubkey_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressInfo::set_allocated_pubkey(::std::string* pubkey) {
  if (pubkey != NULL) {
    set_has_pubkey();
  } else {
    clear_has_pubkey();
  }
  pubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pubkey);
  // @@protoc_insertion_point(field_set_allocated:zjchain.address.protobuf.AddressInfo.pubkey)
}

// optional uint64 balance = 2;
inline bool AddressInfo::has_balance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddressInfo::set_has_balance() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddressInfo::clear_has_balance() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddressInfo::clear_balance() {
  balance_ = GOOGLE_ULONGLONG(0);
  clear_has_balance();
}
inline ::google::protobuf::uint64 AddressInfo::balance() const {
  // @@protoc_insertion_point(field_get:zjchain.address.protobuf.AddressInfo.balance)
  return balance_;
}
inline void AddressInfo::set_balance(::google::protobuf::uint64 value) {
  set_has_balance();
  balance_ = value;
  // @@protoc_insertion_point(field_set:zjchain.address.protobuf.AddressInfo.balance)
}

// optional uint32 sharding_id = 3;
inline bool AddressInfo::has_sharding_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddressInfo::set_has_sharding_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddressInfo::clear_has_sharding_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddressInfo::clear_sharding_id() {
  sharding_id_ = 0u;
  clear_has_sharding_id();
}
inline ::google::protobuf::uint32 AddressInfo::sharding_id() const {
  // @@protoc_insertion_point(field_get:zjchain.address.protobuf.AddressInfo.sharding_id)
  return sharding_id_;
}
inline void AddressInfo::set_sharding_id(::google::protobuf::uint32 value) {
  set_has_sharding_id();
  sharding_id_ = value;
  // @@protoc_insertion_point(field_set:zjchain.address.protobuf.AddressInfo.sharding_id)
}

// optional uint32 pool_index = 4;
inline bool AddressInfo::has_pool_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AddressInfo::set_has_pool_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AddressInfo::clear_has_pool_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AddressInfo::clear_pool_index() {
  pool_index_ = 0u;
  clear_has_pool_index();
}
inline ::google::protobuf::uint32 AddressInfo::pool_index() const {
  // @@protoc_insertion_point(field_get:zjchain.address.protobuf.AddressInfo.pool_index)
  return pool_index_;
}
inline void AddressInfo::set_pool_index(::google::protobuf::uint32 value) {
  set_has_pool_index();
  pool_index_ = value;
  // @@protoc_insertion_point(field_set:zjchain.address.protobuf.AddressInfo.pool_index)
}

// optional bytes addr = 5;
inline bool AddressInfo::has_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddressInfo::set_has_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddressInfo::clear_has_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddressInfo::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
inline const ::std::string& AddressInfo::addr() const {
  // @@protoc_insertion_point(field_get:zjchain.address.protobuf.AddressInfo.addr)
  return addr_.GetNoArena();
}
inline void AddressInfo::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.address.protobuf.AddressInfo.addr)
}
#if LANG_CXX11
inline void AddressInfo::set_addr(::std::string&& value) {
  set_has_addr();
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.address.protobuf.AddressInfo.addr)
}
#endif
inline void AddressInfo::set_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.address.protobuf.AddressInfo.addr)
}
inline void AddressInfo::set_addr(const void* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.address.protobuf.AddressInfo.addr)
}
inline ::std::string* AddressInfo::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:zjchain.address.protobuf.AddressInfo.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressInfo::release_addr() {
  // @@protoc_insertion_point(field_release:zjchain.address.protobuf.AddressInfo.addr)
  if (!has_addr()) {
    return NULL;
  }
  clear_has_addr();
  return addr_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressInfo::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:zjchain.address.protobuf.AddressInfo.addr)
}

// optional .zjchain.address.protobuf.AddressType type = 6;
inline bool AddressInfo::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AddressInfo::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AddressInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AddressInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::zjchain::address::protobuf::AddressType AddressInfo::type() const {
  // @@protoc_insertion_point(field_get:zjchain.address.protobuf.AddressInfo.type)
  return static_cast< ::zjchain::address::protobuf::AddressType >(type_);
}
inline void AddressInfo::set_type(::zjchain::address::protobuf::AddressType value) {
  assert(::zjchain::address::protobuf::AddressType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:zjchain.address.protobuf.AddressInfo.type)
}

// optional bytes bytes_code = 7;
inline bool AddressInfo::has_bytes_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddressInfo::set_has_bytes_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddressInfo::clear_has_bytes_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddressInfo::clear_bytes_code() {
  bytes_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bytes_code();
}
inline const ::std::string& AddressInfo::bytes_code() const {
  // @@protoc_insertion_point(field_get:zjchain.address.protobuf.AddressInfo.bytes_code)
  return bytes_code_.GetNoArena();
}
inline void AddressInfo::set_bytes_code(const ::std::string& value) {
  set_has_bytes_code();
  bytes_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zjchain.address.protobuf.AddressInfo.bytes_code)
}
#if LANG_CXX11
inline void AddressInfo::set_bytes_code(::std::string&& value) {
  set_has_bytes_code();
  bytes_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zjchain.address.protobuf.AddressInfo.bytes_code)
}
#endif
inline void AddressInfo::set_bytes_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bytes_code();
  bytes_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zjchain.address.protobuf.AddressInfo.bytes_code)
}
inline void AddressInfo::set_bytes_code(const void* value, size_t size) {
  set_has_bytes_code();
  bytes_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zjchain.address.protobuf.AddressInfo.bytes_code)
}
inline ::std::string* AddressInfo::mutable_bytes_code() {
  set_has_bytes_code();
  // @@protoc_insertion_point(field_mutable:zjchain.address.protobuf.AddressInfo.bytes_code)
  return bytes_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressInfo::release_bytes_code() {
  // @@protoc_insertion_point(field_release:zjchain.address.protobuf.AddressInfo.bytes_code)
  if (!has_bytes_code()) {
    return NULL;
  }
  clear_has_bytes_code();
  return bytes_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressInfo::set_allocated_bytes_code(::std::string* bytes_code) {
  if (bytes_code != NULL) {
    set_has_bytes_code();
  } else {
    clear_has_bytes_code();
  }
  bytes_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes_code);
  // @@protoc_insertion_point(field_set_allocated:zjchain.address.protobuf.AddressInfo.bytes_code)
}

// optional uint64 latest_height = 8;
inline bool AddressInfo::has_latest_height() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AddressInfo::set_has_latest_height() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AddressInfo::clear_has_latest_height() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AddressInfo::clear_latest_height() {
  latest_height_ = GOOGLE_ULONGLONG(0);
  clear_has_latest_height();
}
inline ::google::protobuf::uint64 AddressInfo::latest_height() const {
  // @@protoc_insertion_point(field_get:zjchain.address.protobuf.AddressInfo.latest_height)
  return latest_height_;
}
inline void AddressInfo::set_latest_height(::google::protobuf::uint64 value) {
  set_has_latest_height();
  latest_height_ = value;
  // @@protoc_insertion_point(field_set:zjchain.address.protobuf.AddressInfo.latest_height)
}

// optional int32 credit = 9 [default = 0];
inline bool AddressInfo::has_credit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AddressInfo::set_has_credit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AddressInfo::clear_has_credit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AddressInfo::clear_credit() {
  credit_ = 0;
  clear_has_credit();
}
inline ::google::protobuf::int32 AddressInfo::credit() const {
  // @@protoc_insertion_point(field_get:zjchain.address.protobuf.AddressInfo.credit)
  return credit_;
}
inline void AddressInfo::set_credit(::google::protobuf::int32 value) {
  set_has_credit();
  credit_ = value;
  // @@protoc_insertion_point(field_set:zjchain.address.protobuf.AddressInfo.credit)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace address
}  // namespace zjchain

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zjchain::address::protobuf::AddressType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zjchain::address::protobuf::AddressType>() {
  return ::zjchain::address::protobuf::AddressType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protos_2faddress_2eproto
