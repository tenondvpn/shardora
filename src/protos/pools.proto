syntax = "proto2";

package zjchain.pools.protobuf;

enum StepType {
    kNormalFrom = 0;
    kNormalTo = 1;
    kContractUserCall = 2;
    kContractCallExcute = 3;
    kContractBroadcast = 4;
    kConsensusRootElectShard = 5;  // shard consensus network election
    kConsensusRootTimeBlock = 6;  // create time block
    kConsensusFinalStatistic = 7;  // create shard time block's final statistic block
    kConsensusCreateGenesisAcount = 8;
    kConsensusLocalTos = 9;
}

message ToTxHeights {
    optional uint32 sharding_id = 1;
    repeated uint64 heights = 2;
    optional uint64 block_height = 3;
    optional bytes tos_hash = 4;
    optional bytes leader_id = 5;
    optional uint64 elelct_height = 6;
    optional uint32 tx_count = 7;
}

message ToTxMessageItem {
    optional bytes des = 1;
    optional uint64 amount = 2;
    optional uint32 sharding_id = 3;  // for root to diplacement shard and pool
    optional uint32 pool_index = 4;
}

message ToTxMessage {
    optional bytes heights_hash = 1;
    repeated ToTxMessageItem tos = 2;
    optional ToTxHeights to_heights = 3;
}

message PoolLatestInfo {
    optional uint64 height = 1;
    optional bytes hash = 2;
    optional uint64 synced_height = 3;
}

message TxMessage {
    optional uint32 version = 1;
    optional bytes gid = 2;
    optional bytes pubkey = 3;
    optional uint64 gas_limit = 4;
    optional uint64 gas_price = 5;
    optional bytes key = 6;
    optional bytes value = 7;
    optional bytes to = 8;
    optional uint64 amount = 9;
    optional StepType step = 10 [default=kNormalFrom];
}
