// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/zbft.proto

#include "protos/zbft.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protos_2fblock_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_Block;
}  // namespace protobuf_protos_2fblock_2eproto
namespace protobuf_protos_2fpools_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fpools_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TxMessage;
}  // namespace protobuf_protos_2fpools_2eproto
namespace protobuf_protos_2fzbft_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fzbft_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TxKeyValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fzbft_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_TxBft;
}  // namespace protobuf_protos_2fzbft_2eproto
namespace shardora {
namespace zbft {
namespace protobuf {
class TxKeyValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxKeyValue>
      _instance;
} _TxKeyValue_default_instance_;
class TxBftDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxBft>
      _instance;
} _TxBft_default_instance_;
class ZbftMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ZbftMessage>
      _instance;
} _ZbftMessage_default_instance_;
}  // namespace protobuf
}  // namespace zbft
}  // namespace shardora
namespace protobuf_protos_2fzbft_2eproto {
static void InitDefaultsTxKeyValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::zbft::protobuf::_TxKeyValue_default_instance_;
    new (ptr) ::shardora::zbft::protobuf::TxKeyValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::zbft::protobuf::TxKeyValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TxKeyValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTxKeyValue}, {}};

static void InitDefaultsTxBft() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::zbft::protobuf::_TxBft_default_instance_;
    new (ptr) ::shardora::zbft::protobuf::TxBft();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::zbft::protobuf::TxBft::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TxBft =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTxBft}, {
      &protobuf_protos_2fblock_2eproto::scc_info_Block.base,
      &protobuf_protos_2fpools_2eproto::scc_info_TxMessage.base,
      &protobuf_protos_2fzbft_2eproto::scc_info_TxKeyValue.base,}};

static void InitDefaultsZbftMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::zbft::protobuf::_ZbftMessage_default_instance_;
    new (ptr) ::shardora::zbft::protobuf::ZbftMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::zbft::protobuf::ZbftMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ZbftMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsZbftMessage}, {
      &protobuf_protos_2fzbft_2eproto::scc_info_TxBft.base,
      &protobuf_protos_2fblock_2eproto::scc_info_Block.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TxKeyValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TxBft.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ZbftMessage.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxKeyValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxKeyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxKeyValue, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxKeyValue, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxBft, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxBft, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxBft, block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxBft, prepare_final_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxBft, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxBft, tx_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxBft, time_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxBft, txs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::TxBft, kvs_),
  1,
  0,
  2,
  4,
  3,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, prepare_gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, precommit_gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, commit_gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, leader_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, net_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, agree_precommit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, agree_commit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, pool_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, tx_bft_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, member_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, backup_enc_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, elect_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, bls_sign_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, bls_sign_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, prepare_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, prepare_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, sync_block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, ips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, oppose_prepare_gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, invaid_txs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::zbft::protobuf::ZbftMessage, bft_timeout_),
  0,
  1,
  2,
  19,
  10,
  14,
  15,
  20,
  11,
  8,
  13,
  3,
  12,
  4,
  5,
  18,
  6,
  9,
  16,
  ~0u,
  7,
  ~0u,
  17,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::shardora::zbft::protobuf::TxKeyValue)},
  { 9, 21, sizeof(::shardora::zbft::protobuf::TxBft)},
  { 28, 56, sizeof(::shardora::zbft::protobuf::ZbftMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::zbft::protobuf::_TxKeyValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::zbft::protobuf::_TxBft_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::zbft::protobuf::_ZbftMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protos/zbft.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021protos/zbft.proto\022\026shardora.zbft.proto"
      "buf\032\022protos/block.proto\032\022protos/pools.pr"
      "oto\"(\n\nTxKeyValue\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030"
      "\002 \001(\014\"\231\002\n\005TxBft\022-\n\005block\030\001 \001(\0132\036.shardor"
      "a.block.protobuf.Block\022\032\n\022prepare_final_"
      "hash\030\002 \001(\014\022\016\n\006height\030\003 \001(\004\022\?\n\007tx_type\030\004 "
      "\001(\0162!.shardora.pools.protobuf.StepType:\013"
      "kNormalFrom\022\022\n\ntime_stamp\030\005 \001(\004\022/\n\003txs\030\006"
      " \003(\0132\".shardora.pools.protobuf.TxMessage"
      "\022/\n\003kvs\030\007 \003(\0132\".shardora.zbft.protobuf.T"
      "xKeyValue\"\300\004\n\013ZbftMessage\022\023\n\013prepare_gid"
      "\030\001 \001(\014\022\025\n\rprecommit_gid\030\002 \001(\014\022\022\n\ncommit_"
      "gid\030\003 \001(\014\022\026\n\nleader_idx\030\004 \001(\005:\002-1\022\016\n\006net"
      "_id\030\005 \001(\r\022\036\n\017agree_precommit\030\006 \001(\010:\005fals"
      "e\022\033\n\014agree_commit\030\007 \001(\010:\005false\022\036\n\npool_i"
      "ndex\030\010 \001(\r:\n4294967295\022\r\n\005error\030\t \001(\005\022-\n"
      "\006tx_bft\030\n \001(\0132\035.shardora.zbft.protobuf.T"
      "xBft\022\024\n\014member_index\030\013 \001(\r\022\027\n\017backup_enc"
      "_data\030\014 \001(\014\022\024\n\014elect_height\030\r \001(\004\022\022\n\nbls"
      "_sign_x\030\016 \001(\014\022\022\n\nbls_sign_y\030\017 \001(\014\022\026\n\016pre"
      "pare_height\030\020 \001(\004\022\024\n\014prepare_hash\030\021 \001(\014\022"
      "-\n\005block\030\022 \001(\0132\036.shardora.block.protobuf"
      ".Block\022\022\n\nsync_block\030\023 \001(\010\022\013\n\003ips\030\024 \003(\r\022"
      "\032\n\022oppose_prepare_gid\030\025 \001(\014\022\022\n\ninvaid_tx"
      "s\030\026 \003(\r\022\023\n\013bft_timeout\030\027 \001(\010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 988);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protos/zbft.proto", &protobuf_RegisterTypes);
  ::protobuf_protos_2fblock_2eproto::AddDescriptors();
  ::protobuf_protos_2fpools_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protos_2fzbft_2eproto
namespace shardora {
namespace zbft {
namespace protobuf {

// ===================================================================

void TxKeyValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxKeyValue::kKeyFieldNumber;
const int TxKeyValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxKeyValue::TxKeyValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fzbft_2eproto::scc_info_TxKeyValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.zbft.protobuf.TxKeyValue)
}
TxKeyValue::TxKeyValue(const TxKeyValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:shardora.zbft.protobuf.TxKeyValue)
}

void TxKeyValue::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TxKeyValue::~TxKeyValue() {
  // @@protoc_insertion_point(destructor:shardora.zbft.protobuf.TxKeyValue)
  SharedDtor();
}

void TxKeyValue::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TxKeyValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TxKeyValue::descriptor() {
  ::protobuf_protos_2fzbft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fzbft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxKeyValue& TxKeyValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fzbft_2eproto::scc_info_TxKeyValue.base);
  return *internal_default_instance();
}


void TxKeyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.zbft.protobuf.TxKeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxKeyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.zbft.protobuf.TxKeyValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.zbft.protobuf.TxKeyValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.zbft.protobuf.TxKeyValue)
  return false;
#undef DO_
}

void TxKeyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.zbft.protobuf.TxKeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.zbft.protobuf.TxKeyValue)
}

::google::protobuf::uint8* TxKeyValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.zbft.protobuf.TxKeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.zbft.protobuf.TxKeyValue)
  return target;
}

size_t TxKeyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.zbft.protobuf.TxKeyValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TxKeyValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.zbft.protobuf.TxKeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  const TxKeyValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxKeyValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.zbft.protobuf.TxKeyValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.zbft.protobuf.TxKeyValue)
    MergeFrom(*source);
  }
}

void TxKeyValue::MergeFrom(const TxKeyValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.zbft.protobuf.TxKeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void TxKeyValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.zbft.protobuf.TxKeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxKeyValue::CopyFrom(const TxKeyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.zbft.protobuf.TxKeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxKeyValue::IsInitialized() const {
  return true;
}

void TxKeyValue::Swap(TxKeyValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxKeyValue::InternalSwap(TxKeyValue* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TxKeyValue::GetMetadata() const {
  protobuf_protos_2fzbft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fzbft_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TxBft::InitAsDefaultInstance() {
  ::shardora::zbft::protobuf::_TxBft_default_instance_._instance.get_mutable()->block_ = const_cast< ::shardora::block::protobuf::Block*>(
      ::shardora::block::protobuf::Block::internal_default_instance());
}
void TxBft::clear_block() {
  if (block_ != NULL) block_->Clear();
  clear_has_block();
}
void TxBft::clear_txs() {
  txs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxBft::kBlockFieldNumber;
const int TxBft::kPrepareFinalHashFieldNumber;
const int TxBft::kHeightFieldNumber;
const int TxBft::kTxTypeFieldNumber;
const int TxBft::kTimeStampFieldNumber;
const int TxBft::kTxsFieldNumber;
const int TxBft::kKvsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxBft::TxBft()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fzbft_2eproto::scc_info_TxBft.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.zbft.protobuf.TxBft)
}
TxBft::TxBft(const TxBft& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      txs_(from.txs_),
      kvs_(from.kvs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prepare_final_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prepare_final_hash()) {
    prepare_final_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prepare_final_hash_);
  }
  if (from.has_block()) {
    block_ = new ::shardora::block::protobuf::Block(*from.block_);
  } else {
    block_ = NULL;
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&tx_type_) -
    reinterpret_cast<char*>(&height_)) + sizeof(tx_type_));
  // @@protoc_insertion_point(copy_constructor:shardora.zbft.protobuf.TxBft)
}

void TxBft::SharedCtor() {
  prepare_final_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tx_type_) -
      reinterpret_cast<char*>(&block_)) + sizeof(tx_type_));
}

TxBft::~TxBft() {
  // @@protoc_insertion_point(destructor:shardora.zbft.protobuf.TxBft)
  SharedDtor();
}

void TxBft::SharedDtor() {
  prepare_final_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete block_;
}

void TxBft::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TxBft::descriptor() {
  ::protobuf_protos_2fzbft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fzbft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxBft& TxBft::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fzbft_2eproto::scc_info_TxBft.base);
  return *internal_default_instance();
}


void TxBft::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.zbft.protobuf.TxBft)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txs_.Clear();
  kvs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      prepare_final_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(block_ != NULL);
      block_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tx_type_) -
        reinterpret_cast<char*>(&height_)) + sizeof(tx_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxBft::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.zbft.protobuf.TxBft)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .shardora.block.protobuf.Block block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prepare_final_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prepare_final_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.pools.protobuf.StepType tx_type = 4 [default = kNormalFrom];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::shardora::pools::protobuf::StepType_IsValid(value)) {
            set_tx_type(static_cast< ::shardora::pools::protobuf::StepType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 time_stamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_time_stamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .shardora.pools.protobuf.TxMessage txs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_txs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .shardora.zbft.protobuf.TxKeyValue kvs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_kvs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.zbft.protobuf.TxBft)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.zbft.protobuf.TxBft)
  return false;
#undef DO_
}

void TxBft::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.zbft.protobuf.TxBft)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.block.protobuf.Block block = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_block(), output);
  }

  // optional bytes prepare_final_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->prepare_final_hash(), output);
  }

  // optional uint64 height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->height(), output);
  }

  // optional .shardora.pools.protobuf.StepType tx_type = 4 [default = kNormalFrom];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->tx_type(), output);
  }

  // optional uint64 time_stamp = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->time_stamp(), output);
  }

  // repeated .shardora.pools.protobuf.TxMessage txs = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->txs(static_cast<int>(i)),
      output);
  }

  // repeated .shardora.zbft.protobuf.TxKeyValue kvs = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->kvs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.zbft.protobuf.TxBft)
}

::google::protobuf::uint8* TxBft::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.zbft.protobuf.TxBft)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.block.protobuf.Block block = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_block(), deterministic, target);
  }

  // optional bytes prepare_final_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->prepare_final_hash(), target);
  }

  // optional uint64 height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->height(), target);
  }

  // optional .shardora.pools.protobuf.StepType tx_type = 4 [default = kNormalFrom];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->tx_type(), target);
  }

  // optional uint64 time_stamp = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->time_stamp(), target);
  }

  // repeated .shardora.pools.protobuf.TxMessage txs = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->txs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .shardora.zbft.protobuf.TxKeyValue kvs = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->kvs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.zbft.protobuf.TxBft)
  return target;
}

size_t TxBft::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.zbft.protobuf.TxBft)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.pools.protobuf.TxMessage txs = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->txs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->txs(static_cast<int>(i)));
    }
  }

  // repeated .shardora.zbft.protobuf.TxKeyValue kvs = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->kvs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->kvs(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes prepare_final_hash = 2;
    if (has_prepare_final_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prepare_final_hash());
    }

    // optional .shardora.block.protobuf.Block block = 1;
    if (has_block()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *block_);
    }

    // optional uint64 height = 3;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->height());
    }

    // optional uint64 time_stamp = 5;
    if (has_time_stamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time_stamp());
    }

    // optional .shardora.pools.protobuf.StepType tx_type = 4 [default = kNormalFrom];
    if (has_tx_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->tx_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TxBft::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.zbft.protobuf.TxBft)
  GOOGLE_DCHECK_NE(&from, this);
  const TxBft* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxBft>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.zbft.protobuf.TxBft)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.zbft.protobuf.TxBft)
    MergeFrom(*source);
  }
}

void TxBft::MergeFrom(const TxBft& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.zbft.protobuf.TxBft)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  txs_.MergeFrom(from.txs_);
  kvs_.MergeFrom(from.kvs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_prepare_final_hash();
      prepare_final_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prepare_final_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_block()->::shardora::block::protobuf::Block::MergeFrom(from.block());
    }
    if (cached_has_bits & 0x00000004u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_stamp_ = from.time_stamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      tx_type_ = from.tx_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TxBft::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.zbft.protobuf.TxBft)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxBft::CopyFrom(const TxBft& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.zbft.protobuf.TxBft)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxBft::IsInitialized() const {
  if (has_block()) {
    if (!this->block_->IsInitialized()) return false;
  }
  return true;
}

void TxBft::Swap(TxBft* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxBft::InternalSwap(TxBft* other) {
  using std::swap;
  CastToBase(&txs_)->InternalSwap(CastToBase(&other->txs_));
  CastToBase(&kvs_)->InternalSwap(CastToBase(&other->kvs_));
  prepare_final_hash_.Swap(&other->prepare_final_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(block_, other->block_);
  swap(height_, other->height_);
  swap(time_stamp_, other->time_stamp_);
  swap(tx_type_, other->tx_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TxBft::GetMetadata() const {
  protobuf_protos_2fzbft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fzbft_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ZbftMessage::InitAsDefaultInstance() {
  ::shardora::zbft::protobuf::_ZbftMessage_default_instance_._instance.get_mutable()->tx_bft_ = const_cast< ::shardora::zbft::protobuf::TxBft*>(
      ::shardora::zbft::protobuf::TxBft::internal_default_instance());
  ::shardora::zbft::protobuf::_ZbftMessage_default_instance_._instance.get_mutable()->block_ = const_cast< ::shardora::block::protobuf::Block*>(
      ::shardora::block::protobuf::Block::internal_default_instance());
}
void ZbftMessage::clear_block() {
  if (block_ != NULL) block_->Clear();
  clear_has_block();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZbftMessage::kPrepareGidFieldNumber;
const int ZbftMessage::kPrecommitGidFieldNumber;
const int ZbftMessage::kCommitGidFieldNumber;
const int ZbftMessage::kLeaderIdxFieldNumber;
const int ZbftMessage::kNetIdFieldNumber;
const int ZbftMessage::kAgreePrecommitFieldNumber;
const int ZbftMessage::kAgreeCommitFieldNumber;
const int ZbftMessage::kPoolIndexFieldNumber;
const int ZbftMessage::kErrorFieldNumber;
const int ZbftMessage::kTxBftFieldNumber;
const int ZbftMessage::kMemberIndexFieldNumber;
const int ZbftMessage::kBackupEncDataFieldNumber;
const int ZbftMessage::kElectHeightFieldNumber;
const int ZbftMessage::kBlsSignXFieldNumber;
const int ZbftMessage::kBlsSignYFieldNumber;
const int ZbftMessage::kPrepareHeightFieldNumber;
const int ZbftMessage::kPrepareHashFieldNumber;
const int ZbftMessage::kBlockFieldNumber;
const int ZbftMessage::kSyncBlockFieldNumber;
const int ZbftMessage::kIpsFieldNumber;
const int ZbftMessage::kOpposePrepareGidFieldNumber;
const int ZbftMessage::kInvaidTxsFieldNumber;
const int ZbftMessage::kBftTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZbftMessage::ZbftMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fzbft_2eproto::scc_info_ZbftMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.zbft.protobuf.ZbftMessage)
}
ZbftMessage::ZbftMessage(const ZbftMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      ips_(from.ips_),
      invaid_txs_(from.invaid_txs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prepare_gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prepare_gid()) {
    prepare_gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prepare_gid_);
  }
  precommit_gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_precommit_gid()) {
    precommit_gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.precommit_gid_);
  }
  commit_gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_commit_gid()) {
    commit_gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commit_gid_);
  }
  backup_enc_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_backup_enc_data()) {
    backup_enc_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.backup_enc_data_);
  }
  bls_sign_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bls_sign_x()) {
    bls_sign_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bls_sign_x_);
  }
  bls_sign_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bls_sign_y()) {
    bls_sign_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bls_sign_y_);
  }
  prepare_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prepare_hash()) {
    prepare_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prepare_hash_);
  }
  oppose_prepare_gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_oppose_prepare_gid()) {
    oppose_prepare_gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oppose_prepare_gid_);
  }
  if (from.has_tx_bft()) {
    tx_bft_ = new ::shardora::zbft::protobuf::TxBft(*from.tx_bft_);
  } else {
    tx_bft_ = NULL;
  }
  if (from.has_block()) {
    block_ = new ::shardora::block::protobuf::Block(*from.block_);
  } else {
    block_ = NULL;
  }
  ::memcpy(&net_id_, &from.net_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&pool_index_) -
    reinterpret_cast<char*>(&net_id_)) + sizeof(pool_index_));
  // @@protoc_insertion_point(copy_constructor:shardora.zbft.protobuf.ZbftMessage)
}

void ZbftMessage::SharedCtor() {
  prepare_gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  precommit_gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commit_gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  backup_enc_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bls_sign_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bls_sign_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prepare_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oppose_prepare_gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tx_bft_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prepare_height_) -
      reinterpret_cast<char*>(&tx_bft_)) + sizeof(prepare_height_));
  leader_idx_ = -1;
  pool_index_ = 4294967295u;
}

ZbftMessage::~ZbftMessage() {
  // @@protoc_insertion_point(destructor:shardora.zbft.protobuf.ZbftMessage)
  SharedDtor();
}

void ZbftMessage::SharedDtor() {
  prepare_gid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  precommit_gid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commit_gid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  backup_enc_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bls_sign_x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bls_sign_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prepare_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oppose_prepare_gid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tx_bft_;
  if (this != internal_default_instance()) delete block_;
}

void ZbftMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ZbftMessage::descriptor() {
  ::protobuf_protos_2fzbft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fzbft_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZbftMessage& ZbftMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fzbft_2eproto::scc_info_ZbftMessage.base);
  return *internal_default_instance();
}


void ZbftMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.zbft.protobuf.ZbftMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ips_.Clear();
  invaid_txs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      prepare_gid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      precommit_gid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      commit_gid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      backup_enc_data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      bls_sign_x_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      bls_sign_y_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      prepare_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      oppose_prepare_gid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(tx_bft_ != NULL);
      tx_bft_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(block_ != NULL);
      block_->Clear();
    }
  }
  if (cached_has_bits & 64512u) {
    ::memset(&net_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&agree_commit_) -
        reinterpret_cast<char*>(&net_id_)) + sizeof(agree_commit_));
  }
  if (cached_has_bits & 2031616u) {
    ::memset(&sync_block_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&prepare_height_) -
        reinterpret_cast<char*>(&sync_block_)) + sizeof(prepare_height_));
    leader_idx_ = -1;
    pool_index_ = 4294967295u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ZbftMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.zbft.protobuf.ZbftMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes prepare_gid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prepare_gid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes precommit_gid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_precommit_gid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes commit_gid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_commit_gid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 leader_idx = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_leader_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 net_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_net_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &net_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool agree_precommit = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_agree_precommit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &agree_precommit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool agree_commit = 7 [default = false];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_agree_commit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &agree_commit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pool_index = 8 [default = 4294967295];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_pool_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pool_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 error = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.zbft.protobuf.TxBft tx_bft = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tx_bft()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 member_index = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_member_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &member_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes backup_enc_data = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_backup_enc_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 elect_height = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_elect_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elect_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bls_sign_x = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bls_sign_x()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bls_sign_y = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bls_sign_y()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 prepare_height = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_prepare_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &prepare_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prepare_hash = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prepare_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.Block block = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool sync_block = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_sync_block();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sync_block_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 ips = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 160u, input, this->mutable_ips())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ips())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes oppose_prepare_gid = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oppose_prepare_gid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 invaid_txs = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 176u, input, this->mutable_invaid_txs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_invaid_txs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bft_timeout = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_bft_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bft_timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.zbft.protobuf.ZbftMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.zbft.protobuf.ZbftMessage)
  return false;
#undef DO_
}

void ZbftMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.zbft.protobuf.ZbftMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes prepare_gid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->prepare_gid(), output);
  }

  // optional bytes precommit_gid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->precommit_gid(), output);
  }

  // optional bytes commit_gid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->commit_gid(), output);
  }

  // optional int32 leader_idx = 4 [default = -1];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->leader_idx(), output);
  }

  // optional uint32 net_id = 5;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->net_id(), output);
  }

  // optional bool agree_precommit = 6 [default = false];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->agree_precommit(), output);
  }

  // optional bool agree_commit = 7 [default = false];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->agree_commit(), output);
  }

  // optional uint32 pool_index = 8 [default = 4294967295];
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->pool_index(), output);
  }

  // optional int32 error = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->error(), output);
  }

  // optional .shardora.zbft.protobuf.TxBft tx_bft = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_tx_bft(), output);
  }

  // optional uint32 member_index = 11;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->member_index(), output);
  }

  // optional bytes backup_enc_data = 12;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->backup_enc_data(), output);
  }

  // optional uint64 elect_height = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->elect_height(), output);
  }

  // optional bytes bls_sign_x = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->bls_sign_x(), output);
  }

  // optional bytes bls_sign_y = 15;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->bls_sign_y(), output);
  }

  // optional uint64 prepare_height = 16;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->prepare_height(), output);
  }

  // optional bytes prepare_hash = 17;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      17, this->prepare_hash(), output);
  }

  // optional .shardora.block.protobuf.Block block = 18;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_block(), output);
  }

  // optional bool sync_block = 19;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->sync_block(), output);
  }

  // repeated uint32 ips = 20;
  for (int i = 0, n = this->ips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      20, this->ips(i), output);
  }

  // optional bytes oppose_prepare_gid = 21;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      21, this->oppose_prepare_gid(), output);
  }

  // repeated uint32 invaid_txs = 22;
  for (int i = 0, n = this->invaid_txs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      22, this->invaid_txs(i), output);
  }

  // optional bool bft_timeout = 23;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->bft_timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.zbft.protobuf.ZbftMessage)
}

::google::protobuf::uint8* ZbftMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.zbft.protobuf.ZbftMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes prepare_gid = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->prepare_gid(), target);
  }

  // optional bytes precommit_gid = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->precommit_gid(), target);
  }

  // optional bytes commit_gid = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->commit_gid(), target);
  }

  // optional int32 leader_idx = 4 [default = -1];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->leader_idx(), target);
  }

  // optional uint32 net_id = 5;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->net_id(), target);
  }

  // optional bool agree_precommit = 6 [default = false];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->agree_precommit(), target);
  }

  // optional bool agree_commit = 7 [default = false];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->agree_commit(), target);
  }

  // optional uint32 pool_index = 8 [default = 4294967295];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->pool_index(), target);
  }

  // optional int32 error = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->error(), target);
  }

  // optional .shardora.zbft.protobuf.TxBft tx_bft = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_tx_bft(), deterministic, target);
  }

  // optional uint32 member_index = 11;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->member_index(), target);
  }

  // optional bytes backup_enc_data = 12;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->backup_enc_data(), target);
  }

  // optional uint64 elect_height = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->elect_height(), target);
  }

  // optional bytes bls_sign_x = 14;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->bls_sign_x(), target);
  }

  // optional bytes bls_sign_y = 15;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->bls_sign_y(), target);
  }

  // optional uint64 prepare_height = 16;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->prepare_height(), target);
  }

  // optional bytes prepare_hash = 17;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        17, this->prepare_hash(), target);
  }

  // optional .shardora.block.protobuf.Block block = 18;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_block(), deterministic, target);
  }

  // optional bool sync_block = 19;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->sync_block(), target);
  }

  // repeated uint32 ips = 20;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(20, this->ips_, target);

  // optional bytes oppose_prepare_gid = 21;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        21, this->oppose_prepare_gid(), target);
  }

  // repeated uint32 invaid_txs = 22;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(22, this->invaid_txs_, target);

  // optional bool bft_timeout = 23;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->bft_timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.zbft.protobuf.ZbftMessage)
  return target;
}

size_t ZbftMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.zbft.protobuf.ZbftMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 ips = 20;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->ips_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->ips_size());
    total_size += data_size;
  }

  // repeated uint32 invaid_txs = 22;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->invaid_txs_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->invaid_txs_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes prepare_gid = 1;
    if (has_prepare_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prepare_gid());
    }

    // optional bytes precommit_gid = 2;
    if (has_precommit_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->precommit_gid());
    }

    // optional bytes commit_gid = 3;
    if (has_commit_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->commit_gid());
    }

    // optional bytes backup_enc_data = 12;
    if (has_backup_enc_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->backup_enc_data());
    }

    // optional bytes bls_sign_x = 14;
    if (has_bls_sign_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bls_sign_x());
    }

    // optional bytes bls_sign_y = 15;
    if (has_bls_sign_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bls_sign_y());
    }

    // optional bytes prepare_hash = 17;
    if (has_prepare_hash()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prepare_hash());
    }

    // optional bytes oppose_prepare_gid = 21;
    if (has_oppose_prepare_gid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->oppose_prepare_gid());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .shardora.zbft.protobuf.TxBft tx_bft = 10;
    if (has_tx_bft()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *tx_bft_);
    }

    // optional .shardora.block.protobuf.Block block = 18;
    if (has_block()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *block_);
    }

    // optional uint32 net_id = 5;
    if (has_net_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->net_id());
    }

    // optional int32 error = 9;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->error());
    }

    // optional uint64 elect_height = 13;
    if (has_elect_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->elect_height());
    }

    // optional uint32 member_index = 11;
    if (has_member_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->member_index());
    }

    // optional bool agree_precommit = 6 [default = false];
    if (has_agree_precommit()) {
      total_size += 1 + 1;
    }

    // optional bool agree_commit = 7 [default = false];
    if (has_agree_commit()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 2031616u) {
    // optional bool sync_block = 19;
    if (has_sync_block()) {
      total_size += 2 + 1;
    }

    // optional bool bft_timeout = 23;
    if (has_bft_timeout()) {
      total_size += 2 + 1;
    }

    // optional uint64 prepare_height = 16;
    if (has_prepare_height()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->prepare_height());
    }

    // optional int32 leader_idx = 4 [default = -1];
    if (has_leader_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leader_idx());
    }

    // optional uint32 pool_index = 8 [default = 4294967295];
    if (has_pool_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pool_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZbftMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.zbft.protobuf.ZbftMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ZbftMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZbftMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.zbft.protobuf.ZbftMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.zbft.protobuf.ZbftMessage)
    MergeFrom(*source);
  }
}

void ZbftMessage::MergeFrom(const ZbftMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.zbft.protobuf.ZbftMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ips_.MergeFrom(from.ips_);
  invaid_txs_.MergeFrom(from.invaid_txs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_prepare_gid();
      prepare_gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prepare_gid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_precommit_gid();
      precommit_gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.precommit_gid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_commit_gid();
      commit_gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commit_gid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_backup_enc_data();
      backup_enc_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.backup_enc_data_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_bls_sign_x();
      bls_sign_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bls_sign_x_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_bls_sign_y();
      bls_sign_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bls_sign_y_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_prepare_hash();
      prepare_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prepare_hash_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_oppose_prepare_gid();
      oppose_prepare_gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oppose_prepare_gid_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_tx_bft()->::shardora::zbft::protobuf::TxBft::MergeFrom(from.tx_bft());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_block()->::shardora::block::protobuf::Block::MergeFrom(from.block());
    }
    if (cached_has_bits & 0x00000400u) {
      net_id_ = from.net_id_;
    }
    if (cached_has_bits & 0x00000800u) {
      error_ = from.error_;
    }
    if (cached_has_bits & 0x00001000u) {
      elect_height_ = from.elect_height_;
    }
    if (cached_has_bits & 0x00002000u) {
      member_index_ = from.member_index_;
    }
    if (cached_has_bits & 0x00004000u) {
      agree_precommit_ = from.agree_precommit_;
    }
    if (cached_has_bits & 0x00008000u) {
      agree_commit_ = from.agree_commit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 2031616u) {
    if (cached_has_bits & 0x00010000u) {
      sync_block_ = from.sync_block_;
    }
    if (cached_has_bits & 0x00020000u) {
      bft_timeout_ = from.bft_timeout_;
    }
    if (cached_has_bits & 0x00040000u) {
      prepare_height_ = from.prepare_height_;
    }
    if (cached_has_bits & 0x00080000u) {
      leader_idx_ = from.leader_idx_;
    }
    if (cached_has_bits & 0x00100000u) {
      pool_index_ = from.pool_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ZbftMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.zbft.protobuf.ZbftMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZbftMessage::CopyFrom(const ZbftMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.zbft.protobuf.ZbftMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZbftMessage::IsInitialized() const {
  if (has_tx_bft()) {
    if (!this->tx_bft_->IsInitialized()) return false;
  }
  if (has_block()) {
    if (!this->block_->IsInitialized()) return false;
  }
  return true;
}

void ZbftMessage::Swap(ZbftMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZbftMessage::InternalSwap(ZbftMessage* other) {
  using std::swap;
  ips_.InternalSwap(&other->ips_);
  invaid_txs_.InternalSwap(&other->invaid_txs_);
  prepare_gid_.Swap(&other->prepare_gid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  precommit_gid_.Swap(&other->precommit_gid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  commit_gid_.Swap(&other->commit_gid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  backup_enc_data_.Swap(&other->backup_enc_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bls_sign_x_.Swap(&other->bls_sign_x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bls_sign_y_.Swap(&other->bls_sign_y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  prepare_hash_.Swap(&other->prepare_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  oppose_prepare_gid_.Swap(&other->oppose_prepare_gid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tx_bft_, other->tx_bft_);
  swap(block_, other->block_);
  swap(net_id_, other->net_id_);
  swap(error_, other->error_);
  swap(elect_height_, other->elect_height_);
  swap(member_index_, other->member_index_);
  swap(agree_precommit_, other->agree_precommit_);
  swap(agree_commit_, other->agree_commit_);
  swap(sync_block_, other->sync_block_);
  swap(bft_timeout_, other->bft_timeout_);
  swap(prepare_height_, other->prepare_height_);
  swap(leader_idx_, other->leader_idx_);
  swap(pool_index_, other->pool_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ZbftMessage::GetMetadata() const {
  protobuf_protos_2fzbft_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fzbft_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace zbft
}  // namespace shardora
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::zbft::protobuf::TxKeyValue* Arena::CreateMaybeMessage< ::shardora::zbft::protobuf::TxKeyValue >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::zbft::protobuf::TxKeyValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::zbft::protobuf::TxBft* Arena::CreateMaybeMessage< ::shardora::zbft::protobuf::TxBft >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::zbft::protobuf::TxBft >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::zbft::protobuf::ZbftMessage* Arena::CreateMaybeMessage< ::shardora::zbft::protobuf::ZbftMessage >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::zbft::protobuf::ZbftMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
