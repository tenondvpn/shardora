// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/pools.proto

#include "protos/pools.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protos_2fpools_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fpools_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PoolStatisticItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fpools_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ToTxHeights;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fpools_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ToTxMessageItem;
}  // namespace protobuf_protos_2fpools_2eproto
namespace zjchain {
namespace pools {
namespace protobuf {
class ToTxHeightsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ToTxHeights>
      _instance;
} _ToTxHeights_default_instance_;
class ToTxMessageItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ToTxMessageItem>
      _instance;
} _ToTxMessageItem_default_instance_;
class ToTxMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ToTxMessage>
      _instance;
} _ToTxMessage_default_instance_;
class PoolLatestInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PoolLatestInfo>
      _instance;
} _PoolLatestInfo_default_instance_;
class PoolStatisticItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PoolStatisticItem>
      _instance;
} _PoolStatisticItem_default_instance_;
class ElectStatisticDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ElectStatistic>
      _instance;
} _ElectStatistic_default_instance_;
class TxMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxMessage>
      _instance;
} _TxMessage_default_instance_;
}  // namespace protobuf
}  // namespace pools
}  // namespace zjchain
namespace protobuf_protos_2fpools_2eproto {
static void InitDefaultsToTxHeights() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::pools::protobuf::_ToTxHeights_default_instance_;
    new (ptr) ::zjchain::pools::protobuf::ToTxHeights();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::pools::protobuf::ToTxHeights::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ToTxHeights =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsToTxHeights}, {}};

static void InitDefaultsToTxMessageItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::pools::protobuf::_ToTxMessageItem_default_instance_;
    new (ptr) ::zjchain::pools::protobuf::ToTxMessageItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::pools::protobuf::ToTxMessageItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ToTxMessageItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsToTxMessageItem}, {}};

static void InitDefaultsToTxMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::pools::protobuf::_ToTxMessage_default_instance_;
    new (ptr) ::zjchain::pools::protobuf::ToTxMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::pools::protobuf::ToTxMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ToTxMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsToTxMessage}, {
      &protobuf_protos_2fpools_2eproto::scc_info_ToTxMessageItem.base,
      &protobuf_protos_2fpools_2eproto::scc_info_ToTxHeights.base,}};

static void InitDefaultsPoolLatestInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::pools::protobuf::_PoolLatestInfo_default_instance_;
    new (ptr) ::zjchain::pools::protobuf::PoolLatestInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::pools::protobuf::PoolLatestInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PoolLatestInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoolLatestInfo}, {}};

static void InitDefaultsPoolStatisticItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::pools::protobuf::_PoolStatisticItem_default_instance_;
    new (ptr) ::zjchain::pools::protobuf::PoolStatisticItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::pools::protobuf::PoolStatisticItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PoolStatisticItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoolStatisticItem}, {}};

static void InitDefaultsElectStatistic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::pools::protobuf::_ElectStatistic_default_instance_;
    new (ptr) ::zjchain::pools::protobuf::ElectStatistic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::pools::protobuf::ElectStatistic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ElectStatistic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsElectStatistic}, {
      &protobuf_protos_2fpools_2eproto::scc_info_PoolStatisticItem.base,
      &protobuf_protos_2fpools_2eproto::scc_info_ToTxHeights.base,}};

static void InitDefaultsTxMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zjchain::pools::protobuf::_TxMessage_default_instance_;
    new (ptr) ::zjchain::pools::protobuf::TxMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zjchain::pools::protobuf::TxMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TxMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTxMessage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ToTxHeights.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ToTxMessageItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ToTxMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PoolLatestInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PoolStatisticItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ElectStatistic.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TxMessage.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxHeights, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxHeights, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxHeights, sharding_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxHeights, heights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxHeights, block_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxHeights, tos_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxHeights, leader_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxHeights, elelct_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxHeights, tx_count_),
  3,
  ~0u,
  2,
  0,
  1,
  5,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxMessageItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxMessageItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxMessageItem, des_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxMessageItem, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxMessageItem, sharding_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxMessageItem, pool_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxMessageItem, step_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxMessage, heights_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxMessage, tos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ToTxMessage, to_heights_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::PoolLatestInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::PoolLatestInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::PoolLatestInfo, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::PoolLatestInfo, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::PoolLatestInfo, synced_height_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::PoolStatisticItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::PoolStatisticItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::PoolStatisticItem, tx_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::PoolStatisticItem, elect_height_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ElectStatistic, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ElectStatistic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ElectStatistic, statistics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::ElectStatistic, heights_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, gas_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, gas_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, contract_prepayment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, contract_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zjchain::pools::protobuf::TxMessage, contract_input_),
  9,
  0,
  1,
  7,
  8,
  2,
  3,
  4,
  11,
  10,
  12,
  5,
  6,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::zjchain::pools::protobuf::ToTxHeights)},
  { 19, 29, sizeof(::zjchain::pools::protobuf::ToTxMessageItem)},
  { 34, 42, sizeof(::zjchain::pools::protobuf::ToTxMessage)},
  { 45, 53, sizeof(::zjchain::pools::protobuf::PoolLatestInfo)},
  { 56, 63, sizeof(::zjchain::pools::protobuf::PoolStatisticItem)},
  { 65, 72, sizeof(::zjchain::pools::protobuf::ElectStatistic)},
  { 74, 92, sizeof(::zjchain::pools::protobuf::TxMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::pools::protobuf::_ToTxHeights_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::pools::protobuf::_ToTxMessageItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::pools::protobuf::_ToTxMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::pools::protobuf::_PoolLatestInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::pools::protobuf::_PoolStatisticItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::pools::protobuf::_ElectStatistic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zjchain::pools::protobuf::_TxMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protos/pools.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022protos/pools.proto\022\026zjchain.pools.prot"
      "obuf\032\024protos/address.proto\"\227\001\n\013ToTxHeigh"
      "ts\022\023\n\013sharding_id\030\001 \001(\r\022\017\n\007heights\030\002 \003(\004"
      "\022\024\n\014block_height\030\003 \001(\004\022\020\n\010tos_hash\030\004 \001(\014"
      "\022\021\n\tleader_id\030\005 \001(\014\022\025\n\relelct_height\030\006 \001"
      "(\004\022\020\n\010tx_count\030\007 \001(\r\"e\n\017ToTxMessageItem\022"
      "\013\n\003des\030\001 \001(\014\022\016\n\006amount\030\002 \001(\004\022\023\n\013sharding"
      "_id\030\003 \001(\r\022\022\n\npool_index\030\004 \001(\r\022\014\n\004step\030\005 "
      "\001(\005\"\222\001\n\013ToTxMessage\022\024\n\014heights_hash\030\001 \001("
      "\014\0224\n\003tos\030\002 \003(\0132\'.zjchain.pools.protobuf."
      "ToTxMessageItem\0227\n\nto_heights\030\003 \001(\0132#.zj"
      "chain.pools.protobuf.ToTxHeights\"E\n\016Pool"
      "LatestInfo\022\016\n\006height\030\001 \001(\004\022\014\n\004hash\030\002 \001(\014"
      "\022\025\n\rsynced_height\030\003 \001(\004\";\n\021PoolStatistic"
      "Item\022\020\n\010tx_count\030\001 \003(\r\022\024\n\014elect_height\030\002"
      " \001(\004\"\205\001\n\016ElectStatistic\022=\n\nstatistics\030\001 "
      "\003(\0132).zjchain.pools.protobuf.PoolStatist"
      "icItem\0224\n\007heights\030\002 \001(\0132#.zjchain.pools."
      "protobuf.ToTxHeights\"\240\002\n\tTxMessage\022\017\n\007ve"
      "rsion\030\001 \001(\r\022\013\n\003gid\030\002 \001(\014\022\016\n\006pubkey\030\003 \001(\014"
      "\022\021\n\tgas_limit\030\004 \001(\004\022\021\n\tgas_price\030\005 \001(\004\022\013"
      "\n\003key\030\006 \001(\014\022\r\n\005value\030\007 \001(\014\022\n\n\002to\030\010 \001(\014\022\016"
      "\n\006amount\030\t \001(\004\022;\n\004step\030\n \001(\0162 .zjchain.p"
      "ools.protobuf.StepType:\013kNormalFrom\022\033\n\023c"
      "ontract_prepayment\030\013 \001(\004\022\025\n\rcontract_cod"
      "e\030\014 \001(\014\022\026\n\016contract_input\030\r \001(\014*\210\003\n\010Step"
      "Type\022\017\n\013kNormalFrom\020\000\022\r\n\tkNormalTo\020\001\022\034\n\030"
      "kConsensusRootElectShard\020\002\022\033\n\027kConsensus"
      "RootTimeBlock\020\003\022\034\n\030kConsensusFinalStatis"
      "tic\020\004\022!\n\035kConsensusCreateGenesisAcount\020\005"
      "\022\026\n\022kConsensusLocalTos\020\006\022\033\n\027kContractUse"
      "rCreateCall\020\007\022\025\n\021kContractUserCall\020\010\022\023\n\017"
      "kContractExcute\020\t\022\026\n\022kContractBroadcast\020"
      "\n\022\026\n\022kRootCreateAddress\020\013\022#\n\037kRootCreate"
      "AddressCrossSharding\020\014\022\032\n\026kContractGasPr"
      "epayment\020\r\022\016\n\nkStatistic\020\016"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1426);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protos/pools.proto", &protobuf_RegisterTypes);
  ::protobuf_protos_2faddress_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protos_2fpools_2eproto
namespace zjchain {
namespace pools {
namespace protobuf {
const ::google::protobuf::EnumDescriptor* StepType_descriptor() {
  protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protos_2fpools_2eproto::file_level_enum_descriptors[0];
}
bool StepType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ToTxHeights::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTxHeights::kShardingIdFieldNumber;
const int ToTxHeights::kHeightsFieldNumber;
const int ToTxHeights::kBlockHeightFieldNumber;
const int ToTxHeights::kTosHashFieldNumber;
const int ToTxHeights::kLeaderIdFieldNumber;
const int ToTxHeights::kElelctHeightFieldNumber;
const int ToTxHeights::kTxCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTxHeights::ToTxHeights()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fpools_2eproto::scc_info_ToTxHeights.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.pools.protobuf.ToTxHeights)
}
ToTxHeights::ToTxHeights(const ToTxHeights& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      heights_(from.heights_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tos_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tos_hash()) {
    tos_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tos_hash_);
  }
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader_id()) {
    leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
  }
  ::memcpy(&block_height_, &from.block_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&elelct_height_) -
    reinterpret_cast<char*>(&block_height_)) + sizeof(elelct_height_));
  // @@protoc_insertion_point(copy_constructor:zjchain.pools.protobuf.ToTxHeights)
}

void ToTxHeights::SharedCtor() {
  tos_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&block_height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elelct_height_) -
      reinterpret_cast<char*>(&block_height_)) + sizeof(elelct_height_));
}

ToTxHeights::~ToTxHeights() {
  // @@protoc_insertion_point(destructor:zjchain.pools.protobuf.ToTxHeights)
  SharedDtor();
}

void ToTxHeights::SharedDtor() {
  tos_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ToTxHeights::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ToTxHeights::descriptor() {
  ::protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTxHeights& ToTxHeights::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fpools_2eproto::scc_info_ToTxHeights.base);
  return *internal_default_instance();
}


void ToTxHeights::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.pools.protobuf.ToTxHeights)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heights_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tos_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      leader_id_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&block_height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&elelct_height_) -
        reinterpret_cast<char*>(&block_height_)) + sizeof(elelct_height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ToTxHeights::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.pools.protobuf.ToTxHeights)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sharding_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_sharding_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sharding_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 heights = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_heights())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_heights())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 block_height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_block_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &block_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes tos_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tos_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes leader_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_leader_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 elelct_height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_elelct_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elelct_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 tx_count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_tx_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tx_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.pools.protobuf.ToTxHeights)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.pools.protobuf.ToTxHeights)
  return false;
#undef DO_
}

void ToTxHeights::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.pools.protobuf.ToTxHeights)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sharding_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sharding_id(), output);
  }

  // repeated uint64 heights = 2;
  for (int i = 0, n = this->heights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->heights(i), output);
  }

  // optional uint64 block_height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->block_height(), output);
  }

  // optional bytes tos_hash = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->tos_hash(), output);
  }

  // optional bytes leader_id = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->leader_id(), output);
  }

  // optional uint64 elelct_height = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->elelct_height(), output);
  }

  // optional uint32 tx_count = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->tx_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.pools.protobuf.ToTxHeights)
}

::google::protobuf::uint8* ToTxHeights::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.pools.protobuf.ToTxHeights)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sharding_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sharding_id(), target);
  }

  // repeated uint64 heights = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->heights_, target);

  // optional uint64 block_height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->block_height(), target);
  }

  // optional bytes tos_hash = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->tos_hash(), target);
  }

  // optional bytes leader_id = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->leader_id(), target);
  }

  // optional uint64 elelct_height = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->elelct_height(), target);
  }

  // optional uint32 tx_count = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->tx_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.pools.protobuf.ToTxHeights)
  return target;
}

size_t ToTxHeights::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.pools.protobuf.ToTxHeights)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 heights = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->heights_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->heights_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes tos_hash = 4;
    if (has_tos_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->tos_hash());
    }

    // optional bytes leader_id = 5;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->leader_id());
    }

    // optional uint64 block_height = 3;
    if (has_block_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->block_height());
    }

    // optional uint32 sharding_id = 1;
    if (has_sharding_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sharding_id());
    }

    // optional uint32 tx_count = 7;
    if (has_tx_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tx_count());
    }

    // optional uint64 elelct_height = 6;
    if (has_elelct_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->elelct_height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ToTxHeights::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.pools.protobuf.ToTxHeights)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTxHeights* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTxHeights>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.pools.protobuf.ToTxHeights)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.pools.protobuf.ToTxHeights)
    MergeFrom(*source);
  }
}

void ToTxHeights::MergeFrom(const ToTxHeights& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.pools.protobuf.ToTxHeights)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  heights_.MergeFrom(from.heights_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tos_hash();
      tos_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tos_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_leader_id();
      leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      block_height_ = from.block_height_;
    }
    if (cached_has_bits & 0x00000008u) {
      sharding_id_ = from.sharding_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      tx_count_ = from.tx_count_;
    }
    if (cached_has_bits & 0x00000020u) {
      elelct_height_ = from.elelct_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ToTxHeights::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.pools.protobuf.ToTxHeights)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTxHeights::CopyFrom(const ToTxHeights& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.pools.protobuf.ToTxHeights)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTxHeights::IsInitialized() const {
  return true;
}

void ToTxHeights::Swap(ToTxHeights* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTxHeights::InternalSwap(ToTxHeights* other) {
  using std::swap;
  heights_.InternalSwap(&other->heights_);
  tos_hash_.Swap(&other->tos_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  leader_id_.Swap(&other->leader_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(block_height_, other->block_height_);
  swap(sharding_id_, other->sharding_id_);
  swap(tx_count_, other->tx_count_);
  swap(elelct_height_, other->elelct_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ToTxHeights::GetMetadata() const {
  protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ToTxMessageItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTxMessageItem::kDesFieldNumber;
const int ToTxMessageItem::kAmountFieldNumber;
const int ToTxMessageItem::kShardingIdFieldNumber;
const int ToTxMessageItem::kPoolIndexFieldNumber;
const int ToTxMessageItem::kStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTxMessageItem::ToTxMessageItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fpools_2eproto::scc_info_ToTxMessageItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.pools.protobuf.ToTxMessageItem)
}
ToTxMessageItem::ToTxMessageItem(const ToTxMessageItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  des_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_des()) {
    des_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_);
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&step_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(step_));
  // @@protoc_insertion_point(copy_constructor:zjchain.pools.protobuf.ToTxMessageItem)
}

void ToTxMessageItem::SharedCtor() {
  des_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(step_));
}

ToTxMessageItem::~ToTxMessageItem() {
  // @@protoc_insertion_point(destructor:zjchain.pools.protobuf.ToTxMessageItem)
  SharedDtor();
}

void ToTxMessageItem::SharedDtor() {
  des_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ToTxMessageItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ToTxMessageItem::descriptor() {
  ::protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTxMessageItem& ToTxMessageItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fpools_2eproto::scc_info_ToTxMessageItem.base);
  return *internal_default_instance();
}


void ToTxMessageItem::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.pools.protobuf.ToTxMessageItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    des_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&amount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&step_) -
        reinterpret_cast<char*>(&amount_)) + sizeof(step_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ToTxMessageItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.pools.protobuf.ToTxMessageItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes des = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_des()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sharding_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sharding_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sharding_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pool_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pool_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pool_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 step = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_step();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.pools.protobuf.ToTxMessageItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.pools.protobuf.ToTxMessageItem)
  return false;
#undef DO_
}

void ToTxMessageItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.pools.protobuf.ToTxMessageItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes des = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->des(), output);
  }

  // optional uint64 amount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->amount(), output);
  }

  // optional uint32 sharding_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sharding_id(), output);
  }

  // optional uint32 pool_index = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pool_index(), output);
  }

  // optional int32 step = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->step(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.pools.protobuf.ToTxMessageItem)
}

::google::protobuf::uint8* ToTxMessageItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.pools.protobuf.ToTxMessageItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes des = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->des(), target);
  }

  // optional uint64 amount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->amount(), target);
  }

  // optional uint32 sharding_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sharding_id(), target);
  }

  // optional uint32 pool_index = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pool_index(), target);
  }

  // optional int32 step = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->step(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.pools.protobuf.ToTxMessageItem)
  return target;
}

size_t ToTxMessageItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.pools.protobuf.ToTxMessageItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes des = 1;
    if (has_des()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->des());
    }

    // optional uint64 amount = 2;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

    // optional uint32 sharding_id = 3;
    if (has_sharding_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sharding_id());
    }

    // optional uint32 pool_index = 4;
    if (has_pool_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pool_index());
    }

    // optional int32 step = 5;
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->step());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ToTxMessageItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.pools.protobuf.ToTxMessageItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTxMessageItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTxMessageItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.pools.protobuf.ToTxMessageItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.pools.protobuf.ToTxMessageItem)
    MergeFrom(*source);
  }
}

void ToTxMessageItem::MergeFrom(const ToTxMessageItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.pools.protobuf.ToTxMessageItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_des();
      des_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_);
    }
    if (cached_has_bits & 0x00000002u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00000004u) {
      sharding_id_ = from.sharding_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      pool_index_ = from.pool_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      step_ = from.step_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ToTxMessageItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.pools.protobuf.ToTxMessageItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTxMessageItem::CopyFrom(const ToTxMessageItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.pools.protobuf.ToTxMessageItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTxMessageItem::IsInitialized() const {
  return true;
}

void ToTxMessageItem::Swap(ToTxMessageItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTxMessageItem::InternalSwap(ToTxMessageItem* other) {
  using std::swap;
  des_.Swap(&other->des_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  swap(sharding_id_, other->sharding_id_);
  swap(pool_index_, other->pool_index_);
  swap(step_, other->step_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ToTxMessageItem::GetMetadata() const {
  protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ToTxMessage::InitAsDefaultInstance() {
  ::zjchain::pools::protobuf::_ToTxMessage_default_instance_._instance.get_mutable()->to_heights_ = const_cast< ::zjchain::pools::protobuf::ToTxHeights*>(
      ::zjchain::pools::protobuf::ToTxHeights::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToTxMessage::kHeightsHashFieldNumber;
const int ToTxMessage::kTosFieldNumber;
const int ToTxMessage::kToHeightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToTxMessage::ToTxMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fpools_2eproto::scc_info_ToTxMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.pools.protobuf.ToTxMessage)
}
ToTxMessage::ToTxMessage(const ToTxMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tos_(from.tos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  heights_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_heights_hash()) {
    heights_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.heights_hash_);
  }
  if (from.has_to_heights()) {
    to_heights_ = new ::zjchain::pools::protobuf::ToTxHeights(*from.to_heights_);
  } else {
    to_heights_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zjchain.pools.protobuf.ToTxMessage)
}

void ToTxMessage::SharedCtor() {
  heights_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_heights_ = NULL;
}

ToTxMessage::~ToTxMessage() {
  // @@protoc_insertion_point(destructor:zjchain.pools.protobuf.ToTxMessage)
  SharedDtor();
}

void ToTxMessage::SharedDtor() {
  heights_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete to_heights_;
}

void ToTxMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ToTxMessage::descriptor() {
  ::protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToTxMessage& ToTxMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fpools_2eproto::scc_info_ToTxMessage.base);
  return *internal_default_instance();
}


void ToTxMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.pools.protobuf.ToTxMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tos_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      heights_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(to_heights_ != NULL);
      to_heights_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ToTxMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.pools.protobuf.ToTxMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes heights_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_heights_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zjchain.pools.protobuf.ToTxMessageItem tos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zjchain.pools.protobuf.ToTxHeights to_heights = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_to_heights()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.pools.protobuf.ToTxMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.pools.protobuf.ToTxMessage)
  return false;
#undef DO_
}

void ToTxMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.pools.protobuf.ToTxMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes heights_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->heights_hash(), output);
  }

  // repeated .zjchain.pools.protobuf.ToTxMessageItem tos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->tos(static_cast<int>(i)),
      output);
  }

  // optional .zjchain.pools.protobuf.ToTxHeights to_heights = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_to_heights(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.pools.protobuf.ToTxMessage)
}

::google::protobuf::uint8* ToTxMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.pools.protobuf.ToTxMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes heights_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->heights_hash(), target);
  }

  // repeated .zjchain.pools.protobuf.ToTxMessageItem tos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->tos(static_cast<int>(i)), deterministic, target);
  }

  // optional .zjchain.pools.protobuf.ToTxHeights to_heights = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_to_heights(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.pools.protobuf.ToTxMessage)
  return target;
}

size_t ToTxMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.pools.protobuf.ToTxMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zjchain.pools.protobuf.ToTxMessageItem tos = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->tos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tos(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes heights_hash = 1;
    if (has_heights_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->heights_hash());
    }

    // optional .zjchain.pools.protobuf.ToTxHeights to_heights = 3;
    if (has_to_heights()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *to_heights_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ToTxMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.pools.protobuf.ToTxMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ToTxMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToTxMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.pools.protobuf.ToTxMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.pools.protobuf.ToTxMessage)
    MergeFrom(*source);
  }
}

void ToTxMessage::MergeFrom(const ToTxMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.pools.protobuf.ToTxMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tos_.MergeFrom(from.tos_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_heights_hash();
      heights_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.heights_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_to_heights()->::zjchain::pools::protobuf::ToTxHeights::MergeFrom(from.to_heights());
    }
  }
}

void ToTxMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.pools.protobuf.ToTxMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToTxMessage::CopyFrom(const ToTxMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.pools.protobuf.ToTxMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToTxMessage::IsInitialized() const {
  return true;
}

void ToTxMessage::Swap(ToTxMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToTxMessage::InternalSwap(ToTxMessage* other) {
  using std::swap;
  CastToBase(&tos_)->InternalSwap(CastToBase(&other->tos_));
  heights_hash_.Swap(&other->heights_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(to_heights_, other->to_heights_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ToTxMessage::GetMetadata() const {
  protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PoolLatestInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PoolLatestInfo::kHeightFieldNumber;
const int PoolLatestInfo::kHashFieldNumber;
const int PoolLatestInfo::kSyncedHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PoolLatestInfo::PoolLatestInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fpools_2eproto::scc_info_PoolLatestInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.pools.protobuf.PoolLatestInfo)
}
PoolLatestInfo::PoolLatestInfo(const PoolLatestInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hash()) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&synced_height_) -
    reinterpret_cast<char*>(&height_)) + sizeof(synced_height_));
  // @@protoc_insertion_point(copy_constructor:zjchain.pools.protobuf.PoolLatestInfo)
}

void PoolLatestInfo::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&synced_height_) -
      reinterpret_cast<char*>(&height_)) + sizeof(synced_height_));
}

PoolLatestInfo::~PoolLatestInfo() {
  // @@protoc_insertion_point(destructor:zjchain.pools.protobuf.PoolLatestInfo)
  SharedDtor();
}

void PoolLatestInfo::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PoolLatestInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PoolLatestInfo::descriptor() {
  ::protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PoolLatestInfo& PoolLatestInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fpools_2eproto::scc_info_PoolLatestInfo.base);
  return *internal_default_instance();
}


void PoolLatestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.pools.protobuf.PoolLatestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    hash_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&synced_height_) -
        reinterpret_cast<char*>(&height_)) + sizeof(synced_height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PoolLatestInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.pools.protobuf.PoolLatestInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 height = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 synced_height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_synced_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &synced_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.pools.protobuf.PoolLatestInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.pools.protobuf.PoolLatestInfo)
  return false;
#undef DO_
}

void PoolLatestInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.pools.protobuf.PoolLatestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 height = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->height(), output);
  }

  // optional bytes hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->hash(), output);
  }

  // optional uint64 synced_height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->synced_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.pools.protobuf.PoolLatestInfo)
}

::google::protobuf::uint8* PoolLatestInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.pools.protobuf.PoolLatestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 height = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->height(), target);
  }

  // optional bytes hash = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->hash(), target);
  }

  // optional uint64 synced_height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->synced_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.pools.protobuf.PoolLatestInfo)
  return target;
}

size_t PoolLatestInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.pools.protobuf.PoolLatestInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes hash = 2;
    if (has_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->hash());
    }

    // optional uint64 height = 1;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->height());
    }

    // optional uint64 synced_height = 3;
    if (has_synced_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->synced_height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PoolLatestInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.pools.protobuf.PoolLatestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PoolLatestInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PoolLatestInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.pools.protobuf.PoolLatestInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.pools.protobuf.PoolLatestInfo)
    MergeFrom(*source);
  }
}

void PoolLatestInfo::MergeFrom(const PoolLatestInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.pools.protobuf.PoolLatestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hash();
      hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000004u) {
      synced_height_ = from.synced_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PoolLatestInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.pools.protobuf.PoolLatestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PoolLatestInfo::CopyFrom(const PoolLatestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.pools.protobuf.PoolLatestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoolLatestInfo::IsInitialized() const {
  return true;
}

void PoolLatestInfo::Swap(PoolLatestInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PoolLatestInfo::InternalSwap(PoolLatestInfo* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(height_, other->height_);
  swap(synced_height_, other->synced_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PoolLatestInfo::GetMetadata() const {
  protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PoolStatisticItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PoolStatisticItem::kTxCountFieldNumber;
const int PoolStatisticItem::kElectHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PoolStatisticItem::PoolStatisticItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fpools_2eproto::scc_info_PoolStatisticItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.pools.protobuf.PoolStatisticItem)
}
PoolStatisticItem::PoolStatisticItem(const PoolStatisticItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tx_count_(from.tx_count_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  elect_height_ = from.elect_height_;
  // @@protoc_insertion_point(copy_constructor:zjchain.pools.protobuf.PoolStatisticItem)
}

void PoolStatisticItem::SharedCtor() {
  elect_height_ = GOOGLE_ULONGLONG(0);
}

PoolStatisticItem::~PoolStatisticItem() {
  // @@protoc_insertion_point(destructor:zjchain.pools.protobuf.PoolStatisticItem)
  SharedDtor();
}

void PoolStatisticItem::SharedDtor() {
}

void PoolStatisticItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PoolStatisticItem::descriptor() {
  ::protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PoolStatisticItem& PoolStatisticItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fpools_2eproto::scc_info_PoolStatisticItem.base);
  return *internal_default_instance();
}


void PoolStatisticItem::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.pools.protobuf.PoolStatisticItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tx_count_.Clear();
  elect_height_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PoolStatisticItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.pools.protobuf.PoolStatisticItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 tx_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_tx_count())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_tx_count())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 elect_height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_elect_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elect_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.pools.protobuf.PoolStatisticItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.pools.protobuf.PoolStatisticItem)
  return false;
#undef DO_
}

void PoolStatisticItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.pools.protobuf.PoolStatisticItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 tx_count = 1;
  for (int i = 0, n = this->tx_count_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->tx_count(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 elect_height = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->elect_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.pools.protobuf.PoolStatisticItem)
}

::google::protobuf::uint8* PoolStatisticItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.pools.protobuf.PoolStatisticItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 tx_count = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->tx_count_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint64 elect_height = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->elect_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.pools.protobuf.PoolStatisticItem)
  return target;
}

size_t PoolStatisticItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.pools.protobuf.PoolStatisticItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 tx_count = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->tx_count_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->tx_count_size());
    total_size += data_size;
  }

  // optional uint64 elect_height = 2;
  if (has_elect_height()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->elect_height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PoolStatisticItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.pools.protobuf.PoolStatisticItem)
  GOOGLE_DCHECK_NE(&from, this);
  const PoolStatisticItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PoolStatisticItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.pools.protobuf.PoolStatisticItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.pools.protobuf.PoolStatisticItem)
    MergeFrom(*source);
  }
}

void PoolStatisticItem::MergeFrom(const PoolStatisticItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.pools.protobuf.PoolStatisticItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tx_count_.MergeFrom(from.tx_count_);
  if (from.has_elect_height()) {
    set_elect_height(from.elect_height());
  }
}

void PoolStatisticItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.pools.protobuf.PoolStatisticItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PoolStatisticItem::CopyFrom(const PoolStatisticItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.pools.protobuf.PoolStatisticItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoolStatisticItem::IsInitialized() const {
  return true;
}

void PoolStatisticItem::Swap(PoolStatisticItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PoolStatisticItem::InternalSwap(PoolStatisticItem* other) {
  using std::swap;
  tx_count_.InternalSwap(&other->tx_count_);
  swap(elect_height_, other->elect_height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PoolStatisticItem::GetMetadata() const {
  protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ElectStatistic::InitAsDefaultInstance() {
  ::zjchain::pools::protobuf::_ElectStatistic_default_instance_._instance.get_mutable()->heights_ = const_cast< ::zjchain::pools::protobuf::ToTxHeights*>(
      ::zjchain::pools::protobuf::ToTxHeights::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElectStatistic::kStatisticsFieldNumber;
const int ElectStatistic::kHeightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElectStatistic::ElectStatistic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fpools_2eproto::scc_info_ElectStatistic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.pools.protobuf.ElectStatistic)
}
ElectStatistic::ElectStatistic(const ElectStatistic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      statistics_(from.statistics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_heights()) {
    heights_ = new ::zjchain::pools::protobuf::ToTxHeights(*from.heights_);
  } else {
    heights_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zjchain.pools.protobuf.ElectStatistic)
}

void ElectStatistic::SharedCtor() {
  heights_ = NULL;
}

ElectStatistic::~ElectStatistic() {
  // @@protoc_insertion_point(destructor:zjchain.pools.protobuf.ElectStatistic)
  SharedDtor();
}

void ElectStatistic::SharedDtor() {
  if (this != internal_default_instance()) delete heights_;
}

void ElectStatistic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ElectStatistic::descriptor() {
  ::protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElectStatistic& ElectStatistic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fpools_2eproto::scc_info_ElectStatistic.base);
  return *internal_default_instance();
}


void ElectStatistic::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.pools.protobuf.ElectStatistic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  statistics_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(heights_ != NULL);
    heights_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ElectStatistic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.pools.protobuf.ElectStatistic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .zjchain.pools.protobuf.PoolStatisticItem statistics = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_statistics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zjchain.pools.protobuf.ToTxHeights heights = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_heights()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.pools.protobuf.ElectStatistic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.pools.protobuf.ElectStatistic)
  return false;
#undef DO_
}

void ElectStatistic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.pools.protobuf.ElectStatistic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zjchain.pools.protobuf.PoolStatisticItem statistics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->statistics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->statistics(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .zjchain.pools.protobuf.ToTxHeights heights = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_heights(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.pools.protobuf.ElectStatistic)
}

::google::protobuf::uint8* ElectStatistic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.pools.protobuf.ElectStatistic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zjchain.pools.protobuf.PoolStatisticItem statistics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->statistics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->statistics(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .zjchain.pools.protobuf.ToTxHeights heights = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_heights(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.pools.protobuf.ElectStatistic)
  return target;
}

size_t ElectStatistic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.pools.protobuf.ElectStatistic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zjchain.pools.protobuf.PoolStatisticItem statistics = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->statistics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->statistics(static_cast<int>(i)));
    }
  }

  // optional .zjchain.pools.protobuf.ToTxHeights heights = 2;
  if (has_heights()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *heights_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ElectStatistic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.pools.protobuf.ElectStatistic)
  GOOGLE_DCHECK_NE(&from, this);
  const ElectStatistic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElectStatistic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.pools.protobuf.ElectStatistic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.pools.protobuf.ElectStatistic)
    MergeFrom(*source);
  }
}

void ElectStatistic::MergeFrom(const ElectStatistic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.pools.protobuf.ElectStatistic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  statistics_.MergeFrom(from.statistics_);
  if (from.has_heights()) {
    mutable_heights()->::zjchain::pools::protobuf::ToTxHeights::MergeFrom(from.heights());
  }
}

void ElectStatistic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.pools.protobuf.ElectStatistic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElectStatistic::CopyFrom(const ElectStatistic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.pools.protobuf.ElectStatistic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElectStatistic::IsInitialized() const {
  return true;
}

void ElectStatistic::Swap(ElectStatistic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElectStatistic::InternalSwap(ElectStatistic* other) {
  using std::swap;
  CastToBase(&statistics_)->InternalSwap(CastToBase(&other->statistics_));
  swap(heights_, other->heights_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ElectStatistic::GetMetadata() const {
  protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TxMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxMessage::kVersionFieldNumber;
const int TxMessage::kGidFieldNumber;
const int TxMessage::kPubkeyFieldNumber;
const int TxMessage::kGasLimitFieldNumber;
const int TxMessage::kGasPriceFieldNumber;
const int TxMessage::kKeyFieldNumber;
const int TxMessage::kValueFieldNumber;
const int TxMessage::kToFieldNumber;
const int TxMessage::kAmountFieldNumber;
const int TxMessage::kStepFieldNumber;
const int TxMessage::kContractPrepaymentFieldNumber;
const int TxMessage::kContractCodeFieldNumber;
const int TxMessage::kContractInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxMessage::TxMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fpools_2eproto::scc_info_TxMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zjchain.pools.protobuf.TxMessage)
}
TxMessage::TxMessage(const TxMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gid()) {
    gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gid_);
  }
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pubkey()) {
    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_to()) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  contract_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_contract_code()) {
    contract_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_code_);
  }
  contract_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_contract_input()) {
    contract_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_input_);
  }
  ::memcpy(&gas_limit_, &from.gas_limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&contract_prepayment_) -
    reinterpret_cast<char*>(&gas_limit_)) + sizeof(contract_prepayment_));
  // @@protoc_insertion_point(copy_constructor:zjchain.pools.protobuf.TxMessage)
}

void TxMessage::SharedCtor() {
  gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gas_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&contract_prepayment_) -
      reinterpret_cast<char*>(&gas_limit_)) + sizeof(contract_prepayment_));
}

TxMessage::~TxMessage() {
  // @@protoc_insertion_point(destructor:zjchain.pools.protobuf.TxMessage)
  SharedDtor();
}

void TxMessage::SharedDtor() {
  gid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contract_input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TxMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TxMessage::descriptor() {
  ::protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxMessage& TxMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fpools_2eproto::scc_info_TxMessage.base);
  return *internal_default_instance();
}


void TxMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:zjchain.pools.protobuf.TxMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      gid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pubkey_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      to_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      contract_code_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      contract_input_.ClearNonDefaultToEmptyNoArena();
    }
  }
  gas_limit_ = GOOGLE_ULONGLONG(0);
  if (cached_has_bits & 7936u) {
    ::memset(&gas_price_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&contract_prepayment_) -
        reinterpret_cast<char*>(&gas_price_)) + sizeof(contract_prepayment_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zjchain.pools.protobuf.TxMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pubkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pubkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gas_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_gas_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gas_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 gas_price = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_gas_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gas_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes key = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes to = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 amount = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zjchain.pools.protobuf.StepType step = 10 [default = kNormalFrom];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zjchain::pools::protobuf::StepType_IsValid(value)) {
            set_step(static_cast< ::zjchain::pools::protobuf::StepType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 contract_prepayment = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_contract_prepayment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &contract_prepayment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes contract_code = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_contract_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes contract_input = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_contract_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zjchain.pools.protobuf.TxMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zjchain.pools.protobuf.TxMessage)
  return false;
#undef DO_
}

void TxMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zjchain.pools.protobuf.TxMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional bytes gid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->gid(), output);
  }

  // optional bytes pubkey = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->pubkey(), output);
  }

  // optional uint64 gas_limit = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->gas_limit(), output);
  }

  // optional uint64 gas_price = 5;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->gas_price(), output);
  }

  // optional bytes key = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->key(), output);
  }

  // optional bytes value = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->value(), output);
  }

  // optional bytes to = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->to(), output);
  }

  // optional uint64 amount = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->amount(), output);
  }

  // optional .zjchain.pools.protobuf.StepType step = 10 [default = kNormalFrom];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->step(), output);
  }

  // optional uint64 contract_prepayment = 11;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->contract_prepayment(), output);
  }

  // optional bytes contract_code = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->contract_code(), output);
  }

  // optional bytes contract_input = 13;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->contract_input(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zjchain.pools.protobuf.TxMessage)
}

::google::protobuf::uint8* TxMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zjchain.pools.protobuf.TxMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional bytes gid = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->gid(), target);
  }

  // optional bytes pubkey = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->pubkey(), target);
  }

  // optional uint64 gas_limit = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->gas_limit(), target);
  }

  // optional uint64 gas_price = 5;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->gas_price(), target);
  }

  // optional bytes key = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->key(), target);
  }

  // optional bytes value = 7;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->value(), target);
  }

  // optional bytes to = 8;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->to(), target);
  }

  // optional uint64 amount = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->amount(), target);
  }

  // optional .zjchain.pools.protobuf.StepType step = 10 [default = kNormalFrom];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->step(), target);
  }

  // optional uint64 contract_prepayment = 11;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->contract_prepayment(), target);
  }

  // optional bytes contract_code = 12;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->contract_code(), target);
  }

  // optional bytes contract_input = 13;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->contract_input(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zjchain.pools.protobuf.TxMessage)
  return target;
}

size_t TxMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zjchain.pools.protobuf.TxMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes gid = 2;
    if (has_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gid());
    }

    // optional bytes pubkey = 3;
    if (has_pubkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pubkey());
    }

    // optional bytes key = 6;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes value = 7;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

    // optional bytes to = 8;
    if (has_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->to());
    }

    // optional bytes contract_code = 12;
    if (has_contract_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->contract_code());
    }

    // optional bytes contract_input = 13;
    if (has_contract_input()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->contract_input());
    }

    // optional uint64 gas_limit = 4;
    if (has_gas_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gas_limit());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional uint64 gas_price = 5;
    if (has_gas_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gas_price());
    }

    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional .zjchain.pools.protobuf.StepType step = 10 [default = kNormalFrom];
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->step());
    }

    // optional uint64 amount = 9;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->amount());
    }

    // optional uint64 contract_prepayment = 11;
    if (has_contract_prepayment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->contract_prepayment());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TxMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zjchain.pools.protobuf.TxMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TxMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zjchain.pools.protobuf.TxMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zjchain.pools.protobuf.TxMessage)
    MergeFrom(*source);
  }
}

void TxMessage::MergeFrom(const TxMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zjchain.pools.protobuf.TxMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gid();
      gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pubkey();
      pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_to();
      to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_contract_code();
      contract_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_code_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_contract_input();
      contract_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contract_input_);
    }
    if (cached_has_bits & 0x00000080u) {
      gas_limit_ = from.gas_limit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      gas_price_ = from.gas_price_;
    }
    if (cached_has_bits & 0x00000200u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000400u) {
      step_ = from.step_;
    }
    if (cached_has_bits & 0x00000800u) {
      amount_ = from.amount_;
    }
    if (cached_has_bits & 0x00001000u) {
      contract_prepayment_ = from.contract_prepayment_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TxMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zjchain.pools.protobuf.TxMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxMessage::CopyFrom(const TxMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zjchain.pools.protobuf.TxMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxMessage::IsInitialized() const {
  return true;
}

void TxMessage::Swap(TxMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxMessage::InternalSwap(TxMessage* other) {
  using std::swap;
  gid_.Swap(&other->gid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pubkey_.Swap(&other->pubkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contract_code_.Swap(&other->contract_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contract_input_.Swap(&other->contract_input_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(gas_limit_, other->gas_limit_);
  swap(gas_price_, other->gas_price_);
  swap(version_, other->version_);
  swap(step_, other->step_);
  swap(amount_, other->amount_);
  swap(contract_prepayment_, other->contract_prepayment_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TxMessage::GetMetadata() const {
  protobuf_protos_2fpools_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fpools_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace pools
}  // namespace zjchain
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::pools::protobuf::ToTxHeights* Arena::CreateMaybeMessage< ::zjchain::pools::protobuf::ToTxHeights >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::pools::protobuf::ToTxHeights >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::pools::protobuf::ToTxMessageItem* Arena::CreateMaybeMessage< ::zjchain::pools::protobuf::ToTxMessageItem >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::pools::protobuf::ToTxMessageItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::pools::protobuf::ToTxMessage* Arena::CreateMaybeMessage< ::zjchain::pools::protobuf::ToTxMessage >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::pools::protobuf::ToTxMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::pools::protobuf::PoolLatestInfo* Arena::CreateMaybeMessage< ::zjchain::pools::protobuf::PoolLatestInfo >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::pools::protobuf::PoolLatestInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::pools::protobuf::PoolStatisticItem* Arena::CreateMaybeMessage< ::zjchain::pools::protobuf::PoolStatisticItem >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::pools::protobuf::PoolStatisticItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::pools::protobuf::ElectStatistic* Arena::CreateMaybeMessage< ::zjchain::pools::protobuf::ElectStatistic >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::pools::protobuf::ElectStatistic >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zjchain::pools::protobuf::TxMessage* Arena::CreateMaybeMessage< ::zjchain::pools::protobuf::TxMessage >(Arena* arena) {
  return Arena::CreateInternal< ::zjchain::pools::protobuf::TxMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
