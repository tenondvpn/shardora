// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/hotstuff.proto

#ifndef PROTOBUF_INCLUDED_protos_2fhotstuff_2eproto
#define PROTOBUF_INCLUDED_protos_2fhotstuff_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "protos/view_block.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fhotstuff_2eproto 

namespace protobuf_protos_2fhotstuff_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protos_2fhotstuff_2eproto
namespace shardora {
namespace hotstuff {
namespace protobuf {
class HotstuffMessage;
class HotstuffMessageDefaultTypeInternal;
extern HotstuffMessageDefaultTypeInternal _HotstuffMessage_default_instance_;
class ProposeMsg;
class ProposeMsgDefaultTypeInternal;
extern ProposeMsgDefaultTypeInternal _ProposeMsg_default_instance_;
class VoteMsg;
class VoteMsgDefaultTypeInternal;
extern VoteMsgDefaultTypeInternal _VoteMsg_default_instance_;
}  // namespace protobuf
}  // namespace hotstuff
}  // namespace shardora
namespace google {
namespace protobuf {
template<> ::shardora::hotstuff::protobuf::HotstuffMessage* Arena::CreateMaybeMessage<::shardora::hotstuff::protobuf::HotstuffMessage>(Arena*);
template<> ::shardora::hotstuff::protobuf::ProposeMsg* Arena::CreateMaybeMessage<::shardora::hotstuff::protobuf::ProposeMsg>(Arena*);
template<> ::shardora::hotstuff::protobuf::VoteMsg* Arena::CreateMaybeMessage<::shardora::hotstuff::protobuf::VoteMsg>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace shardora {
namespace hotstuff {
namespace protobuf {

// ===================================================================

class HotstuffMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shardora.hotstuff.protobuf.HotstuffMessage) */ {
 public:
  HotstuffMessage();
  virtual ~HotstuffMessage();

  HotstuffMessage(const HotstuffMessage& from);

  inline HotstuffMessage& operator=(const HotstuffMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HotstuffMessage(HotstuffMessage&& from) noexcept
    : HotstuffMessage() {
    *this = ::std::move(from);
  }

  inline HotstuffMessage& operator=(HotstuffMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HotstuffMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HotstuffMessage* internal_default_instance() {
    return reinterpret_cast<const HotstuffMessage*>(
               &_HotstuffMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(HotstuffMessage* other);
  friend void swap(HotstuffMessage& a, HotstuffMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HotstuffMessage* New() const final {
    return CreateMaybeMessage<HotstuffMessage>(NULL);
  }

  HotstuffMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HotstuffMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HotstuffMessage& from);
  void MergeFrom(const HotstuffMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HotstuffMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .shardora.hotstuff.protobuf.ProposeMsg pro_msg = 2;
  bool has_pro_msg() const;
  void clear_pro_msg();
  static const int kProMsgFieldNumber = 2;
  private:
  const ::shardora::hotstuff::protobuf::ProposeMsg& _internal_pro_msg() const;
  public:
  const ::shardora::hotstuff::protobuf::ProposeMsg& pro_msg() const;
  ::shardora::hotstuff::protobuf::ProposeMsg* release_pro_msg();
  ::shardora::hotstuff::protobuf::ProposeMsg* mutable_pro_msg();
  void set_allocated_pro_msg(::shardora::hotstuff::protobuf::ProposeMsg* pro_msg);

  // optional .shardora.hotstuff.protobuf.VoteMsg vote_msg = 3;
  bool has_vote_msg() const;
  void clear_vote_msg();
  static const int kVoteMsgFieldNumber = 3;
  private:
  const ::shardora::hotstuff::protobuf::VoteMsg& _internal_vote_msg() const;
  public:
  const ::shardora::hotstuff::protobuf::VoteMsg& vote_msg() const;
  ::shardora::hotstuff::protobuf::VoteMsg* release_vote_msg();
  ::shardora::hotstuff::protobuf::VoteMsg* mutable_vote_msg();
  void set_allocated_vote_msg(::shardora::hotstuff::protobuf::VoteMsg* vote_msg);

  // optional uint32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 net_id = 5;
  bool has_net_id() const;
  void clear_net_id();
  static const int kNetIdFieldNumber = 5;
  ::google::protobuf::uint32 net_id() const;
  void set_net_id(::google::protobuf::uint32 value);

  // optional uint32 pool_index = 8 [default = 4294967295];
  bool has_pool_index() const;
  void clear_pool_index();
  static const int kPoolIndexFieldNumber = 8;
  ::google::protobuf::uint32 pool_index() const;
  void set_pool_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shardora.hotstuff.protobuf.HotstuffMessage)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_pro_msg();
  void clear_has_pro_msg();
  void set_has_vote_msg();
  void clear_has_vote_msg();
  void set_has_net_id();
  void clear_has_net_id();
  void set_has_pool_index();
  void clear_has_pool_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::shardora::hotstuff::protobuf::ProposeMsg* pro_msg_;
  ::shardora::hotstuff::protobuf::VoteMsg* vote_msg_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 net_id_;
  ::google::protobuf::uint32 pool_index_;
  friend struct ::protobuf_protos_2fhotstuff_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProposeMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shardora.hotstuff.protobuf.ProposeMsg) */ {
 public:
  ProposeMsg();
  virtual ~ProposeMsg();

  ProposeMsg(const ProposeMsg& from);

  inline ProposeMsg& operator=(const ProposeMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProposeMsg(ProposeMsg&& from) noexcept
    : ProposeMsg() {
    *this = ::std::move(from);
  }

  inline ProposeMsg& operator=(ProposeMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProposeMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProposeMsg* internal_default_instance() {
    return reinterpret_cast<const ProposeMsg*>(
               &_ProposeMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ProposeMsg* other);
  friend void swap(ProposeMsg& a, ProposeMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProposeMsg* New() const final {
    return CreateMaybeMessage<ProposeMsg>(NULL);
  }

  ProposeMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProposeMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProposeMsg& from);
  void MergeFrom(const ProposeMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProposeMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .shardora.view_block.protobuf.ViewBlockItem view_item = 2;
  bool has_view_item() const;
  void clear_view_item();
  static const int kViewItemFieldNumber = 2;
  private:
  const ::shardora::view_block::protobuf::ViewBlockItem& _internal_view_item() const;
  public:
  const ::shardora::view_block::protobuf::ViewBlockItem& view_item() const;
  ::shardora::view_block::protobuf::ViewBlockItem* release_view_item();
  ::shardora::view_block::protobuf::ViewBlockItem* mutable_view_item();
  void set_allocated_view_item(::shardora::view_block::protobuf::ViewBlockItem* view_item);

  // optional uint32 elect_height = 1;
  bool has_elect_height() const;
  void clear_elect_height();
  static const int kElectHeightFieldNumber = 1;
  ::google::protobuf::uint32 elect_height() const;
  void set_elect_height(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shardora.hotstuff.protobuf.ProposeMsg)
 private:
  void set_has_elect_height();
  void clear_has_elect_height();
  void set_has_view_item();
  void clear_has_view_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::shardora::view_block::protobuf::ViewBlockItem* view_item_;
  ::google::protobuf::uint32 elect_height_;
  friend struct ::protobuf_protos_2fhotstuff_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VoteMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:shardora.hotstuff.protobuf.VoteMsg) */ {
 public:
  VoteMsg();
  virtual ~VoteMsg();

  VoteMsg(const VoteMsg& from);

  inline VoteMsg& operator=(const VoteMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoteMsg(VoteMsg&& from) noexcept
    : VoteMsg() {
    *this = ::std::move(from);
  }

  inline VoteMsg& operator=(VoteMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoteMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VoteMsg* internal_default_instance() {
    return reinterpret_cast<const VoteMsg*>(
               &_VoteMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(VoteMsg* other);
  friend void swap(VoteMsg& a, VoteMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoteMsg* New() const final {
    return CreateMaybeMessage<VoteMsg>(NULL);
  }

  VoteMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VoteMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VoteMsg& from);
  void MergeFrom(const VoteMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoteMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes view_block_hash = 2;
  bool has_view_block_hash() const;
  void clear_view_block_hash();
  static const int kViewBlockHashFieldNumber = 2;
  const ::std::string& view_block_hash() const;
  void set_view_block_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_view_block_hash(::std::string&& value);
  #endif
  void set_view_block_hash(const char* value);
  void set_view_block_hash(const void* value, size_t size);
  ::std::string* mutable_view_block_hash();
  ::std::string* release_view_block_hash();
  void set_allocated_view_block_hash(::std::string* view_block_hash);

  // optional bytes sign_x = 4;
  bool has_sign_x() const;
  void clear_sign_x();
  static const int kSignXFieldNumber = 4;
  const ::std::string& sign_x() const;
  void set_sign_x(const ::std::string& value);
  #if LANG_CXX11
  void set_sign_x(::std::string&& value);
  #endif
  void set_sign_x(const char* value);
  void set_sign_x(const void* value, size_t size);
  ::std::string* mutable_sign_x();
  ::std::string* release_sign_x();
  void set_allocated_sign_x(::std::string* sign_x);

  // optional bytes sign_y = 5;
  bool has_sign_y() const;
  void clear_sign_y();
  static const int kSignYFieldNumber = 5;
  const ::std::string& sign_y() const;
  void set_sign_y(const ::std::string& value);
  #if LANG_CXX11
  void set_sign_y(::std::string&& value);
  #endif
  void set_sign_y(const char* value);
  void set_sign_y(const void* value, size_t size);
  ::std::string* mutable_sign_y();
  ::std::string* release_sign_y();
  void set_allocated_sign_y(::std::string* sign_y);

  // optional uint32 replica_idx = 1;
  bool has_replica_idx() const;
  void clear_replica_idx();
  static const int kReplicaIdxFieldNumber = 1;
  ::google::protobuf::uint32 replica_idx() const;
  void set_replica_idx(::google::protobuf::uint32 value);

  // optional uint32 elect_height = 3;
  bool has_elect_height() const;
  void clear_elect_height();
  static const int kElectHeightFieldNumber = 3;
  ::google::protobuf::uint32 elect_height() const;
  void set_elect_height(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:shardora.hotstuff.protobuf.VoteMsg)
 private:
  void set_has_replica_idx();
  void clear_has_replica_idx();
  void set_has_view_block_hash();
  void clear_has_view_block_hash();
  void set_has_elect_height();
  void clear_has_elect_height();
  void set_has_sign_x();
  void clear_has_sign_x();
  void set_has_sign_y();
  void clear_has_sign_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr view_block_hash_;
  ::google::protobuf::internal::ArenaStringPtr sign_x_;
  ::google::protobuf::internal::ArenaStringPtr sign_y_;
  ::google::protobuf::uint32 replica_idx_;
  ::google::protobuf::uint32 elect_height_;
  friend struct ::protobuf_protos_2fhotstuff_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HotstuffMessage

// optional uint32 type = 1;
inline bool HotstuffMessage::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HotstuffMessage::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HotstuffMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HotstuffMessage::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 HotstuffMessage::type() const {
  // @@protoc_insertion_point(field_get:shardora.hotstuff.protobuf.HotstuffMessage.type)
  return type_;
}
inline void HotstuffMessage::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:shardora.hotstuff.protobuf.HotstuffMessage.type)
}

// optional .shardora.hotstuff.protobuf.ProposeMsg pro_msg = 2;
inline bool HotstuffMessage::has_pro_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HotstuffMessage::set_has_pro_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HotstuffMessage::clear_has_pro_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HotstuffMessage::clear_pro_msg() {
  if (pro_msg_ != NULL) pro_msg_->Clear();
  clear_has_pro_msg();
}
inline const ::shardora::hotstuff::protobuf::ProposeMsg& HotstuffMessage::_internal_pro_msg() const {
  return *pro_msg_;
}
inline const ::shardora::hotstuff::protobuf::ProposeMsg& HotstuffMessage::pro_msg() const {
  const ::shardora::hotstuff::protobuf::ProposeMsg* p = pro_msg_;
  // @@protoc_insertion_point(field_get:shardora.hotstuff.protobuf.HotstuffMessage.pro_msg)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::hotstuff::protobuf::ProposeMsg*>(
      &::shardora::hotstuff::protobuf::_ProposeMsg_default_instance_);
}
inline ::shardora::hotstuff::protobuf::ProposeMsg* HotstuffMessage::release_pro_msg() {
  // @@protoc_insertion_point(field_release:shardora.hotstuff.protobuf.HotstuffMessage.pro_msg)
  clear_has_pro_msg();
  ::shardora::hotstuff::protobuf::ProposeMsg* temp = pro_msg_;
  pro_msg_ = NULL;
  return temp;
}
inline ::shardora::hotstuff::protobuf::ProposeMsg* HotstuffMessage::mutable_pro_msg() {
  set_has_pro_msg();
  if (pro_msg_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::hotstuff::protobuf::ProposeMsg>(GetArenaNoVirtual());
    pro_msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.hotstuff.protobuf.HotstuffMessage.pro_msg)
  return pro_msg_;
}
inline void HotstuffMessage::set_allocated_pro_msg(::shardora::hotstuff::protobuf::ProposeMsg* pro_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pro_msg_;
  }
  if (pro_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pro_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pro_msg, submessage_arena);
    }
    set_has_pro_msg();
  } else {
    clear_has_pro_msg();
  }
  pro_msg_ = pro_msg;
  // @@protoc_insertion_point(field_set_allocated:shardora.hotstuff.protobuf.HotstuffMessage.pro_msg)
}

// optional .shardora.hotstuff.protobuf.VoteMsg vote_msg = 3;
inline bool HotstuffMessage::has_vote_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HotstuffMessage::set_has_vote_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HotstuffMessage::clear_has_vote_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HotstuffMessage::clear_vote_msg() {
  if (vote_msg_ != NULL) vote_msg_->Clear();
  clear_has_vote_msg();
}
inline const ::shardora::hotstuff::protobuf::VoteMsg& HotstuffMessage::_internal_vote_msg() const {
  return *vote_msg_;
}
inline const ::shardora::hotstuff::protobuf::VoteMsg& HotstuffMessage::vote_msg() const {
  const ::shardora::hotstuff::protobuf::VoteMsg* p = vote_msg_;
  // @@protoc_insertion_point(field_get:shardora.hotstuff.protobuf.HotstuffMessage.vote_msg)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::hotstuff::protobuf::VoteMsg*>(
      &::shardora::hotstuff::protobuf::_VoteMsg_default_instance_);
}
inline ::shardora::hotstuff::protobuf::VoteMsg* HotstuffMessage::release_vote_msg() {
  // @@protoc_insertion_point(field_release:shardora.hotstuff.protobuf.HotstuffMessage.vote_msg)
  clear_has_vote_msg();
  ::shardora::hotstuff::protobuf::VoteMsg* temp = vote_msg_;
  vote_msg_ = NULL;
  return temp;
}
inline ::shardora::hotstuff::protobuf::VoteMsg* HotstuffMessage::mutable_vote_msg() {
  set_has_vote_msg();
  if (vote_msg_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::hotstuff::protobuf::VoteMsg>(GetArenaNoVirtual());
    vote_msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.hotstuff.protobuf.HotstuffMessage.vote_msg)
  return vote_msg_;
}
inline void HotstuffMessage::set_allocated_vote_msg(::shardora::hotstuff::protobuf::VoteMsg* vote_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vote_msg_;
  }
  if (vote_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vote_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vote_msg, submessage_arena);
    }
    set_has_vote_msg();
  } else {
    clear_has_vote_msg();
  }
  vote_msg_ = vote_msg;
  // @@protoc_insertion_point(field_set_allocated:shardora.hotstuff.protobuf.HotstuffMessage.vote_msg)
}

// optional uint32 net_id = 5;
inline bool HotstuffMessage::has_net_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HotstuffMessage::set_has_net_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HotstuffMessage::clear_has_net_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HotstuffMessage::clear_net_id() {
  net_id_ = 0u;
  clear_has_net_id();
}
inline ::google::protobuf::uint32 HotstuffMessage::net_id() const {
  // @@protoc_insertion_point(field_get:shardora.hotstuff.protobuf.HotstuffMessage.net_id)
  return net_id_;
}
inline void HotstuffMessage::set_net_id(::google::protobuf::uint32 value) {
  set_has_net_id();
  net_id_ = value;
  // @@protoc_insertion_point(field_set:shardora.hotstuff.protobuf.HotstuffMessage.net_id)
}

// optional uint32 pool_index = 8 [default = 4294967295];
inline bool HotstuffMessage::has_pool_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HotstuffMessage::set_has_pool_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HotstuffMessage::clear_has_pool_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HotstuffMessage::clear_pool_index() {
  pool_index_ = 4294967295u;
  clear_has_pool_index();
}
inline ::google::protobuf::uint32 HotstuffMessage::pool_index() const {
  // @@protoc_insertion_point(field_get:shardora.hotstuff.protobuf.HotstuffMessage.pool_index)
  return pool_index_;
}
inline void HotstuffMessage::set_pool_index(::google::protobuf::uint32 value) {
  set_has_pool_index();
  pool_index_ = value;
  // @@protoc_insertion_point(field_set:shardora.hotstuff.protobuf.HotstuffMessage.pool_index)
}

// -------------------------------------------------------------------

// ProposeMsg

// optional uint32 elect_height = 1;
inline bool ProposeMsg::has_elect_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProposeMsg::set_has_elect_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProposeMsg::clear_has_elect_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProposeMsg::clear_elect_height() {
  elect_height_ = 0u;
  clear_has_elect_height();
}
inline ::google::protobuf::uint32 ProposeMsg::elect_height() const {
  // @@protoc_insertion_point(field_get:shardora.hotstuff.protobuf.ProposeMsg.elect_height)
  return elect_height_;
}
inline void ProposeMsg::set_elect_height(::google::protobuf::uint32 value) {
  set_has_elect_height();
  elect_height_ = value;
  // @@protoc_insertion_point(field_set:shardora.hotstuff.protobuf.ProposeMsg.elect_height)
}

// optional .shardora.view_block.protobuf.ViewBlockItem view_item = 2;
inline bool ProposeMsg::has_view_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProposeMsg::set_has_view_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProposeMsg::clear_has_view_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::shardora::view_block::protobuf::ViewBlockItem& ProposeMsg::_internal_view_item() const {
  return *view_item_;
}
inline const ::shardora::view_block::protobuf::ViewBlockItem& ProposeMsg::view_item() const {
  const ::shardora::view_block::protobuf::ViewBlockItem* p = view_item_;
  // @@protoc_insertion_point(field_get:shardora.hotstuff.protobuf.ProposeMsg.view_item)
  return p != NULL ? *p : *reinterpret_cast<const ::shardora::view_block::protobuf::ViewBlockItem*>(
      &::shardora::view_block::protobuf::_ViewBlockItem_default_instance_);
}
inline ::shardora::view_block::protobuf::ViewBlockItem* ProposeMsg::release_view_item() {
  // @@protoc_insertion_point(field_release:shardora.hotstuff.protobuf.ProposeMsg.view_item)
  clear_has_view_item();
  ::shardora::view_block::protobuf::ViewBlockItem* temp = view_item_;
  view_item_ = NULL;
  return temp;
}
inline ::shardora::view_block::protobuf::ViewBlockItem* ProposeMsg::mutable_view_item() {
  set_has_view_item();
  if (view_item_ == NULL) {
    auto* p = CreateMaybeMessage<::shardora::view_block::protobuf::ViewBlockItem>(GetArenaNoVirtual());
    view_item_ = p;
  }
  // @@protoc_insertion_point(field_mutable:shardora.hotstuff.protobuf.ProposeMsg.view_item)
  return view_item_;
}
inline void ProposeMsg::set_allocated_view_item(::shardora::view_block::protobuf::ViewBlockItem* view_item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(view_item_);
  }
  if (view_item) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      view_item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, view_item, submessage_arena);
    }
    set_has_view_item();
  } else {
    clear_has_view_item();
  }
  view_item_ = view_item;
  // @@protoc_insertion_point(field_set_allocated:shardora.hotstuff.protobuf.ProposeMsg.view_item)
}

// -------------------------------------------------------------------

// VoteMsg

// optional uint32 replica_idx = 1;
inline bool VoteMsg::has_replica_idx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VoteMsg::set_has_replica_idx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VoteMsg::clear_has_replica_idx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VoteMsg::clear_replica_idx() {
  replica_idx_ = 0u;
  clear_has_replica_idx();
}
inline ::google::protobuf::uint32 VoteMsg::replica_idx() const {
  // @@protoc_insertion_point(field_get:shardora.hotstuff.protobuf.VoteMsg.replica_idx)
  return replica_idx_;
}
inline void VoteMsg::set_replica_idx(::google::protobuf::uint32 value) {
  set_has_replica_idx();
  replica_idx_ = value;
  // @@protoc_insertion_point(field_set:shardora.hotstuff.protobuf.VoteMsg.replica_idx)
}

// optional bytes view_block_hash = 2;
inline bool VoteMsg::has_view_block_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoteMsg::set_has_view_block_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoteMsg::clear_has_view_block_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoteMsg::clear_view_block_hash() {
  view_block_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_view_block_hash();
}
inline const ::std::string& VoteMsg::view_block_hash() const {
  // @@protoc_insertion_point(field_get:shardora.hotstuff.protobuf.VoteMsg.view_block_hash)
  return view_block_hash_.GetNoArena();
}
inline void VoteMsg::set_view_block_hash(const ::std::string& value) {
  set_has_view_block_hash();
  view_block_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shardora.hotstuff.protobuf.VoteMsg.view_block_hash)
}
#if LANG_CXX11
inline void VoteMsg::set_view_block_hash(::std::string&& value) {
  set_has_view_block_hash();
  view_block_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shardora.hotstuff.protobuf.VoteMsg.view_block_hash)
}
#endif
inline void VoteMsg::set_view_block_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_view_block_hash();
  view_block_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shardora.hotstuff.protobuf.VoteMsg.view_block_hash)
}
inline void VoteMsg::set_view_block_hash(const void* value, size_t size) {
  set_has_view_block_hash();
  view_block_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shardora.hotstuff.protobuf.VoteMsg.view_block_hash)
}
inline ::std::string* VoteMsg::mutable_view_block_hash() {
  set_has_view_block_hash();
  // @@protoc_insertion_point(field_mutable:shardora.hotstuff.protobuf.VoteMsg.view_block_hash)
  return view_block_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoteMsg::release_view_block_hash() {
  // @@protoc_insertion_point(field_release:shardora.hotstuff.protobuf.VoteMsg.view_block_hash)
  if (!has_view_block_hash()) {
    return NULL;
  }
  clear_has_view_block_hash();
  return view_block_hash_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoteMsg::set_allocated_view_block_hash(::std::string* view_block_hash) {
  if (view_block_hash != NULL) {
    set_has_view_block_hash();
  } else {
    clear_has_view_block_hash();
  }
  view_block_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), view_block_hash);
  // @@protoc_insertion_point(field_set_allocated:shardora.hotstuff.protobuf.VoteMsg.view_block_hash)
}

// optional uint32 elect_height = 3;
inline bool VoteMsg::has_elect_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VoteMsg::set_has_elect_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VoteMsg::clear_has_elect_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VoteMsg::clear_elect_height() {
  elect_height_ = 0u;
  clear_has_elect_height();
}
inline ::google::protobuf::uint32 VoteMsg::elect_height() const {
  // @@protoc_insertion_point(field_get:shardora.hotstuff.protobuf.VoteMsg.elect_height)
  return elect_height_;
}
inline void VoteMsg::set_elect_height(::google::protobuf::uint32 value) {
  set_has_elect_height();
  elect_height_ = value;
  // @@protoc_insertion_point(field_set:shardora.hotstuff.protobuf.VoteMsg.elect_height)
}

// optional bytes sign_x = 4;
inline bool VoteMsg::has_sign_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VoteMsg::set_has_sign_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VoteMsg::clear_has_sign_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VoteMsg::clear_sign_x() {
  sign_x_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sign_x();
}
inline const ::std::string& VoteMsg::sign_x() const {
  // @@protoc_insertion_point(field_get:shardora.hotstuff.protobuf.VoteMsg.sign_x)
  return sign_x_.GetNoArena();
}
inline void VoteMsg::set_sign_x(const ::std::string& value) {
  set_has_sign_x();
  sign_x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shardora.hotstuff.protobuf.VoteMsg.sign_x)
}
#if LANG_CXX11
inline void VoteMsg::set_sign_x(::std::string&& value) {
  set_has_sign_x();
  sign_x_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shardora.hotstuff.protobuf.VoteMsg.sign_x)
}
#endif
inline void VoteMsg::set_sign_x(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sign_x();
  sign_x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shardora.hotstuff.protobuf.VoteMsg.sign_x)
}
inline void VoteMsg::set_sign_x(const void* value, size_t size) {
  set_has_sign_x();
  sign_x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shardora.hotstuff.protobuf.VoteMsg.sign_x)
}
inline ::std::string* VoteMsg::mutable_sign_x() {
  set_has_sign_x();
  // @@protoc_insertion_point(field_mutable:shardora.hotstuff.protobuf.VoteMsg.sign_x)
  return sign_x_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoteMsg::release_sign_x() {
  // @@protoc_insertion_point(field_release:shardora.hotstuff.protobuf.VoteMsg.sign_x)
  if (!has_sign_x()) {
    return NULL;
  }
  clear_has_sign_x();
  return sign_x_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoteMsg::set_allocated_sign_x(::std::string* sign_x) {
  if (sign_x != NULL) {
    set_has_sign_x();
  } else {
    clear_has_sign_x();
  }
  sign_x_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign_x);
  // @@protoc_insertion_point(field_set_allocated:shardora.hotstuff.protobuf.VoteMsg.sign_x)
}

// optional bytes sign_y = 5;
inline bool VoteMsg::has_sign_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VoteMsg::set_has_sign_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VoteMsg::clear_has_sign_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VoteMsg::clear_sign_y() {
  sign_y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sign_y();
}
inline const ::std::string& VoteMsg::sign_y() const {
  // @@protoc_insertion_point(field_get:shardora.hotstuff.protobuf.VoteMsg.sign_y)
  return sign_y_.GetNoArena();
}
inline void VoteMsg::set_sign_y(const ::std::string& value) {
  set_has_sign_y();
  sign_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:shardora.hotstuff.protobuf.VoteMsg.sign_y)
}
#if LANG_CXX11
inline void VoteMsg::set_sign_y(::std::string&& value) {
  set_has_sign_y();
  sign_y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:shardora.hotstuff.protobuf.VoteMsg.sign_y)
}
#endif
inline void VoteMsg::set_sign_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sign_y();
  sign_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:shardora.hotstuff.protobuf.VoteMsg.sign_y)
}
inline void VoteMsg::set_sign_y(const void* value, size_t size) {
  set_has_sign_y();
  sign_y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:shardora.hotstuff.protobuf.VoteMsg.sign_y)
}
inline ::std::string* VoteMsg::mutable_sign_y() {
  set_has_sign_y();
  // @@protoc_insertion_point(field_mutable:shardora.hotstuff.protobuf.VoteMsg.sign_y)
  return sign_y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoteMsg::release_sign_y() {
  // @@protoc_insertion_point(field_release:shardora.hotstuff.protobuf.VoteMsg.sign_y)
  if (!has_sign_y()) {
    return NULL;
  }
  clear_has_sign_y();
  return sign_y_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoteMsg::set_allocated_sign_y(::std::string* sign_y) {
  if (sign_y != NULL) {
    set_has_sign_y();
  } else {
    clear_has_sign_y();
  }
  sign_y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign_y);
  // @@protoc_insertion_point(field_set_allocated:shardora.hotstuff.protobuf.VoteMsg.sign_y)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace hotstuff
}  // namespace shardora

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protos_2fhotstuff_2eproto
