// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/view_block.proto

#include "protos/view_block.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protos_2fblock_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fblock_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Block;
}  // namespace protobuf_protos_2fblock_2eproto
namespace protobuf_protos_2fview_5fblock_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fview_5fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AggregateSig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fview_5fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MemberConsensusStat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fview_5fblock_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SingleViewBlockSyncRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fview_5fblock_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_QcItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fview_5fblock_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ViewBlockSyncRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fview_5fblock_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ViewBlockSyncResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protos_2fview_5fblock_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ViewBlockItem;
}  // namespace protobuf_protos_2fview_5fblock_2eproto
namespace shardora {
namespace view_block {
namespace protobuf {
class QcItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QcItem>
      _instance;
} _QcItem_default_instance_;
class ViewBlockItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ViewBlockItem>
      _instance;
} _ViewBlockItem_default_instance_;
class MemberConsensusStatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemberConsensusStat>
      _instance;
} _MemberConsensusStat_default_instance_;
class AggregateSigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AggregateSig>
      _instance;
} _AggregateSig_default_instance_;
class ViewBlockSyncRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ViewBlockSyncRequest>
      _instance;
} _ViewBlockSyncRequest_default_instance_;
class ViewBlockSyncResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ViewBlockSyncResponse>
      _instance;
} _ViewBlockSyncResponse_default_instance_;
class SingleViewBlockSyncRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SingleViewBlockSyncRequest>
      _instance;
} _SingleViewBlockSyncRequest_default_instance_;
class ViewBlockSyncMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ViewBlockSyncMessage>
      _instance;
} _ViewBlockSyncMessage_default_instance_;
class TimeoutMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeoutMessage>
      _instance;
} _TimeoutMessage_default_instance_;
}  // namespace protobuf
}  // namespace view_block
}  // namespace shardora
namespace protobuf_protos_2fview_5fblock_2eproto {
static void InitDefaultsQcItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::view_block::protobuf::_QcItem_default_instance_;
    new (ptr) ::shardora::view_block::protobuf::QcItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::view_block::protobuf::QcItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QcItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQcItem}, {
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_AggregateSig.base,}};

static void InitDefaultsViewBlockItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::view_block::protobuf::_ViewBlockItem_default_instance_;
    new (ptr) ::shardora::view_block::protobuf::ViewBlockItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::view_block::protobuf::ViewBlockItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ViewBlockItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsViewBlockItem}, {
      &protobuf_protos_2fblock_2eproto::scc_info_Block.base,
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_QcItem.base,
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_MemberConsensusStat.base,}};

static void InitDefaultsMemberConsensusStat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::view_block::protobuf::_MemberConsensusStat_default_instance_;
    new (ptr) ::shardora::view_block::protobuf::MemberConsensusStat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::view_block::protobuf::MemberConsensusStat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MemberConsensusStat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMemberConsensusStat}, {}};

static void InitDefaultsAggregateSig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::view_block::protobuf::_AggregateSig_default_instance_;
    new (ptr) ::shardora::view_block::protobuf::AggregateSig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::view_block::protobuf::AggregateSig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AggregateSig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAggregateSig}, {}};

static void InitDefaultsViewBlockSyncRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::view_block::protobuf::_ViewBlockSyncRequest_default_instance_;
    new (ptr) ::shardora::view_block::protobuf::ViewBlockSyncRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::view_block::protobuf::ViewBlockSyncRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ViewBlockSyncRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsViewBlockSyncRequest}, {
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_ViewBlockItem.base,}};

static void InitDefaultsViewBlockSyncResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::view_block::protobuf::_ViewBlockSyncResponse_default_instance_;
    new (ptr) ::shardora::view_block::protobuf::ViewBlockSyncResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::view_block::protobuf::ViewBlockSyncResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ViewBlockSyncResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsViewBlockSyncResponse}, {
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_ViewBlockItem.base,
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_QcItem.base,}};

static void InitDefaultsSingleViewBlockSyncRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::view_block::protobuf::_SingleViewBlockSyncRequest_default_instance_;
    new (ptr) ::shardora::view_block::protobuf::SingleViewBlockSyncRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::view_block::protobuf::SingleViewBlockSyncRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SingleViewBlockSyncRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSingleViewBlockSyncRequest}, {}};

static void InitDefaultsViewBlockSyncMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::view_block::protobuf::_ViewBlockSyncMessage_default_instance_;
    new (ptr) ::shardora::view_block::protobuf::ViewBlockSyncMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::view_block::protobuf::ViewBlockSyncMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ViewBlockSyncMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsViewBlockSyncMessage}, {
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_ViewBlockSyncRequest.base,
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_ViewBlockSyncResponse.base,
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_SingleViewBlockSyncRequest.base,}};

static void InitDefaultsTimeoutMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::shardora::view_block::protobuf::_TimeoutMessage_default_instance_;
    new (ptr) ::shardora::view_block::protobuf::TimeoutMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::shardora::view_block::protobuf::TimeoutMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TimeoutMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTimeoutMessage}, {
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_AggregateSig.base,
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_QcItem.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_QcItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ViewBlockItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemberConsensusStat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AggregateSig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ViewBlockSyncRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ViewBlockSyncResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SingleViewBlockSyncRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ViewBlockSyncMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TimeoutMessage.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::QcItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::QcItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::QcItem, sign_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::QcItem, sign_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::QcItem, sign_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::QcItem, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::QcItem, view_block_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::QcItem, elect_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::QcItem, leader_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::QcItem, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::QcItem, pool_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::QcItem, agg_sig_),
  0,
  1,
  2,
  5,
  3,
  6,
  7,
  8,
  9,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockItem, parent_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockItem, block_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockItem, qc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockItem, leader_consen_stat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockItem, debug_),
  0,
  2,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::MemberConsensusStat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::MemberConsensusStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::MemberConsensusStat, succ_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::MemberConsensusStat, fail_num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::AggregateSig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::AggregateSig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::AggregateSig, sign_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::AggregateSig, sign_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::AggregateSig, sign_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::AggregateSig, participants_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncRequest, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncRequest, pool_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncRequest, view_block_hashes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncRequest, high_qc_view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncRequest, high_tc_view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncRequest, max_view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncRequest, latest_committed_block_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncRequest, view_blocks_),
  1,
  2,
  ~0u,
  3,
  4,
  5,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncResponse, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncResponse, pool_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncResponse, view_block_items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncResponse, high_view_block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncResponse, high_tc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncResponse, query_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncResponse, latest_committed_block_),
  4,
  5,
  ~0u,
  1,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::SingleViewBlockSyncRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::SingleViewBlockSyncRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::SingleViewBlockSyncRequest, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::SingleViewBlockSyncRequest, pool_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::SingleViewBlockSyncRequest, query_hash_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncMessage, view_block_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncMessage, view_block_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncMessage, single_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncMessage, create_time_us_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncMessage, src_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::ViewBlockSyncMessage, src_port_),
  1,
  2,
  3,
  4,
  0,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, member_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, view_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, sign_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, sign_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, view_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, elect_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, pool_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, leader_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, view_sig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, high_qc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::shardora::view_block::protobuf::TimeoutMessage, high_qc_sig_),
  7,
  6,
  0,
  1,
  2,
  9,
  8,
  10,
  3,
  4,
  5,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::shardora::view_block::protobuf::QcItem)},
  { 25, 35, sizeof(::shardora::view_block::protobuf::ViewBlockItem)},
  { 40, 47, sizeof(::shardora::view_block::protobuf::MemberConsensusStat)},
  { 49, 58, sizeof(::shardora::view_block::protobuf::AggregateSig)},
  { 62, 75, sizeof(::shardora::view_block::protobuf::ViewBlockSyncRequest)},
  { 83, 95, sizeof(::shardora::view_block::protobuf::ViewBlockSyncResponse)},
  { 102, 110, sizeof(::shardora::view_block::protobuf::SingleViewBlockSyncRequest)},
  { 113, 124, sizeof(::shardora::view_block::protobuf::ViewBlockSyncMessage)},
  { 130, 146, sizeof(::shardora::view_block::protobuf::TimeoutMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::view_block::protobuf::_QcItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::view_block::protobuf::_ViewBlockItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::view_block::protobuf::_MemberConsensusStat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::view_block::protobuf::_AggregateSig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::view_block::protobuf::_ViewBlockSyncRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::view_block::protobuf::_ViewBlockSyncResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::view_block::protobuf::_SingleViewBlockSyncRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::view_block::protobuf::_ViewBlockSyncMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::shardora::view_block::protobuf::_TimeoutMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protos/view_block.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027protos/view_block.proto\022\034shardora.view"
      "_block.protobuf\032\022protos/block.proto\"\356\001\n\006"
      "QcItem\022\016\n\006sign_x\030\001 \001(\014\022\016\n\006sign_y\030\002 \001(\014\022\016"
      "\n\006sign_z\030\003 \001(\014\022\014\n\004view\030\004 \001(\004\022\027\n\017view_blo"
      "ck_hash\030\005 \001(\014\022\024\n\014elect_height\030\006 \001(\004\022\022\n\nl"
      "eader_idx\030\007 \001(\r\022\022\n\nnetwork_id\030\010 \001(\r\022\022\n\np"
      "ool_index\030\t \001(\r\022;\n\007agg_sig\030\n \001(\0132*.shard"
      "ora.view_block.protobuf.AggregateSig\"\350\001\n"
      "\rViewBlockItem\022\023\n\013parent_hash\030\001 \001(\014\0222\n\nb"
      "lock_info\030\002 \001(\0132\036.shardora.block.protobu"
      "f.Block\0220\n\002qc\030\003 \001(\0132$.shardora.view_bloc"
      "k.protobuf.QcItem\022M\n\022leader_consen_stat\030"
      "\004 \001(\01321.shardora.view_block.protobuf.Mem"
      "berConsensusStat\022\r\n\005debug\030\005 \001(\014\"9\n\023Membe"
      "rConsensusStat\022\020\n\010succ_num\030\001 \001(\r\022\020\n\010fail"
      "_num\030\002 \001(\r\"T\n\014AggregateSig\022\016\n\006sign_x\030\001 \001"
      "(\014\022\016\n\006sign_y\030\002 \001(\014\022\016\n\006sign_z\030\003 \001(\014\022\024\n\014pa"
      "rticipants\030\004 \003(\r\"\374\001\n\024ViewBlockSyncReques"
      "t\022\022\n\nnetwork_id\030\001 \001(\r\022\020\n\010pool_idx\030\002 \001(\r\022"
      "\031\n\021view_block_hashes\030\003 \003(\014\022\024\n\014high_qc_vi"
      "ew\030\004 \001(\004\022\024\n\014high_tc_view\030\005 \001(\004\022\020\n\010max_vi"
      "ew\030\006 \001(\004\022#\n\033latest_committed_block_hash\030"
      "\007 \001(\014\022@\n\013view_blocks\030\010 \003(\0132+.shardora.vi"
      "ew_block.protobuf.ViewBlockItem\"\342\002\n\025View"
      "BlockSyncResponse\022\022\n\nnetwork_id\030\001 \001(\r\022\020\n"
      "\010pool_idx\030\002 \001(\r\022E\n\020view_block_items\030\003 \003("
      "\0132+.shardora.view_block.protobuf.ViewBlo"
      "ckItem\022D\n\017high_view_block\030\004 \001(\0132+.shardo"
      "ra.view_block.protobuf.ViewBlockItem\0225\n\007"
      "high_tc\030\005 \001(\0132$.shardora.view_block.prot"
      "obuf.QcItem\022\022\n\nquery_hash\030\006 \001(\014\022K\n\026lates"
      "t_committed_block\030\007 \001(\0132+.shardora.view_"
      "block.protobuf.ViewBlockItem\"V\n\032SingleVi"
      "ewBlockSyncRequest\022\022\n\nnetwork_id\030\001 \001(\r\022\020"
      "\n\010pool_idx\030\002 \001(\r\022\022\n\nquery_hash\030\003 \001(\014\"\267\002\n"
      "\024ViewBlockSyncMessage\022J\n\016view_block_req\030"
      "\001 \001(\01322.shardora.view_block.protobuf.Vie"
      "wBlockSyncRequest\022K\n\016view_block_res\030\002 \001("
      "\01323.shardora.view_block.protobuf.ViewBlo"
      "ckSyncResponse\022L\n\nsingle_req\030\003 \001(\01328.sha"
      "rdora.view_block.protobuf.SingleViewBloc"
      "kSyncRequest\022\026\n\016create_time_us\030\004 \001(\r\022\016\n\006"
      "src_ip\030\005 \001(\014\022\020\n\010src_port\030\006 \001(\r\"\326\002\n\016Timeo"
      "utMessage\022\021\n\tmember_id\030\001 \001(\r\022\014\n\004view\030\002 \001"
      "(\004\022\016\n\006sign_x\030\003 \001(\014\022\016\n\006sign_y\030\004 \001(\014\022\021\n\tvi"
      "ew_hash\030\005 \001(\014\022\024\n\014elect_height\030\006 \001(\004\022\020\n\010p"
      "ool_idx\030\007 \001(\r\022\022\n\nleader_idx\030\010 \001(\r\022<\n\010vie"
      "w_sig\030\t \001(\0132*.shardora.view_block.protob"
      "uf.AggregateSig\0225\n\007high_qc\030\n \001(\0132$.shard"
      "ora.view_block.protobuf.QcItem\022\?\n\013high_q"
      "c_sig\030\013 \001(\0132*.shardora.view_block.protob"
      "uf.AggregateSig"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2055);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protos/view_block.proto", &protobuf_RegisterTypes);
  ::protobuf_protos_2fblock_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protos_2fview_5fblock_2eproto
namespace shardora {
namespace view_block {
namespace protobuf {

// ===================================================================

void QcItem::InitAsDefaultInstance() {
  ::shardora::view_block::protobuf::_QcItem_default_instance_._instance.get_mutable()->agg_sig_ = const_cast< ::shardora::view_block::protobuf::AggregateSig*>(
      ::shardora::view_block::protobuf::AggregateSig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QcItem::kSignXFieldNumber;
const int QcItem::kSignYFieldNumber;
const int QcItem::kSignZFieldNumber;
const int QcItem::kViewFieldNumber;
const int QcItem::kViewBlockHashFieldNumber;
const int QcItem::kElectHeightFieldNumber;
const int QcItem::kLeaderIdxFieldNumber;
const int QcItem::kNetworkIdFieldNumber;
const int QcItem::kPoolIndexFieldNumber;
const int QcItem::kAggSigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QcItem::QcItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_QcItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.view_block.protobuf.QcItem)
}
QcItem::QcItem(const QcItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sign_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_x()) {
    sign_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_x_);
  }
  sign_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_y()) {
    sign_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_y_);
  }
  sign_z_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_z()) {
    sign_z_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_z_);
  }
  view_block_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_view_block_hash()) {
    view_block_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_block_hash_);
  }
  if (from.has_agg_sig()) {
    agg_sig_ = new ::shardora::view_block::protobuf::AggregateSig(*from.agg_sig_);
  } else {
    agg_sig_ = NULL;
  }
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&pool_index_) -
    reinterpret_cast<char*>(&view_)) + sizeof(pool_index_));
  // @@protoc_insertion_point(copy_constructor:shardora.view_block.protobuf.QcItem)
}

void QcItem::SharedCtor() {
  sign_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_z_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_block_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&agg_sig_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pool_index_) -
      reinterpret_cast<char*>(&agg_sig_)) + sizeof(pool_index_));
}

QcItem::~QcItem() {
  // @@protoc_insertion_point(destructor:shardora.view_block.protobuf.QcItem)
  SharedDtor();
}

void QcItem::SharedDtor() {
  sign_x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_z_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_block_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete agg_sig_;
}

void QcItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QcItem::descriptor() {
  ::protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QcItem& QcItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fview_5fblock_2eproto::scc_info_QcItem.base);
  return *internal_default_instance();
}


void QcItem::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.view_block.protobuf.QcItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      sign_x_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sign_y_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      sign_z_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      view_block_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(agg_sig_ != NULL);
      agg_sig_->Clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&leader_idx_) -
        reinterpret_cast<char*>(&view_)) + sizeof(leader_idx_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&network_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pool_index_) -
        reinterpret_cast<char*>(&network_id_)) + sizeof(pool_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QcItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.view_block.protobuf.QcItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sign_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_x()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sign_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_y()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sign_z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_z()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 view = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes view_block_hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_view_block_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 elect_height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_elect_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elect_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 leader_idx = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_leader_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leader_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 network_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_network_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pool_index = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_pool_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pool_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.view_block.protobuf.AggregateSig agg_sig = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_agg_sig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.view_block.protobuf.QcItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.view_block.protobuf.QcItem)
  return false;
#undef DO_
}

void QcItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.view_block.protobuf.QcItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sign_x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sign_x(), output);
  }

  // optional bytes sign_y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sign_y(), output);
  }

  // optional bytes sign_z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sign_z(), output);
  }

  // optional uint64 view = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->view(), output);
  }

  // optional bytes view_block_hash = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->view_block_hash(), output);
  }

  // optional uint64 elect_height = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->elect_height(), output);
  }

  // optional uint32 leader_idx = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->leader_idx(), output);
  }

  // optional uint32 network_id = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->network_id(), output);
  }

  // optional uint32 pool_index = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->pool_index(), output);
  }

  // optional .shardora.view_block.protobuf.AggregateSig agg_sig = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_agg_sig(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.view_block.protobuf.QcItem)
}

::google::protobuf::uint8* QcItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.view_block.protobuf.QcItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sign_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sign_x(), target);
  }

  // optional bytes sign_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->sign_y(), target);
  }

  // optional bytes sign_z = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sign_z(), target);
  }

  // optional uint64 view = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->view(), target);
  }

  // optional bytes view_block_hash = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->view_block_hash(), target);
  }

  // optional uint64 elect_height = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->elect_height(), target);
  }

  // optional uint32 leader_idx = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->leader_idx(), target);
  }

  // optional uint32 network_id = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->network_id(), target);
  }

  // optional uint32 pool_index = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->pool_index(), target);
  }

  // optional .shardora.view_block.protobuf.AggregateSig agg_sig = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_agg_sig(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.view_block.protobuf.QcItem)
  return target;
}

size_t QcItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.view_block.protobuf.QcItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes sign_x = 1;
    if (has_sign_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_x());
    }

    // optional bytes sign_y = 2;
    if (has_sign_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_y());
    }

    // optional bytes sign_z = 3;
    if (has_sign_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_z());
    }

    // optional bytes view_block_hash = 5;
    if (has_view_block_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->view_block_hash());
    }

    // optional .shardora.view_block.protobuf.AggregateSig agg_sig = 10;
    if (has_agg_sig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *agg_sig_);
    }

    // optional uint64 view = 4;
    if (has_view()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->view());
    }

    // optional uint64 elect_height = 6;
    if (has_elect_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->elect_height());
    }

    // optional uint32 leader_idx = 7;
    if (has_leader_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->leader_idx());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint32 network_id = 8;
    if (has_network_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_id());
    }

    // optional uint32 pool_index = 9;
    if (has_pool_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pool_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QcItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.view_block.protobuf.QcItem)
  GOOGLE_DCHECK_NE(&from, this);
  const QcItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QcItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.view_block.protobuf.QcItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.view_block.protobuf.QcItem)
    MergeFrom(*source);
  }
}

void QcItem::MergeFrom(const QcItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.view_block.protobuf.QcItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sign_x();
      sign_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_x_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sign_y();
      sign_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_y_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sign_z();
      sign_z_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_z_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_view_block_hash();
      view_block_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_block_hash_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_agg_sig()->::shardora::view_block::protobuf::AggregateSig::MergeFrom(from.agg_sig());
    }
    if (cached_has_bits & 0x00000020u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000040u) {
      elect_height_ = from.elect_height_;
    }
    if (cached_has_bits & 0x00000080u) {
      leader_idx_ = from.leader_idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      network_id_ = from.network_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      pool_index_ = from.pool_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QcItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.view_block.protobuf.QcItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QcItem::CopyFrom(const QcItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.view_block.protobuf.QcItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QcItem::IsInitialized() const {
  return true;
}

void QcItem::Swap(QcItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QcItem::InternalSwap(QcItem* other) {
  using std::swap;
  sign_x_.Swap(&other->sign_x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_y_.Swap(&other->sign_y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_z_.Swap(&other->sign_z_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  view_block_hash_.Swap(&other->view_block_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(agg_sig_, other->agg_sig_);
  swap(view_, other->view_);
  swap(elect_height_, other->elect_height_);
  swap(leader_idx_, other->leader_idx_);
  swap(network_id_, other->network_id_);
  swap(pool_index_, other->pool_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QcItem::GetMetadata() const {
  protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ViewBlockItem::InitAsDefaultInstance() {
  ::shardora::view_block::protobuf::_ViewBlockItem_default_instance_._instance.get_mutable()->block_info_ = const_cast< ::shardora::block::protobuf::Block*>(
      ::shardora::block::protobuf::Block::internal_default_instance());
  ::shardora::view_block::protobuf::_ViewBlockItem_default_instance_._instance.get_mutable()->qc_ = const_cast< ::shardora::view_block::protobuf::QcItem*>(
      ::shardora::view_block::protobuf::QcItem::internal_default_instance());
  ::shardora::view_block::protobuf::_ViewBlockItem_default_instance_._instance.get_mutable()->leader_consen_stat_ = const_cast< ::shardora::view_block::protobuf::MemberConsensusStat*>(
      ::shardora::view_block::protobuf::MemberConsensusStat::internal_default_instance());
}
void ViewBlockItem::clear_block_info() {
  if (block_info_ != NULL) block_info_->Clear();
  clear_has_block_info();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewBlockItem::kParentHashFieldNumber;
const int ViewBlockItem::kBlockInfoFieldNumber;
const int ViewBlockItem::kQcFieldNumber;
const int ViewBlockItem::kLeaderConsenStatFieldNumber;
const int ViewBlockItem::kDebugFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewBlockItem::ViewBlockItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_ViewBlockItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.view_block.protobuf.ViewBlockItem)
}
ViewBlockItem::ViewBlockItem(const ViewBlockItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_parent_hash()) {
    parent_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_hash_);
  }
  debug_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_debug()) {
    debug_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debug_);
  }
  if (from.has_block_info()) {
    block_info_ = new ::shardora::block::protobuf::Block(*from.block_info_);
  } else {
    block_info_ = NULL;
  }
  if (from.has_qc()) {
    qc_ = new ::shardora::view_block::protobuf::QcItem(*from.qc_);
  } else {
    qc_ = NULL;
  }
  if (from.has_leader_consen_stat()) {
    leader_consen_stat_ = new ::shardora::view_block::protobuf::MemberConsensusStat(*from.leader_consen_stat_);
  } else {
    leader_consen_stat_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:shardora.view_block.protobuf.ViewBlockItem)
}

void ViewBlockItem::SharedCtor() {
  parent_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  debug_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&block_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leader_consen_stat_) -
      reinterpret_cast<char*>(&block_info_)) + sizeof(leader_consen_stat_));
}

ViewBlockItem::~ViewBlockItem() {
  // @@protoc_insertion_point(destructor:shardora.view_block.protobuf.ViewBlockItem)
  SharedDtor();
}

void ViewBlockItem::SharedDtor() {
  parent_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  debug_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete block_info_;
  if (this != internal_default_instance()) delete qc_;
  if (this != internal_default_instance()) delete leader_consen_stat_;
}

void ViewBlockItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ViewBlockItem::descriptor() {
  ::protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewBlockItem& ViewBlockItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fview_5fblock_2eproto::scc_info_ViewBlockItem.base);
  return *internal_default_instance();
}


void ViewBlockItem::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.view_block.protobuf.ViewBlockItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      parent_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      debug_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(block_info_ != NULL);
      block_info_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(qc_ != NULL);
      qc_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(leader_consen_stat_ != NULL);
      leader_consen_stat_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ViewBlockItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.view_block.protobuf.ViewBlockItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes parent_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_parent_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.block.protobuf.Block block_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_block_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.view_block.protobuf.QcItem qc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_qc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.view_block.protobuf.MemberConsensusStat leader_consen_stat = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_leader_consen_stat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes debug = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_debug()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.view_block.protobuf.ViewBlockItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.view_block.protobuf.ViewBlockItem)
  return false;
#undef DO_
}

void ViewBlockItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.view_block.protobuf.ViewBlockItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes parent_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->parent_hash(), output);
  }

  // optional .shardora.block.protobuf.Block block_info = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_block_info(), output);
  }

  // optional .shardora.view_block.protobuf.QcItem qc = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_qc(), output);
  }

  // optional .shardora.view_block.protobuf.MemberConsensusStat leader_consen_stat = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_leader_consen_stat(), output);
  }

  // optional bytes debug = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->debug(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.view_block.protobuf.ViewBlockItem)
}

::google::protobuf::uint8* ViewBlockItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.view_block.protobuf.ViewBlockItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes parent_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->parent_hash(), target);
  }

  // optional .shardora.block.protobuf.Block block_info = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_block_info(), deterministic, target);
  }

  // optional .shardora.view_block.protobuf.QcItem qc = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_qc(), deterministic, target);
  }

  // optional .shardora.view_block.protobuf.MemberConsensusStat leader_consen_stat = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_leader_consen_stat(), deterministic, target);
  }

  // optional bytes debug = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->debug(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.view_block.protobuf.ViewBlockItem)
  return target;
}

size_t ViewBlockItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.view_block.protobuf.ViewBlockItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes parent_hash = 1;
    if (has_parent_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->parent_hash());
    }

    // optional bytes debug = 5;
    if (has_debug()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->debug());
    }

    // optional .shardora.block.protobuf.Block block_info = 2;
    if (has_block_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *block_info_);
    }

    // optional .shardora.view_block.protobuf.QcItem qc = 3;
    if (has_qc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *qc_);
    }

    // optional .shardora.view_block.protobuf.MemberConsensusStat leader_consen_stat = 4;
    if (has_leader_consen_stat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *leader_consen_stat_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewBlockItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.view_block.protobuf.ViewBlockItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewBlockItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewBlockItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.view_block.protobuf.ViewBlockItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.view_block.protobuf.ViewBlockItem)
    MergeFrom(*source);
  }
}

void ViewBlockItem::MergeFrom(const ViewBlockItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.view_block.protobuf.ViewBlockItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_parent_hash();
      parent_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_debug();
      debug_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.debug_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_block_info()->::shardora::block::protobuf::Block::MergeFrom(from.block_info());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_qc()->::shardora::view_block::protobuf::QcItem::MergeFrom(from.qc());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_leader_consen_stat()->::shardora::view_block::protobuf::MemberConsensusStat::MergeFrom(from.leader_consen_stat());
    }
  }
}

void ViewBlockItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.view_block.protobuf.ViewBlockItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewBlockItem::CopyFrom(const ViewBlockItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.view_block.protobuf.ViewBlockItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewBlockItem::IsInitialized() const {
  if (has_block_info()) {
    if (!this->block_info_->IsInitialized()) return false;
  }
  return true;
}

void ViewBlockItem::Swap(ViewBlockItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ViewBlockItem::InternalSwap(ViewBlockItem* other) {
  using std::swap;
  parent_hash_.Swap(&other->parent_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  debug_.Swap(&other->debug_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(block_info_, other->block_info_);
  swap(qc_, other->qc_);
  swap(leader_consen_stat_, other->leader_consen_stat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ViewBlockItem::GetMetadata() const {
  protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemberConsensusStat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberConsensusStat::kSuccNumFieldNumber;
const int MemberConsensusStat::kFailNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberConsensusStat::MemberConsensusStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_MemberConsensusStat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.view_block.protobuf.MemberConsensusStat)
}
MemberConsensusStat::MemberConsensusStat(const MemberConsensusStat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&succ_num_, &from.succ_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&fail_num_) -
    reinterpret_cast<char*>(&succ_num_)) + sizeof(fail_num_));
  // @@protoc_insertion_point(copy_constructor:shardora.view_block.protobuf.MemberConsensusStat)
}

void MemberConsensusStat::SharedCtor() {
  ::memset(&succ_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fail_num_) -
      reinterpret_cast<char*>(&succ_num_)) + sizeof(fail_num_));
}

MemberConsensusStat::~MemberConsensusStat() {
  // @@protoc_insertion_point(destructor:shardora.view_block.protobuf.MemberConsensusStat)
  SharedDtor();
}

void MemberConsensusStat::SharedDtor() {
}

void MemberConsensusStat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemberConsensusStat::descriptor() {
  ::protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberConsensusStat& MemberConsensusStat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fview_5fblock_2eproto::scc_info_MemberConsensusStat.base);
  return *internal_default_instance();
}


void MemberConsensusStat::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.view_block.protobuf.MemberConsensusStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&succ_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fail_num_) -
        reinterpret_cast<char*>(&succ_num_)) + sizeof(fail_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemberConsensusStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.view_block.protobuf.MemberConsensusStat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 succ_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_succ_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &succ_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 fail_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_fail_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fail_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.view_block.protobuf.MemberConsensusStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.view_block.protobuf.MemberConsensusStat)
  return false;
#undef DO_
}

void MemberConsensusStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.view_block.protobuf.MemberConsensusStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 succ_num = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->succ_num(), output);
  }

  // optional uint32 fail_num = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fail_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.view_block.protobuf.MemberConsensusStat)
}

::google::protobuf::uint8* MemberConsensusStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.view_block.protobuf.MemberConsensusStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 succ_num = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->succ_num(), target);
  }

  // optional uint32 fail_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fail_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.view_block.protobuf.MemberConsensusStat)
  return target;
}

size_t MemberConsensusStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.view_block.protobuf.MemberConsensusStat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 succ_num = 1;
    if (has_succ_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->succ_num());
    }

    // optional uint32 fail_num = 2;
    if (has_fail_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fail_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemberConsensusStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.view_block.protobuf.MemberConsensusStat)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberConsensusStat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberConsensusStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.view_block.protobuf.MemberConsensusStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.view_block.protobuf.MemberConsensusStat)
    MergeFrom(*source);
  }
}

void MemberConsensusStat::MergeFrom(const MemberConsensusStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.view_block.protobuf.MemberConsensusStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      succ_num_ = from.succ_num_;
    }
    if (cached_has_bits & 0x00000002u) {
      fail_num_ = from.fail_num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MemberConsensusStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.view_block.protobuf.MemberConsensusStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberConsensusStat::CopyFrom(const MemberConsensusStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.view_block.protobuf.MemberConsensusStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberConsensusStat::IsInitialized() const {
  return true;
}

void MemberConsensusStat::Swap(MemberConsensusStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberConsensusStat::InternalSwap(MemberConsensusStat* other) {
  using std::swap;
  swap(succ_num_, other->succ_num_);
  swap(fail_num_, other->fail_num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemberConsensusStat::GetMetadata() const {
  protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AggregateSig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AggregateSig::kSignXFieldNumber;
const int AggregateSig::kSignYFieldNumber;
const int AggregateSig::kSignZFieldNumber;
const int AggregateSig::kParticipantsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AggregateSig::AggregateSig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_AggregateSig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.view_block.protobuf.AggregateSig)
}
AggregateSig::AggregateSig(const AggregateSig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      participants_(from.participants_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sign_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_x()) {
    sign_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_x_);
  }
  sign_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_y()) {
    sign_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_y_);
  }
  sign_z_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_z()) {
    sign_z_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_z_);
  }
  // @@protoc_insertion_point(copy_constructor:shardora.view_block.protobuf.AggregateSig)
}

void AggregateSig::SharedCtor() {
  sign_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_z_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AggregateSig::~AggregateSig() {
  // @@protoc_insertion_point(destructor:shardora.view_block.protobuf.AggregateSig)
  SharedDtor();
}

void AggregateSig::SharedDtor() {
  sign_x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_z_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AggregateSig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AggregateSig::descriptor() {
  ::protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AggregateSig& AggregateSig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fview_5fblock_2eproto::scc_info_AggregateSig.base);
  return *internal_default_instance();
}


void AggregateSig::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.view_block.protobuf.AggregateSig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  participants_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      sign_x_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sign_y_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      sign_z_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AggregateSig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.view_block.protobuf.AggregateSig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sign_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_x()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sign_y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_y()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sign_z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_z()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 participants = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32u, input, this->mutable_participants())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_participants())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.view_block.protobuf.AggregateSig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.view_block.protobuf.AggregateSig)
  return false;
#undef DO_
}

void AggregateSig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.view_block.protobuf.AggregateSig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sign_x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sign_x(), output);
  }

  // optional bytes sign_y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sign_y(), output);
  }

  // optional bytes sign_z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sign_z(), output);
  }

  // repeated uint32 participants = 4;
  for (int i = 0, n = this->participants_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->participants(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.view_block.protobuf.AggregateSig)
}

::google::protobuf::uint8* AggregateSig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.view_block.protobuf.AggregateSig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sign_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sign_x(), target);
  }

  // optional bytes sign_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->sign_y(), target);
  }

  // optional bytes sign_z = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sign_z(), target);
  }

  // repeated uint32 participants = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(4, this->participants_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.view_block.protobuf.AggregateSig)
  return target;
}

size_t AggregateSig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.view_block.protobuf.AggregateSig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 participants = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->participants_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->participants_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes sign_x = 1;
    if (has_sign_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_x());
    }

    // optional bytes sign_y = 2;
    if (has_sign_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_y());
    }

    // optional bytes sign_z = 3;
    if (has_sign_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_z());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AggregateSig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.view_block.protobuf.AggregateSig)
  GOOGLE_DCHECK_NE(&from, this);
  const AggregateSig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AggregateSig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.view_block.protobuf.AggregateSig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.view_block.protobuf.AggregateSig)
    MergeFrom(*source);
  }
}

void AggregateSig::MergeFrom(const AggregateSig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.view_block.protobuf.AggregateSig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  participants_.MergeFrom(from.participants_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sign_x();
      sign_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_x_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sign_y();
      sign_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_y_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sign_z();
      sign_z_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_z_);
    }
  }
}

void AggregateSig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.view_block.protobuf.AggregateSig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AggregateSig::CopyFrom(const AggregateSig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.view_block.protobuf.AggregateSig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AggregateSig::IsInitialized() const {
  return true;
}

void AggregateSig::Swap(AggregateSig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AggregateSig::InternalSwap(AggregateSig* other) {
  using std::swap;
  participants_.InternalSwap(&other->participants_);
  sign_x_.Swap(&other->sign_x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_y_.Swap(&other->sign_y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_z_.Swap(&other->sign_z_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AggregateSig::GetMetadata() const {
  protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ViewBlockSyncRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewBlockSyncRequest::kNetworkIdFieldNumber;
const int ViewBlockSyncRequest::kPoolIdxFieldNumber;
const int ViewBlockSyncRequest::kViewBlockHashesFieldNumber;
const int ViewBlockSyncRequest::kHighQcViewFieldNumber;
const int ViewBlockSyncRequest::kHighTcViewFieldNumber;
const int ViewBlockSyncRequest::kMaxViewFieldNumber;
const int ViewBlockSyncRequest::kLatestCommittedBlockHashFieldNumber;
const int ViewBlockSyncRequest::kViewBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewBlockSyncRequest::ViewBlockSyncRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_ViewBlockSyncRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.view_block.protobuf.ViewBlockSyncRequest)
}
ViewBlockSyncRequest::ViewBlockSyncRequest(const ViewBlockSyncRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      view_block_hashes_(from.view_block_hashes_),
      view_blocks_(from.view_blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  latest_committed_block_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_latest_committed_block_hash()) {
    latest_committed_block_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latest_committed_block_hash_);
  }
  ::memcpy(&network_id_, &from.network_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_view_) -
    reinterpret_cast<char*>(&network_id_)) + sizeof(max_view_));
  // @@protoc_insertion_point(copy_constructor:shardora.view_block.protobuf.ViewBlockSyncRequest)
}

void ViewBlockSyncRequest::SharedCtor() {
  latest_committed_block_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&network_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_view_) -
      reinterpret_cast<char*>(&network_id_)) + sizeof(max_view_));
}

ViewBlockSyncRequest::~ViewBlockSyncRequest() {
  // @@protoc_insertion_point(destructor:shardora.view_block.protobuf.ViewBlockSyncRequest)
  SharedDtor();
}

void ViewBlockSyncRequest::SharedDtor() {
  latest_committed_block_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ViewBlockSyncRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ViewBlockSyncRequest::descriptor() {
  ::protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewBlockSyncRequest& ViewBlockSyncRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fview_5fblock_2eproto::scc_info_ViewBlockSyncRequest.base);
  return *internal_default_instance();
}


void ViewBlockSyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.view_block.protobuf.ViewBlockSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  view_block_hashes_.Clear();
  view_blocks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    latest_committed_block_hash_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 62u) {
    ::memset(&network_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_view_) -
        reinterpret_cast<char*>(&network_id_)) + sizeof(max_view_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ViewBlockSyncRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.view_block.protobuf.ViewBlockSyncRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_network_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pool_idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pool_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pool_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes view_block_hashes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_view_block_hashes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 high_qc_view = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_high_qc_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &high_qc_view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 high_tc_view = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_high_tc_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &high_tc_view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 max_view = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_max_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes latest_committed_block_hash = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_latest_committed_block_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .shardora.view_block.protobuf.ViewBlockItem view_blocks = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_view_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.view_block.protobuf.ViewBlockSyncRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.view_block.protobuf.ViewBlockSyncRequest)
  return false;
#undef DO_
}

void ViewBlockSyncRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.view_block.protobuf.ViewBlockSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->network_id(), output);
  }

  // optional uint32 pool_idx = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pool_idx(), output);
  }

  // repeated bytes view_block_hashes = 3;
  for (int i = 0, n = this->view_block_hashes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->view_block_hashes(i), output);
  }

  // optional uint64 high_qc_view = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->high_qc_view(), output);
  }

  // optional uint64 high_tc_view = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->high_tc_view(), output);
  }

  // optional uint64 max_view = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->max_view(), output);
  }

  // optional bytes latest_committed_block_hash = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->latest_committed_block_hash(), output);
  }

  // repeated .shardora.view_block.protobuf.ViewBlockItem view_blocks = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->view_blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->view_blocks(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.view_block.protobuf.ViewBlockSyncRequest)
}

::google::protobuf::uint8* ViewBlockSyncRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.view_block.protobuf.ViewBlockSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->network_id(), target);
  }

  // optional uint32 pool_idx = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pool_idx(), target);
  }

  // repeated bytes view_block_hashes = 3;
  for (int i = 0, n = this->view_block_hashes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->view_block_hashes(i), target);
  }

  // optional uint64 high_qc_view = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->high_qc_view(), target);
  }

  // optional uint64 high_tc_view = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->high_tc_view(), target);
  }

  // optional uint64 max_view = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->max_view(), target);
  }

  // optional bytes latest_committed_block_hash = 7;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->latest_committed_block_hash(), target);
  }

  // repeated .shardora.view_block.protobuf.ViewBlockItem view_blocks = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->view_blocks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->view_blocks(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.view_block.protobuf.ViewBlockSyncRequest)
  return target;
}

size_t ViewBlockSyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.view_block.protobuf.ViewBlockSyncRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes view_block_hashes = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->view_block_hashes_size());
  for (int i = 0, n = this->view_block_hashes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->view_block_hashes(i));
  }

  // repeated .shardora.view_block.protobuf.ViewBlockItem view_blocks = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->view_blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->view_blocks(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes latest_committed_block_hash = 7;
    if (has_latest_committed_block_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->latest_committed_block_hash());
    }

    // optional uint32 network_id = 1;
    if (has_network_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_id());
    }

    // optional uint32 pool_idx = 2;
    if (has_pool_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pool_idx());
    }

    // optional uint64 high_qc_view = 4;
    if (has_high_qc_view()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->high_qc_view());
    }

    // optional uint64 high_tc_view = 5;
    if (has_high_tc_view()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->high_tc_view());
    }

    // optional uint64 max_view = 6;
    if (has_max_view()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->max_view());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewBlockSyncRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.view_block.protobuf.ViewBlockSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewBlockSyncRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewBlockSyncRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.view_block.protobuf.ViewBlockSyncRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.view_block.protobuf.ViewBlockSyncRequest)
    MergeFrom(*source);
  }
}

void ViewBlockSyncRequest::MergeFrom(const ViewBlockSyncRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.view_block.protobuf.ViewBlockSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  view_block_hashes_.MergeFrom(from.view_block_hashes_);
  view_blocks_.MergeFrom(from.view_blocks_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_latest_committed_block_hash();
      latest_committed_block_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latest_committed_block_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      network_id_ = from.network_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      pool_idx_ = from.pool_idx_;
    }
    if (cached_has_bits & 0x00000008u) {
      high_qc_view_ = from.high_qc_view_;
    }
    if (cached_has_bits & 0x00000010u) {
      high_tc_view_ = from.high_tc_view_;
    }
    if (cached_has_bits & 0x00000020u) {
      max_view_ = from.max_view_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ViewBlockSyncRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.view_block.protobuf.ViewBlockSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewBlockSyncRequest::CopyFrom(const ViewBlockSyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.view_block.protobuf.ViewBlockSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewBlockSyncRequest::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->view_blocks())) return false;
  return true;
}

void ViewBlockSyncRequest::Swap(ViewBlockSyncRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ViewBlockSyncRequest::InternalSwap(ViewBlockSyncRequest* other) {
  using std::swap;
  view_block_hashes_.InternalSwap(CastToBase(&other->view_block_hashes_));
  CastToBase(&view_blocks_)->InternalSwap(CastToBase(&other->view_blocks_));
  latest_committed_block_hash_.Swap(&other->latest_committed_block_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(network_id_, other->network_id_);
  swap(pool_idx_, other->pool_idx_);
  swap(high_qc_view_, other->high_qc_view_);
  swap(high_tc_view_, other->high_tc_view_);
  swap(max_view_, other->max_view_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ViewBlockSyncRequest::GetMetadata() const {
  protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ViewBlockSyncResponse::InitAsDefaultInstance() {
  ::shardora::view_block::protobuf::_ViewBlockSyncResponse_default_instance_._instance.get_mutable()->high_view_block_ = const_cast< ::shardora::view_block::protobuf::ViewBlockItem*>(
      ::shardora::view_block::protobuf::ViewBlockItem::internal_default_instance());
  ::shardora::view_block::protobuf::_ViewBlockSyncResponse_default_instance_._instance.get_mutable()->high_tc_ = const_cast< ::shardora::view_block::protobuf::QcItem*>(
      ::shardora::view_block::protobuf::QcItem::internal_default_instance());
  ::shardora::view_block::protobuf::_ViewBlockSyncResponse_default_instance_._instance.get_mutable()->latest_committed_block_ = const_cast< ::shardora::view_block::protobuf::ViewBlockItem*>(
      ::shardora::view_block::protobuf::ViewBlockItem::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewBlockSyncResponse::kNetworkIdFieldNumber;
const int ViewBlockSyncResponse::kPoolIdxFieldNumber;
const int ViewBlockSyncResponse::kViewBlockItemsFieldNumber;
const int ViewBlockSyncResponse::kHighViewBlockFieldNumber;
const int ViewBlockSyncResponse::kHighTcFieldNumber;
const int ViewBlockSyncResponse::kQueryHashFieldNumber;
const int ViewBlockSyncResponse::kLatestCommittedBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewBlockSyncResponse::ViewBlockSyncResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_ViewBlockSyncResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.view_block.protobuf.ViewBlockSyncResponse)
}
ViewBlockSyncResponse::ViewBlockSyncResponse(const ViewBlockSyncResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      view_block_items_(from.view_block_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_query_hash()) {
    query_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_hash_);
  }
  if (from.has_high_view_block()) {
    high_view_block_ = new ::shardora::view_block::protobuf::ViewBlockItem(*from.high_view_block_);
  } else {
    high_view_block_ = NULL;
  }
  if (from.has_high_tc()) {
    high_tc_ = new ::shardora::view_block::protobuf::QcItem(*from.high_tc_);
  } else {
    high_tc_ = NULL;
  }
  if (from.has_latest_committed_block()) {
    latest_committed_block_ = new ::shardora::view_block::protobuf::ViewBlockItem(*from.latest_committed_block_);
  } else {
    latest_committed_block_ = NULL;
  }
  ::memcpy(&network_id_, &from.network_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&pool_idx_) -
    reinterpret_cast<char*>(&network_id_)) + sizeof(pool_idx_));
  // @@protoc_insertion_point(copy_constructor:shardora.view_block.protobuf.ViewBlockSyncResponse)
}

void ViewBlockSyncResponse::SharedCtor() {
  query_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&high_view_block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pool_idx_) -
      reinterpret_cast<char*>(&high_view_block_)) + sizeof(pool_idx_));
}

ViewBlockSyncResponse::~ViewBlockSyncResponse() {
  // @@protoc_insertion_point(destructor:shardora.view_block.protobuf.ViewBlockSyncResponse)
  SharedDtor();
}

void ViewBlockSyncResponse::SharedDtor() {
  query_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete high_view_block_;
  if (this != internal_default_instance()) delete high_tc_;
  if (this != internal_default_instance()) delete latest_committed_block_;
}

void ViewBlockSyncResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ViewBlockSyncResponse::descriptor() {
  ::protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewBlockSyncResponse& ViewBlockSyncResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fview_5fblock_2eproto::scc_info_ViewBlockSyncResponse.base);
  return *internal_default_instance();
}


void ViewBlockSyncResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.view_block.protobuf.ViewBlockSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  view_block_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      query_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(high_view_block_ != NULL);
      high_view_block_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(high_tc_ != NULL);
      high_tc_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(latest_committed_block_ != NULL);
      latest_committed_block_->Clear();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&network_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pool_idx_) -
        reinterpret_cast<char*>(&network_id_)) + sizeof(pool_idx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ViewBlockSyncResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.view_block.protobuf.ViewBlockSyncResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_network_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pool_idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pool_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pool_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .shardora.view_block.protobuf.ViewBlockItem view_block_items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_view_block_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.view_block.protobuf.ViewBlockItem high_view_block = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_high_view_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.view_block.protobuf.QcItem high_tc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_high_tc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes query_hash = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_query_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.view_block.protobuf.ViewBlockItem latest_committed_block = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_latest_committed_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.view_block.protobuf.ViewBlockSyncResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.view_block.protobuf.ViewBlockSyncResponse)
  return false;
#undef DO_
}

void ViewBlockSyncResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.view_block.protobuf.ViewBlockSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->network_id(), output);
  }

  // optional uint32 pool_idx = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pool_idx(), output);
  }

  // repeated .shardora.view_block.protobuf.ViewBlockItem view_block_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->view_block_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->view_block_items(static_cast<int>(i)),
      output);
  }

  // optional .shardora.view_block.protobuf.ViewBlockItem high_view_block = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_high_view_block(), output);
  }

  // optional .shardora.view_block.protobuf.QcItem high_tc = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_high_tc(), output);
  }

  // optional bytes query_hash = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->query_hash(), output);
  }

  // optional .shardora.view_block.protobuf.ViewBlockItem latest_committed_block = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_latest_committed_block(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.view_block.protobuf.ViewBlockSyncResponse)
}

::google::protobuf::uint8* ViewBlockSyncResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.view_block.protobuf.ViewBlockSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->network_id(), target);
  }

  // optional uint32 pool_idx = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pool_idx(), target);
  }

  // repeated .shardora.view_block.protobuf.ViewBlockItem view_block_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->view_block_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->view_block_items(static_cast<int>(i)), deterministic, target);
  }

  // optional .shardora.view_block.protobuf.ViewBlockItem high_view_block = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_high_view_block(), deterministic, target);
  }

  // optional .shardora.view_block.protobuf.QcItem high_tc = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_high_tc(), deterministic, target);
  }

  // optional bytes query_hash = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->query_hash(), target);
  }

  // optional .shardora.view_block.protobuf.ViewBlockItem latest_committed_block = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_latest_committed_block(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.view_block.protobuf.ViewBlockSyncResponse)
  return target;
}

size_t ViewBlockSyncResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.view_block.protobuf.ViewBlockSyncResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .shardora.view_block.protobuf.ViewBlockItem view_block_items = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->view_block_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->view_block_items(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes query_hash = 6;
    if (has_query_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->query_hash());
    }

    // optional .shardora.view_block.protobuf.ViewBlockItem high_view_block = 4;
    if (has_high_view_block()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *high_view_block_);
    }

    // optional .shardora.view_block.protobuf.QcItem high_tc = 5;
    if (has_high_tc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *high_tc_);
    }

    // optional .shardora.view_block.protobuf.ViewBlockItem latest_committed_block = 7;
    if (has_latest_committed_block()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *latest_committed_block_);
    }

    // optional uint32 network_id = 1;
    if (has_network_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_id());
    }

    // optional uint32 pool_idx = 2;
    if (has_pool_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pool_idx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewBlockSyncResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.view_block.protobuf.ViewBlockSyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewBlockSyncResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewBlockSyncResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.view_block.protobuf.ViewBlockSyncResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.view_block.protobuf.ViewBlockSyncResponse)
    MergeFrom(*source);
  }
}

void ViewBlockSyncResponse::MergeFrom(const ViewBlockSyncResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.view_block.protobuf.ViewBlockSyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  view_block_items_.MergeFrom(from.view_block_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_query_hash();
      query_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_high_view_block()->::shardora::view_block::protobuf::ViewBlockItem::MergeFrom(from.high_view_block());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_high_tc()->::shardora::view_block::protobuf::QcItem::MergeFrom(from.high_tc());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_latest_committed_block()->::shardora::view_block::protobuf::ViewBlockItem::MergeFrom(from.latest_committed_block());
    }
    if (cached_has_bits & 0x00000010u) {
      network_id_ = from.network_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      pool_idx_ = from.pool_idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ViewBlockSyncResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.view_block.protobuf.ViewBlockSyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewBlockSyncResponse::CopyFrom(const ViewBlockSyncResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.view_block.protobuf.ViewBlockSyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewBlockSyncResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->view_block_items())) return false;
  if (has_high_view_block()) {
    if (!this->high_view_block_->IsInitialized()) return false;
  }
  if (has_latest_committed_block()) {
    if (!this->latest_committed_block_->IsInitialized()) return false;
  }
  return true;
}

void ViewBlockSyncResponse::Swap(ViewBlockSyncResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ViewBlockSyncResponse::InternalSwap(ViewBlockSyncResponse* other) {
  using std::swap;
  CastToBase(&view_block_items_)->InternalSwap(CastToBase(&other->view_block_items_));
  query_hash_.Swap(&other->query_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(high_view_block_, other->high_view_block_);
  swap(high_tc_, other->high_tc_);
  swap(latest_committed_block_, other->latest_committed_block_);
  swap(network_id_, other->network_id_);
  swap(pool_idx_, other->pool_idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ViewBlockSyncResponse::GetMetadata() const {
  protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SingleViewBlockSyncRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SingleViewBlockSyncRequest::kNetworkIdFieldNumber;
const int SingleViewBlockSyncRequest::kPoolIdxFieldNumber;
const int SingleViewBlockSyncRequest::kQueryHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SingleViewBlockSyncRequest::SingleViewBlockSyncRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_SingleViewBlockSyncRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
}
SingleViewBlockSyncRequest::SingleViewBlockSyncRequest(const SingleViewBlockSyncRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_query_hash()) {
    query_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_hash_);
  }
  ::memcpy(&network_id_, &from.network_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&pool_idx_) -
    reinterpret_cast<char*>(&network_id_)) + sizeof(pool_idx_));
  // @@protoc_insertion_point(copy_constructor:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
}

void SingleViewBlockSyncRequest::SharedCtor() {
  query_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&network_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pool_idx_) -
      reinterpret_cast<char*>(&network_id_)) + sizeof(pool_idx_));
}

SingleViewBlockSyncRequest::~SingleViewBlockSyncRequest() {
  // @@protoc_insertion_point(destructor:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  SharedDtor();
}

void SingleViewBlockSyncRequest::SharedDtor() {
  query_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SingleViewBlockSyncRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SingleViewBlockSyncRequest::descriptor() {
  ::protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SingleViewBlockSyncRequest& SingleViewBlockSyncRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fview_5fblock_2eproto::scc_info_SingleViewBlockSyncRequest.base);
  return *internal_default_instance();
}


void SingleViewBlockSyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    query_hash_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&network_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pool_idx_) -
        reinterpret_cast<char*>(&network_id_)) + sizeof(pool_idx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SingleViewBlockSyncRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_network_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pool_idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pool_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pool_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes query_hash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_query_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  return false;
#undef DO_
}

void SingleViewBlockSyncRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->network_id(), output);
  }

  // optional uint32 pool_idx = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pool_idx(), output);
  }

  // optional bytes query_hash = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->query_hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
}

::google::protobuf::uint8* SingleViewBlockSyncRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 network_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->network_id(), target);
  }

  // optional uint32 pool_idx = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pool_idx(), target);
  }

  // optional bytes query_hash = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->query_hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  return target;
}

size_t SingleViewBlockSyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes query_hash = 3;
    if (has_query_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->query_hash());
    }

    // optional uint32 network_id = 1;
    if (has_network_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->network_id());
    }

    // optional uint32 pool_idx = 2;
    if (has_pool_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pool_idx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SingleViewBlockSyncRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SingleViewBlockSyncRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SingleViewBlockSyncRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
    MergeFrom(*source);
  }
}

void SingleViewBlockSyncRequest::MergeFrom(const SingleViewBlockSyncRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_query_hash();
      query_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      network_id_ = from.network_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      pool_idx_ = from.pool_idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SingleViewBlockSyncRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleViewBlockSyncRequest::CopyFrom(const SingleViewBlockSyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.view_block.protobuf.SingleViewBlockSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleViewBlockSyncRequest::IsInitialized() const {
  return true;
}

void SingleViewBlockSyncRequest::Swap(SingleViewBlockSyncRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SingleViewBlockSyncRequest::InternalSwap(SingleViewBlockSyncRequest* other) {
  using std::swap;
  query_hash_.Swap(&other->query_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(network_id_, other->network_id_);
  swap(pool_idx_, other->pool_idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SingleViewBlockSyncRequest::GetMetadata() const {
  protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ViewBlockSyncMessage::InitAsDefaultInstance() {
  ::shardora::view_block::protobuf::_ViewBlockSyncMessage_default_instance_._instance.get_mutable()->view_block_req_ = const_cast< ::shardora::view_block::protobuf::ViewBlockSyncRequest*>(
      ::shardora::view_block::protobuf::ViewBlockSyncRequest::internal_default_instance());
  ::shardora::view_block::protobuf::_ViewBlockSyncMessage_default_instance_._instance.get_mutable()->view_block_res_ = const_cast< ::shardora::view_block::protobuf::ViewBlockSyncResponse*>(
      ::shardora::view_block::protobuf::ViewBlockSyncResponse::internal_default_instance());
  ::shardora::view_block::protobuf::_ViewBlockSyncMessage_default_instance_._instance.get_mutable()->single_req_ = const_cast< ::shardora::view_block::protobuf::SingleViewBlockSyncRequest*>(
      ::shardora::view_block::protobuf::SingleViewBlockSyncRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ViewBlockSyncMessage::kViewBlockReqFieldNumber;
const int ViewBlockSyncMessage::kViewBlockResFieldNumber;
const int ViewBlockSyncMessage::kSingleReqFieldNumber;
const int ViewBlockSyncMessage::kCreateTimeUsFieldNumber;
const int ViewBlockSyncMessage::kSrcIpFieldNumber;
const int ViewBlockSyncMessage::kSrcPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ViewBlockSyncMessage::ViewBlockSyncMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_ViewBlockSyncMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.view_block.protobuf.ViewBlockSyncMessage)
}
ViewBlockSyncMessage::ViewBlockSyncMessage(const ViewBlockSyncMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  src_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_src_ip()) {
    src_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_ip_);
  }
  if (from.has_view_block_req()) {
    view_block_req_ = new ::shardora::view_block::protobuf::ViewBlockSyncRequest(*from.view_block_req_);
  } else {
    view_block_req_ = NULL;
  }
  if (from.has_view_block_res()) {
    view_block_res_ = new ::shardora::view_block::protobuf::ViewBlockSyncResponse(*from.view_block_res_);
  } else {
    view_block_res_ = NULL;
  }
  if (from.has_single_req()) {
    single_req_ = new ::shardora::view_block::protobuf::SingleViewBlockSyncRequest(*from.single_req_);
  } else {
    single_req_ = NULL;
  }
  ::memcpy(&create_time_us_, &from.create_time_us_,
    static_cast<size_t>(reinterpret_cast<char*>(&src_port_) -
    reinterpret_cast<char*>(&create_time_us_)) + sizeof(src_port_));
  // @@protoc_insertion_point(copy_constructor:shardora.view_block.protobuf.ViewBlockSyncMessage)
}

void ViewBlockSyncMessage::SharedCtor() {
  src_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&view_block_req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&src_port_) -
      reinterpret_cast<char*>(&view_block_req_)) + sizeof(src_port_));
}

ViewBlockSyncMessage::~ViewBlockSyncMessage() {
  // @@protoc_insertion_point(destructor:shardora.view_block.protobuf.ViewBlockSyncMessage)
  SharedDtor();
}

void ViewBlockSyncMessage::SharedDtor() {
  src_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete view_block_req_;
  if (this != internal_default_instance()) delete view_block_res_;
  if (this != internal_default_instance()) delete single_req_;
}

void ViewBlockSyncMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ViewBlockSyncMessage::descriptor() {
  ::protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ViewBlockSyncMessage& ViewBlockSyncMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fview_5fblock_2eproto::scc_info_ViewBlockSyncMessage.base);
  return *internal_default_instance();
}


void ViewBlockSyncMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.view_block.protobuf.ViewBlockSyncMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      src_ip_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(view_block_req_ != NULL);
      view_block_req_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(view_block_res_ != NULL);
      view_block_res_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(single_req_ != NULL);
      single_req_->Clear();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&create_time_us_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&src_port_) -
        reinterpret_cast<char*>(&create_time_us_)) + sizeof(src_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ViewBlockSyncMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.view_block.protobuf.ViewBlockSyncMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .shardora.view_block.protobuf.ViewBlockSyncRequest view_block_req = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view_block_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.view_block.protobuf.ViewBlockSyncResponse view_block_res = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view_block_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.view_block.protobuf.SingleViewBlockSyncRequest single_req = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_single_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 create_time_us = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_create_time_us();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &create_time_us_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes src_ip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_src_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 src_port = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_src_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &src_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.view_block.protobuf.ViewBlockSyncMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.view_block.protobuf.ViewBlockSyncMessage)
  return false;
#undef DO_
}

void ViewBlockSyncMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.view_block.protobuf.ViewBlockSyncMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.view_block.protobuf.ViewBlockSyncRequest view_block_req = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_view_block_req(), output);
  }

  // optional .shardora.view_block.protobuf.ViewBlockSyncResponse view_block_res = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_view_block_res(), output);
  }

  // optional .shardora.view_block.protobuf.SingleViewBlockSyncRequest single_req = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_single_req(), output);
  }

  // optional uint32 create_time_us = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->create_time_us(), output);
  }

  // optional bytes src_ip = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->src_ip(), output);
  }

  // optional uint32 src_port = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->src_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.view_block.protobuf.ViewBlockSyncMessage)
}

::google::protobuf::uint8* ViewBlockSyncMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.view_block.protobuf.ViewBlockSyncMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .shardora.view_block.protobuf.ViewBlockSyncRequest view_block_req = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_view_block_req(), deterministic, target);
  }

  // optional .shardora.view_block.protobuf.ViewBlockSyncResponse view_block_res = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_view_block_res(), deterministic, target);
  }

  // optional .shardora.view_block.protobuf.SingleViewBlockSyncRequest single_req = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_single_req(), deterministic, target);
  }

  // optional uint32 create_time_us = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->create_time_us(), target);
  }

  // optional bytes src_ip = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->src_ip(), target);
  }

  // optional uint32 src_port = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->src_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.view_block.protobuf.ViewBlockSyncMessage)
  return target;
}

size_t ViewBlockSyncMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.view_block.protobuf.ViewBlockSyncMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes src_ip = 5;
    if (has_src_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->src_ip());
    }

    // optional .shardora.view_block.protobuf.ViewBlockSyncRequest view_block_req = 1;
    if (has_view_block_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *view_block_req_);
    }

    // optional .shardora.view_block.protobuf.ViewBlockSyncResponse view_block_res = 2;
    if (has_view_block_res()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *view_block_res_);
    }

    // optional .shardora.view_block.protobuf.SingleViewBlockSyncRequest single_req = 3;
    if (has_single_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *single_req_);
    }

    // optional uint32 create_time_us = 4;
    if (has_create_time_us()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->create_time_us());
    }

    // optional uint32 src_port = 6;
    if (has_src_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->src_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ViewBlockSyncMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.view_block.protobuf.ViewBlockSyncMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ViewBlockSyncMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ViewBlockSyncMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.view_block.protobuf.ViewBlockSyncMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.view_block.protobuf.ViewBlockSyncMessage)
    MergeFrom(*source);
  }
}

void ViewBlockSyncMessage::MergeFrom(const ViewBlockSyncMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.view_block.protobuf.ViewBlockSyncMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_src_ip();
      src_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_view_block_req()->::shardora::view_block::protobuf::ViewBlockSyncRequest::MergeFrom(from.view_block_req());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_view_block_res()->::shardora::view_block::protobuf::ViewBlockSyncResponse::MergeFrom(from.view_block_res());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_single_req()->::shardora::view_block::protobuf::SingleViewBlockSyncRequest::MergeFrom(from.single_req());
    }
    if (cached_has_bits & 0x00000010u) {
      create_time_us_ = from.create_time_us_;
    }
    if (cached_has_bits & 0x00000020u) {
      src_port_ = from.src_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ViewBlockSyncMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.view_block.protobuf.ViewBlockSyncMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ViewBlockSyncMessage::CopyFrom(const ViewBlockSyncMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.view_block.protobuf.ViewBlockSyncMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ViewBlockSyncMessage::IsInitialized() const {
  if (has_view_block_req()) {
    if (!this->view_block_req_->IsInitialized()) return false;
  }
  if (has_view_block_res()) {
    if (!this->view_block_res_->IsInitialized()) return false;
  }
  return true;
}

void ViewBlockSyncMessage::Swap(ViewBlockSyncMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ViewBlockSyncMessage::InternalSwap(ViewBlockSyncMessage* other) {
  using std::swap;
  src_ip_.Swap(&other->src_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(view_block_req_, other->view_block_req_);
  swap(view_block_res_, other->view_block_res_);
  swap(single_req_, other->single_req_);
  swap(create_time_us_, other->create_time_us_);
  swap(src_port_, other->src_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ViewBlockSyncMessage::GetMetadata() const {
  protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeoutMessage::InitAsDefaultInstance() {
  ::shardora::view_block::protobuf::_TimeoutMessage_default_instance_._instance.get_mutable()->view_sig_ = const_cast< ::shardora::view_block::protobuf::AggregateSig*>(
      ::shardora::view_block::protobuf::AggregateSig::internal_default_instance());
  ::shardora::view_block::protobuf::_TimeoutMessage_default_instance_._instance.get_mutable()->high_qc_ = const_cast< ::shardora::view_block::protobuf::QcItem*>(
      ::shardora::view_block::protobuf::QcItem::internal_default_instance());
  ::shardora::view_block::protobuf::_TimeoutMessage_default_instance_._instance.get_mutable()->high_qc_sig_ = const_cast< ::shardora::view_block::protobuf::AggregateSig*>(
      ::shardora::view_block::protobuf::AggregateSig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeoutMessage::kMemberIdFieldNumber;
const int TimeoutMessage::kViewFieldNumber;
const int TimeoutMessage::kSignXFieldNumber;
const int TimeoutMessage::kSignYFieldNumber;
const int TimeoutMessage::kViewHashFieldNumber;
const int TimeoutMessage::kElectHeightFieldNumber;
const int TimeoutMessage::kPoolIdxFieldNumber;
const int TimeoutMessage::kLeaderIdxFieldNumber;
const int TimeoutMessage::kViewSigFieldNumber;
const int TimeoutMessage::kHighQcFieldNumber;
const int TimeoutMessage::kHighQcSigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeoutMessage::TimeoutMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fview_5fblock_2eproto::scc_info_TimeoutMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:shardora.view_block.protobuf.TimeoutMessage)
}
TimeoutMessage::TimeoutMessage(const TimeoutMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sign_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_x()) {
    sign_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_x_);
  }
  sign_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign_y()) {
    sign_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_y_);
  }
  view_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_view_hash()) {
    view_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_hash_);
  }
  if (from.has_view_sig()) {
    view_sig_ = new ::shardora::view_block::protobuf::AggregateSig(*from.view_sig_);
  } else {
    view_sig_ = NULL;
  }
  if (from.has_high_qc()) {
    high_qc_ = new ::shardora::view_block::protobuf::QcItem(*from.high_qc_);
  } else {
    high_qc_ = NULL;
  }
  if (from.has_high_qc_sig()) {
    high_qc_sig_ = new ::shardora::view_block::protobuf::AggregateSig(*from.high_qc_sig_);
  } else {
    high_qc_sig_ = NULL;
  }
  ::memcpy(&view_, &from.view_,
    static_cast<size_t>(reinterpret_cast<char*>(&leader_idx_) -
    reinterpret_cast<char*>(&view_)) + sizeof(leader_idx_));
  // @@protoc_insertion_point(copy_constructor:shardora.view_block.protobuf.TimeoutMessage)
}

void TimeoutMessage::SharedCtor() {
  sign_x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&view_sig_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&leader_idx_) -
      reinterpret_cast<char*>(&view_sig_)) + sizeof(leader_idx_));
}

TimeoutMessage::~TimeoutMessage() {
  // @@protoc_insertion_point(destructor:shardora.view_block.protobuf.TimeoutMessage)
  SharedDtor();
}

void TimeoutMessage::SharedDtor() {
  sign_x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  view_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete view_sig_;
  if (this != internal_default_instance()) delete high_qc_;
  if (this != internal_default_instance()) delete high_qc_sig_;
}

void TimeoutMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TimeoutMessage::descriptor() {
  ::protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeoutMessage& TimeoutMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fview_5fblock_2eproto::scc_info_TimeoutMessage.base);
  return *internal_default_instance();
}


void TimeoutMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:shardora.view_block.protobuf.TimeoutMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      sign_x_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sign_y_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      view_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(view_sig_ != NULL);
      view_sig_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(high_qc_ != NULL);
      high_qc_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(high_qc_sig_ != NULL);
      high_qc_sig_->Clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&view_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&member_id_) -
        reinterpret_cast<char*>(&view_)) + sizeof(member_id_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&pool_idx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&leader_idx_) -
        reinterpret_cast<char*>(&pool_idx_)) + sizeof(leader_idx_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TimeoutMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:shardora.view_block.protobuf.TimeoutMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 member_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_member_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &member_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 view = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_view();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &view_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sign_x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_x()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sign_y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign_y()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes view_hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_view_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 elect_height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_elect_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &elect_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pool_idx = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_pool_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pool_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 leader_idx = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_leader_idx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leader_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.view_block.protobuf.AggregateSig view_sig = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view_sig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.view_block.protobuf.QcItem high_qc = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_high_qc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .shardora.view_block.protobuf.AggregateSig high_qc_sig = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_high_qc_sig()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:shardora.view_block.protobuf.TimeoutMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:shardora.view_block.protobuf.TimeoutMessage)
  return false;
#undef DO_
}

void TimeoutMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:shardora.view_block.protobuf.TimeoutMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 member_id = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->member_id(), output);
  }

  // optional uint64 view = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->view(), output);
  }

  // optional bytes sign_x = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sign_x(), output);
  }

  // optional bytes sign_y = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sign_y(), output);
  }

  // optional bytes view_hash = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->view_hash(), output);
  }

  // optional uint64 elect_height = 6;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->elect_height(), output);
  }

  // optional uint32 pool_idx = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pool_idx(), output);
  }

  // optional uint32 leader_idx = 8;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->leader_idx(), output);
  }

  // optional .shardora.view_block.protobuf.AggregateSig view_sig = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_view_sig(), output);
  }

  // optional .shardora.view_block.protobuf.QcItem high_qc = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_high_qc(), output);
  }

  // optional .shardora.view_block.protobuf.AggregateSig high_qc_sig = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_high_qc_sig(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:shardora.view_block.protobuf.TimeoutMessage)
}

::google::protobuf::uint8* TimeoutMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:shardora.view_block.protobuf.TimeoutMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 member_id = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->member_id(), target);
  }

  // optional uint64 view = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->view(), target);
  }

  // optional bytes sign_x = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sign_x(), target);
  }

  // optional bytes sign_y = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sign_y(), target);
  }

  // optional bytes view_hash = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->view_hash(), target);
  }

  // optional uint64 elect_height = 6;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->elect_height(), target);
  }

  // optional uint32 pool_idx = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pool_idx(), target);
  }

  // optional uint32 leader_idx = 8;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->leader_idx(), target);
  }

  // optional .shardora.view_block.protobuf.AggregateSig view_sig = 9;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_view_sig(), deterministic, target);
  }

  // optional .shardora.view_block.protobuf.QcItem high_qc = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_high_qc(), deterministic, target);
  }

  // optional .shardora.view_block.protobuf.AggregateSig high_qc_sig = 11;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_high_qc_sig(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:shardora.view_block.protobuf.TimeoutMessage)
  return target;
}

size_t TimeoutMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:shardora.view_block.protobuf.TimeoutMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes sign_x = 3;
    if (has_sign_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_x());
    }

    // optional bytes sign_y = 4;
    if (has_sign_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sign_y());
    }

    // optional bytes view_hash = 5;
    if (has_view_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->view_hash());
    }

    // optional .shardora.view_block.protobuf.AggregateSig view_sig = 9;
    if (has_view_sig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *view_sig_);
    }

    // optional .shardora.view_block.protobuf.QcItem high_qc = 10;
    if (has_high_qc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *high_qc_);
    }

    // optional .shardora.view_block.protobuf.AggregateSig high_qc_sig = 11;
    if (has_high_qc_sig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *high_qc_sig_);
    }

    // optional uint64 view = 2;
    if (has_view()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->view());
    }

    // optional uint32 member_id = 1;
    if (has_member_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->member_id());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional uint32 pool_idx = 7;
    if (has_pool_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pool_idx());
    }

    // optional uint64 elect_height = 6;
    if (has_elect_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->elect_height());
    }

    // optional uint32 leader_idx = 8;
    if (has_leader_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->leader_idx());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimeoutMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:shardora.view_block.protobuf.TimeoutMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeoutMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeoutMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:shardora.view_block.protobuf.TimeoutMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:shardora.view_block.protobuf.TimeoutMessage)
    MergeFrom(*source);
  }
}

void TimeoutMessage::MergeFrom(const TimeoutMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:shardora.view_block.protobuf.TimeoutMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sign_x();
      sign_x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_x_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sign_y();
      sign_y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_y_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_view_hash();
      view_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.view_hash_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_view_sig()->::shardora::view_block::protobuf::AggregateSig::MergeFrom(from.view_sig());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_high_qc()->::shardora::view_block::protobuf::QcItem::MergeFrom(from.high_qc());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_high_qc_sig()->::shardora::view_block::protobuf::AggregateSig::MergeFrom(from.high_qc_sig());
    }
    if (cached_has_bits & 0x00000040u) {
      view_ = from.view_;
    }
    if (cached_has_bits & 0x00000080u) {
      member_id_ = from.member_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      pool_idx_ = from.pool_idx_;
    }
    if (cached_has_bits & 0x00000200u) {
      elect_height_ = from.elect_height_;
    }
    if (cached_has_bits & 0x00000400u) {
      leader_idx_ = from.leader_idx_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TimeoutMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:shardora.view_block.protobuf.TimeoutMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeoutMessage::CopyFrom(const TimeoutMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shardora.view_block.protobuf.TimeoutMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeoutMessage::IsInitialized() const {
  return true;
}

void TimeoutMessage::Swap(TimeoutMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeoutMessage::InternalSwap(TimeoutMessage* other) {
  using std::swap;
  sign_x_.Swap(&other->sign_x_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_y_.Swap(&other->sign_y_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  view_hash_.Swap(&other->view_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(view_sig_, other->view_sig_);
  swap(high_qc_, other->high_qc_);
  swap(high_qc_sig_, other->high_qc_sig_);
  swap(view_, other->view_);
  swap(member_id_, other->member_id_);
  swap(pool_idx_, other->pool_idx_);
  swap(elect_height_, other->elect_height_);
  swap(leader_idx_, other->leader_idx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TimeoutMessage::GetMetadata() const {
  protobuf_protos_2fview_5fblock_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fview_5fblock_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace view_block
}  // namespace shardora
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::view_block::protobuf::QcItem* Arena::CreateMaybeMessage< ::shardora::view_block::protobuf::QcItem >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::view_block::protobuf::QcItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::view_block::protobuf::ViewBlockItem* Arena::CreateMaybeMessage< ::shardora::view_block::protobuf::ViewBlockItem >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::view_block::protobuf::ViewBlockItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::view_block::protobuf::MemberConsensusStat* Arena::CreateMaybeMessage< ::shardora::view_block::protobuf::MemberConsensusStat >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::view_block::protobuf::MemberConsensusStat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::view_block::protobuf::AggregateSig* Arena::CreateMaybeMessage< ::shardora::view_block::protobuf::AggregateSig >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::view_block::protobuf::AggregateSig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::view_block::protobuf::ViewBlockSyncRequest* Arena::CreateMaybeMessage< ::shardora::view_block::protobuf::ViewBlockSyncRequest >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::view_block::protobuf::ViewBlockSyncRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::view_block::protobuf::ViewBlockSyncResponse* Arena::CreateMaybeMessage< ::shardora::view_block::protobuf::ViewBlockSyncResponse >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::view_block::protobuf::ViewBlockSyncResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::view_block::protobuf::SingleViewBlockSyncRequest* Arena::CreateMaybeMessage< ::shardora::view_block::protobuf::SingleViewBlockSyncRequest >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::view_block::protobuf::SingleViewBlockSyncRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::view_block::protobuf::ViewBlockSyncMessage* Arena::CreateMaybeMessage< ::shardora::view_block::protobuf::ViewBlockSyncMessage >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::view_block::protobuf::ViewBlockSyncMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::shardora::view_block::protobuf::TimeoutMessage* Arena::CreateMaybeMessage< ::shardora::view_block::protobuf::TimeoutMessage >(Arena* arena) {
  return Arena::CreateInternal< ::shardora::view_block::protobuf::TimeoutMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
