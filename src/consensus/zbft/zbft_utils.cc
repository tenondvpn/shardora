#include "consensus/zbft/zbft_utils.h"

#include "consensus/consensus_utils.h"
#include "elect/elect_manager.h"
#include "network/network_utils.h"

namespace zjchain {

namespace consensus {

std::string StatusToString(uint32_t status) {
    switch (status) {
    case kConsensusInit:
        return "bft_init";
    case kConsensusPrepare:
        return "bft_prepare";
    case kConsensusPreCommit:
        return "bft_precommit";
    case kConsensusCommit:
        return "bft_commit";
    case kConsensusCommited:
        return "bft_success";
    default:
        return "unknown";
    }
}
2023-05-11 09:57:41,927 [DEBUG] [zbft_utils.cc][GetTxMessageHash][56] amount: 200000, gas_limit: 10000000, gas_price: 10, step: 9, key: 75718f3d55a4b7815b15b73d2772630493f95ea72b289da5ca0fdaf41dcde4642f8ec0cc20dc6be799068efdf8642d7272534bd0, val: 000000000000000000000000e70c72fcdb57df6844e4c44cd9f02435b628398c, block tx hash: 000000000000000064b7afce9f938f2c077ad4af11af9d490202b3920fbc0151e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea7400d03000000000080969800000000000a000000000000000900000075718f3d55a4b7815b15b73d2772630493f95ea72b289da5ca0fdaf41dcde4642f8ec0cc20dc6be799068efdf8642d7272534bd0000000000000000000000000e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea70b5dc4f2ae0d6012fd982e43c831c5b9809f12e5a24d7e1567bff2b55d022834000000000000000000000000000000000000000000000000000000000000006375718f3d55a4b7815b15b73d2772630493f95ea79076d3ce093078f999e663af8927692384ab74eeb6d422f357f29f7e7f1aff820000000000000000000000000000000000000000000000000000000000000001
2023-05-11 09:57:41,927 [DEBUG] [zbft_utils.cc][GetTxMessageHash][56] amount: 200000, gas_limit: 10000000, gas_price: 10, step: 9, key: 75718f3d55a4b7815b15b73d2772630493f95ea70b5dc4f2ae0d6012fd982e43c831c5b9809f12e5a24d7e1567bff2b55d022834, val: 0000000000000000000000000000000000000000000000000000000000000063, block tx hash: 000000000000000064b7afce9f938f2c077ad4af11af9d490202b3920fbc0151e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea7400d03000000000080969800000000000a000000000000000900000075718f3d55a4b7815b15b73d2772630493f95ea72b289da5ca0fdaf41dcde4642f8ec0cc20dc6be799068efdf8642d7272534bd0000000000000000000000000e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea70b5dc4f2ae0d6012fd982e43c831c5b9809f12e5a24d7e1567bff2b55d022834000000000000000000000000000000000000000000000000000000000000006375718f3d55a4b7815b15b73d2772630493f95ea79076d3ce093078f999e663af8927692384ab74eeb6d422f357f29f7e7f1aff820000000000000000000000000000000000000000000000000000000000000001
2023-05-11 09:57:41,927 [DEBUG] [zbft_utils.cc][GetTxMessageHash][56] amount: 200000, gas_limit: 10000000, gas_price: 10, step: 9, key: 75718f3d55a4b7815b15b73d2772630493f95ea79076d3ce093078f999e663af8927692384ab74eeb6d422f357f29f7e7f1aff82, val: 0000000000000000000000000000000000000000000000000000000000000001, block tx hash: 000000000000000064b7afce9f938f2c077ad4af11af9d490202b3920fbc0151e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea7400d03000000000080969800000000000a000000000000000900000075718f3d55a4b7815b15b73d2772630493f95ea72b289da5ca0fdaf41dcde4642f8ec0cc20dc6be799068efdf8642d7272534bd0000000000000000000000000e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea70b5dc4f2ae0d6012fd982e43c831c5b9809f12e5a24d7e1567bff2b55d022834000000000000000000000000000000000000000000000000000000000000006375718f3d55a4b7815b15b73d2772630493f95ea79076d3ce093078f999e663af8927692384ab74eeb6d422f357f29f7e7f1aff820000000000000000000000000000000000000000000000000000000000000001
2023-05-11 09:57:41,927 [DEBUG] [zbft_utils.cc][GetBlockHash][95] block.prehash(): 1fd36db3d2afa948c0adce7cbcc4f73180cb4327e818d5668c71bdf4726aef6b, height: 3,pool_idx: 254, sharding_id: 3, vss_random: 0, timeblock_height: 8, elect_height: 5, leader_idx: 0, get block hash: afbfc2130eeb19c99faf1d4dabeb223262e0c1d8827df2dfee0e77ab567ad3a2, 5c40b8b8cbac22775b3e9e54b9dc54d03b0239df1b25dcc8060ab9eb9c6194c61fd36db3d2afa948c0adce7cbcc4f73180cb4327e818d5668c71bdf4726aef6bfe00000003000000000000000000000003000000000000000800000000000000050000000000000000000000


2023-05-11 09:57:41,928 [DEBUG] [zbft_utils.cc][GetTxMessageHash][56] amount: 200000, gas_limit: 10000000, gas_price: 10, step: 9, key: 75718f3d55a4b7815b15b73d2772630493f95ea770161a71fc123366fda5b1de9ea3fd2328d7d3d840ba65908c0f9d920882ebc2, val: 000000000000000000000000e70c72fcdb57df6844e4c44cd9f02435b628398c, block tx hash: 000000000000000064b7afce9f938f2c077ad4af11af9d490202b3920fbc0151e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea7400d03000000000080969800000000000a000000000000000900000075718f3d55a4b7815b15b73d2772630493f95ea770161a71fc123366fda5b1de9ea3fd2328d7d3d840ba65908c0f9d920882ebc2000000000000000000000000e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea70b5dc4f2ae0d6012fd982e43c831c5b9809f12e5a24d7e1567bff2b55d022834000000000000000000000000000000000000000000000000000000000000006375718f3d55a4b7815b15b73d2772630493f95ea746c224a5f1efc58a0fd5fd2425d82630a7003720679d7ab26ca5f6038ca4c8f10000000000000000000000000000000000000000000000000000000000000001
2023-05-11 09:57:41,928 [DEBUG] [zbft_utils.cc][GetTxMessageHash][56] amount: 200000, gas_limit: 10000000, gas_price: 10, step: 9, key: 75718f3d55a4b7815b15b73d2772630493f95ea70b5dc4f2ae0d6012fd982e43c831c5b9809f12e5a24d7e1567bff2b55d022834, val: 0000000000000000000000000000000000000000000000000000000000000063, block tx hash: 000000000000000064b7afce9f938f2c077ad4af11af9d490202b3920fbc0151e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea7400d03000000000080969800000000000a000000000000000900000075718f3d55a4b7815b15b73d2772630493f95ea770161a71fc123366fda5b1de9ea3fd2328d7d3d840ba65908c0f9d920882ebc2000000000000000000000000e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea70b5dc4f2ae0d6012fd982e43c831c5b9809f12e5a24d7e1567bff2b55d022834000000000000000000000000000000000000000000000000000000000000006375718f3d55a4b7815b15b73d2772630493f95ea746c224a5f1efc58a0fd5fd2425d82630a7003720679d7ab26ca5f6038ca4c8f10000000000000000000000000000000000000000000000000000000000000001
2023-05-11 09:57:41,928 [DEBUG] [zbft_utils.cc][GetTxMessageHash][56] amount: 200000, gas_limit: 10000000, gas_price: 10, step: 9, key: 75718f3d55a4b7815b15b73d2772630493f95ea746c224a5f1efc58a0fd5fd2425d82630a7003720679d7ab26ca5f6038ca4c8f1, val: 0000000000000000000000000000000000000000000000000000000000000001, block tx hash: 000000000000000064b7afce9f938f2c077ad4af11af9d490202b3920fbc0151e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea7400d03000000000080969800000000000a000000000000000900000075718f3d55a4b7815b15b73d2772630493f95ea770161a71fc123366fda5b1de9ea3fd2328d7d3d840ba65908c0f9d920882ebc2000000000000000000000000e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea70b5dc4f2ae0d6012fd982e43c831c5b9809f12e5a24d7e1567bff2b55d022834000000000000000000000000000000000000000000000000000000000000006375718f3d55a4b7815b15b73d2772630493f95ea746c224a5f1efc58a0fd5fd2425d82630a7003720679d7ab26ca5f6038ca4c8f10000000000000000000000000000000000000000000000000000000000000001
2023-05-11 09:57:41,928 [DEBUG] [zbft_utils.cc][GetBlockHash][95] block.prehash(): 1fd36db3d2afa948c0adce7cbcc4f73180cb4327e818d5668c71bdf4726aef6b, height: 3,pool_idx: 254, sharding_id: 3, vss_random: 0, timeblock_height: 8, elect_height: 5, leader_idx: 0, get block hash: c3a39dcdb87cfa73b7ecc752795972e366ba5bfdcef32deff45dcc53ed7afc16, 9d23bccd19389c4632a7e7a62b80773dfabf4dad26864d666fcc1d213f2191e41fd36db3d2afa948c0adce7cbcc4f73180cb4327e818d5668c71bdf4726aef6bfe00000003000000000000000000000003000000000000000800000000000000050000000000000000000000
2023-05-11 09:57:41,928 [DEBUG] [zbft.cc][DoTransaction][638] pool index: 254, prepool index: -1, height: 3, prehash: 1fd36db3d2afa948c0adce7cbcc4f73180cb4327e818d5668c71bdf4726aef6b, hash: c3a39dcdb87cfa73b7ecc752795972e366ba5bfdcef32deff45dcc53ed7afc16


2023-05-11 09:57:41,928 [DEBUG] [zbft_utils.cc][GetTxMessageHash][56] amount: 200000, gas_limit: 10000000, gas_price: 10, step: 9, key: 75718f3d55a4b7815b15b73d2772630493f95ea70b5dc4f2ae0d6012fd982e43c831c5b9809f12e5a24d7e1567bff2b55d022834, val: 0000000000000000000000000000000000000000000000000000000000000063, block tx hash: 000000000000000064b7afce9f938f2c077ad4af11af9d490202b3920fbc0151e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea7400d03000000000080969800000000000a000000000000000900000075718f3d55a4b7815b15b73d2772630493f95ea70b5dc4f2ae0d6012fd982e43c831c5b9809f12e5a24d7e1567bff2b55d022834000000000000000000000000000000000000000000000000000000000000006375718f3d55a4b7815b15b73d2772630493f95ea78b5aed147da7bcfe8493be5d68da299cdb185ed54ad2fc9776c1d47791f49668000000000000000000000000e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea70a2e5b5cc5d2790c6a606ce97fb7e557ecefbf16a420084434672fda013b77240000000000000000000000000000000000000000000000000000000000000001
2023-05-11 09:57:41,928 [DEBUG] [zbft_utils.cc][GetTxMessageHash][56] amount: 200000, gas_limit: 10000000, gas_price: 10, step: 9, key: 75718f3d55a4b7815b15b73d2772630493f95ea78b5aed147da7bcfe8493be5d68da299cdb185ed54ad2fc9776c1d47791f49668, val: 000000000000000000000000e70c72fcdb57df6844e4c44cd9f02435b628398c, block tx hash: 000000000000000064b7afce9f938f2c077ad4af11af9d490202b3920fbc0151e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea7400d03000000000080969800000000000a000000000000000900000075718f3d55a4b7815b15b73d2772630493f95ea70b5dc4f2ae0d6012fd982e43c831c5b9809f12e5a24d7e1567bff2b55d022834000000000000000000000000000000000000000000000000000000000000006375718f3d55a4b7815b15b73d2772630493f95ea78b5aed147da7bcfe8493be5d68da299cdb185ed54ad2fc9776c1d47791f49668000000000000000000000000e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea70a2e5b5cc5d2790c6a606ce97fb7e557ecefbf16a420084434672fda013b77240000000000000000000000000000000000000000000000000000000000000001
2023-05-11 09:57:41,928 [DEBUG] [zbft_utils.cc][GetTxMessageHash][56] amount: 200000, gas_limit: 10000000, gas_price: 10, step: 9, key: 75718f3d55a4b7815b15b73d2772630493f95ea70a2e5b5cc5d2790c6a606ce97fb7e557ecefbf16a420084434672fda013b7724, val: 0000000000000000000000000000000000000000000000000000000000000001, block tx hash: 000000000000000064b7afce9f938f2c077ad4af11af9d490202b3920fbc0151e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea7400d03000000000080969800000000000a000000000000000900000075718f3d55a4b7815b15b73d2772630493f95ea70b5dc4f2ae0d6012fd982e43c831c5b9809f12e5a24d7e1567bff2b55d022834000000000000000000000000000000000000000000000000000000000000006375718f3d55a4b7815b15b73d2772630493f95ea78b5aed147da7bcfe8493be5d68da299cdb185ed54ad2fc9776c1d47791f49668000000000000000000000000e70c72fcdb57df6844e4c44cd9f02435b628398c75718f3d55a4b7815b15b73d2772630493f95ea70a2e5b5cc5d2790c6a606ce97fb7e557ecefbf16a420084434672fda013b77240000000000000000000000000000000000000000000000000000000000000001
2023-05-11 09:57:41,928 [DEBUG] [zbft_utils.cc][GetBlockHash][95] block.prehash(): 1fd36db3d2afa948c0adce7cbcc4f73180cb4327e818d5668c71bdf4726aef6b, height: 3,pool_idx: 254, sharding_id: 3, vss_random: 0, timeblock_height: 8, elect_height: 5, leader_idx: 0, get block hash: a64e28c62cea2a5d7a9729c6fa0bd712cadfa0329339a315b4fc7c8d378fe8b3, c7a0e09e1c9383dd64308a8ae9c7a4ee0339d018ba05b8dc20fa82ae7b45dbde1fd36db3d2afa948c0adce7cbcc4f73180cb4327e818d5668c71bdf4726aef6bfe00000003000000000000000000000003000000000000000800000000000000050000000000000000000000
2023-05-11 09:57:41,928 [DEBUG] [zbft.cc][DoTransaction][638] pool index: 254, prepool index: -1, height: 3, prehash: 1fd36db3d2afa948c0adce7cbcc4f73180cb4327e818d5668c71bdf4726aef6b, hash: a64e28c62cea2a5d7a9729c6fa0bd712cadfa0329339a315b4fc7c8d378fe8b3

std::string GetTxMessageHash(const block::protobuf::BlockTx& tx_info) {
    std::string message;
    message.reserve(tx_info.ByteSizeLong());
    message.append(tx_info.gid());
    message.append(tx_info.from());
    message.append(tx_info.to());
    uint64_t amount = tx_info.amount();
    message.append(std::string((char*)&amount, sizeof(amount)));
    uint64_t gas_limit = tx_info.gas_limit();
    message.append(std::string((char*)&gas_limit, sizeof(gas_limit)));
    uint64_t gas_price = tx_info.gas_price();
    message.append(std::string((char*)&gas_price, sizeof(gas_price)));
    uint32_t step = tx_info.step();
    message.append(std::string((char*)&step, sizeof(step)));
    for (int32_t i = 0; i < tx_info.storages_size(); ++i) {
        message.append(tx_info.storages(i).key());
        message.append(tx_info.storages(i).val_hash());
    }

    for (int32_t i = 0; i < tx_info.storages_size(); ++i) {
        ZJC_DEBUG("amount: %lu, gas_limit: %lu, gas_price: %lu, step: %u, key: %s, val: %s, block tx hash: %s, message: %s",
            amount, gas_limit, gas_price, step,
            common::Encode::HexEncode(tx_info.storages(i).key()).c_str(),
            common::Encode::HexEncode(tx_info.storages(i).val_hash()).c_str(),
            common::Encode::HexEncode(common::Hash::keccak256(message)).c_str(),
            common::Encode::HexEncode(message).c_str());
    }

    return common::Hash::keccak256(message);
}

std::string GetBlockHash(const block::protobuf::Block& block) {
    std::string msg;
    msg.reserve(block.tx_list_size() * 32 + 256);
    for (int32_t i = 0; i < block.tx_list_size(); i++) {
        msg.append(GetTxMessageHash(block.tx_list(i)));
    }

    msg.append(block.prehash());
    uint32_t pool_idx = block.pool_index();
    msg.append((char*)&pool_idx, sizeof(pool_idx));
    uint32_t sharding_id = block.network_id();
    msg.append((char*)&sharding_id, sizeof(sharding_id));
    uint64_t vss_random = block.consistency_random();
    msg.append((char*)&vss_random, sizeof(vss_random));
    uint64_t height = block.height();
    msg.append((char*)&height, sizeof(height));
    uint64_t timeblock_height = block.timeblock_height();
    msg.append((char*)&timeblock_height, sizeof(timeblock_height));
    uint64_t elect_height = block.electblock_height();
    msg.append((char*)&elect_height, sizeof(elect_height));
    uint32_t leader_idx = block.leader_index();
    msg.append((char*)&leader_idx, sizeof(leader_idx));
    ZJC_DEBUG("block.prehash(): %s, height: %lu,pool_idx: %u, sharding_id: %u, vss_random: %lu, "
        "timeblock_height: %lu, elect_height: %lu, leader_idx: %u, get block hash: %s, %s",
        common::Encode::HexEncode(block.prehash()).c_str(),
        height,
        pool_idx,
        sharding_id,
        vss_random,
        timeblock_height,
        elect_height,
        leader_idx,
        common::Encode::HexEncode(common::Hash::keccak256(msg)).c_str(),
        common::Encode::HexEncode(msg).c_str());
    return common::Hash::keccak256(msg);
}

uint32_t NewAccountGetNetworkId(const std::string& addr) {
    return 3;
    // return static_cast<uint32_t>((common::Hash::Hash64(addr) *
    //     vss::VssManager::Instance()->EpochRandom()) %
    //     common::GlobalInfo::Instance()->consensus_shard_count()) +
    //     network::kConsensusShardBeginNetworkId;
}

bool IsRootSingleBlockTx(uint32_t tx_type) {
    if (tx_type == common::kConsensusRootElectShard ||
            tx_type == common::kConsensusRootTimeBlock) {
        return true;
    }

    return false;
}

bool IsShardSingleBlockTx(uint32_t tx_type) {
    return IsRootSingleBlockTx(tx_type);
}

}  // namespace consensus

}  //namespace zjchain
